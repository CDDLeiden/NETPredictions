<?xml version="1.0" encoding="UTF-8"?>
<sci:data xmlns:sci="http://www.SciTegic.com/" object="SciTegic.Protocol.1" format="8.0.0">
	<sci:dbitem>
		<sci:component name="Temporal Split 2009" version="2">
			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;/p&gt;

&lt;p&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="DeclareGlobal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this protocol. Such properties can be accessed within the scope of this protocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;It is best practice to declare all global properties before use. Indeed, this practice is enforced in some contexts.&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;&lt;b&gt;When a global property needs to be scoped to the whole protocol:&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;List the new global property in the &lt;i&gt;DeclareGlobal&lt;/i&gt; parameter at the protocol level.&lt;/dd&gt;
&lt;br/&gt;
&lt;dt&gt;&lt;b&gt;To limit a global property to a subprotocol scope:&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;List the property in the subprotocol&apos;s &lt;i&gt;DeclareLocal&lt;/i&gt; parameter.&lt;/dd&gt;

&lt;p&gt;This example declares 2 global properties:&lt;/p&gt;
&lt;pre&gt;
    g_tokenHash,g_assayIdentifier
&lt;/pre&gt;

&lt;p&gt;
To initialize the declared global value with a scalar value, use the syntax:
&lt;/p&gt;

&lt;p&gt;
&lt;i&gt;property-name&lt;/i&gt; := &lt;i&gt;value&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;
You can surround text string values with quotes to aid clarity. Values of &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; are handled as boolean values.
&lt;/p&gt;
&lt;p&gt;This example declares 3 global properties, and sets initial values on two of them:&lt;/p&gt;
&lt;pre&gt;
    g_counter := 0, g_location, g_geography:=&quot;APAC&quot;
&lt;/pre&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Web Port to provide a custom user interface for a protocol.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="true">
				<sci:member>__PoolID</sci:member>
				<sci:member>Http Cookie Handling</sci:member>
				<sci:member>__NotificationProtocol</sci:member>
			</sci:arg>
			<sci:arg name="__PoolID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; is a case insensitive string that can optionally be set to optimize the speed of execution for quick running protocols.  Multiple protocols with the same value for &lt;i&gt;__PoolID&lt;/i&gt; can share expensive resources such as database connections, Java VMs, memory, etc. reducing the execution time by 1 to 2 seconds per run.  This can give a large speed improvement to protocols that run in a few seconds such as web applications and interactive reports.  Longer running protocols will not see much benefit.  Generally, it is a good idea to use the same &lt;i&gt;__PoolID&lt;/i&gt; for all protocols within a single application such as an interactive report since many of the components, databases, and data structures will be similar.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; can also be specified by the client when the protocol is launched.  If &lt;i&gt;__PoolID&lt;/i&gt; is specified both as a parameter by the client and as a parameter stored within the protocol, the client&apos;s value overrides the stored value.&lt;/p&gt;

&lt;p&gt;To disable pooling entirely for this particular protocol, set &lt;i&gt;__PoolID&lt;/i&gt; to &lt;b&gt;&amp;lt;Disable&amp;gt;&lt;/b&gt;&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Http Cookie Handling" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;Http Cookie Handling&lt;/i&gt; provides a mechanism to control the handling of Http cookies within components that access remote resources via Http and Https.  These include the &lt;a href=&quot;javascript:DoLink(&apos;{8A25024A-C274-485B-BB99-8570DCC4C075}&apos;)&quot;&gt;HTTP Connector&lt;/a&gt;, Data readers such as &lt;a href=&quot;javascript:DoLink(&apos;{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}&apos;)&quot;&gt;Text Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{93C4D73F-0B4D-03F4-B0E3-D82C4FE04C6F}&apos;)&quot;&gt;XML Reader (Generic)&lt;/a&gt;, etc., and custom Java, Perl, and .Net components that use the available APIs for accessing remote servers.  By default, New Protocols will have this setting enabled and set to &quot;Protocol Scope&quot;.  This means that Http cookies obtained from a remote server within any component in the protocol or any of its subprotocols will be parsed and appropriately sent back on subsequent requests from the same component or any other component.   The handling of the cookies is based on the IETF standard as specified in &lt;a href=&quot;javascript:DoLink(&apos;http://tools.ietf.org/html/rfc6265&apos;)&quot;&gt;http://tools.ietf.org/html/rfc6265&lt;/a&gt;.  Setting the parameter to Disabled will prevent components from parsing and returning cookies to the remote servers.&lt;/p&gt;

&lt;p&gt;Persistence of cookies is not supported, so scoping of Http cookies is entirely within the context of a single protocol execution.&lt;/p&gt;

&lt;p&gt;Older protocols that do not have the &lt;i&gt;Http Cookie Handling&lt;/i&gt; parameter will behave as though it had been set to &quot;Disabled&quot;.  To enable cookie handling in these protocols, copy this parameter from a New Protocol to the older protocol and set the parameter as desired.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">Protocol Scoped</sci:legalval>
				<sci:legalval>Disabled</sci:legalval>
			</sci:arg>
			<sci:arg name="__NotificationProtocol" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;__NotificationProtocol&lt;/i&gt; specifies the name or component ID (guid) of a protocol stored in the server&apos;s protocol database that will be executed when the current job completes. If your administrator has enabled notification protocols and depending on his or her preference, the notify protocol will either run as the anonymous user or as an admin specified user. The notification protocol receives several parameters that contain information about the original job:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;Notify_JobID&lt;/i&gt;: The job id of the execution
&lt;li&gt;&lt;i&gt;Notify_JobStatus&lt;/i&gt;: 
A description of the result of the job execution
&lt;li&gt;&lt;i&gt;Notify_JobStatusCode&lt;/i&gt;: The 
status code that for the result of the job execution.
	&lt;ul style=&quot;list-style-type:circle&quot;&gt;
	
&lt;li&gt;&lt;i&gt;5&lt;/i&gt;: Job was stopped by the client or administrator.
	&lt;li&gt;&lt;i&gt;6&lt;/i&gt;: 
Job completed normally with success.
	&lt;li&gt;&lt;i&gt;7&lt;/i&gt;: Job completed with an error.
	&lt;li&gt;&lt;i&gt;8&lt;/i&gt;: 
The process ID associated with the running job crashed or otherwise disappeared.
	&lt;li&gt;&lt;i&gt;9&lt;/i&gt;: 
Job failed to start.
	&lt;/ul&gt;
&lt;li&gt;&lt;i&gt;Notify_ProtocolName&lt;/i&gt;: The name of the protocol
&lt;li&gt;&lt;i&gt;Notify_ProtocolPath&lt;/i&gt;: 
The path of the protocol in the DB.  This field can be blank for protocols that were launched without 
saving to the database.
&lt;li&gt;&lt;i&gt;Notify_ProtocolLogName&lt;/i&gt;: The log name of the protocol.  
Is usually the same as ProtocolName, however this can be set by the client to a different name than the 
protocol.
&lt;li&gt;&lt;i&gt;Notify_RunHost&lt;/i&gt;: The name of the node where the protocol executed.
&lt;li&gt;&lt;i&gt;Notify_Username&lt;/i&gt;: 
The user that ran the job
&lt;/ul&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>The Run On Grid parameter tells the server to run the protocol on the grid engine if the Pipeline Pilot server is configured to run with grid integration.</sci:help>
				<sci:member>Queue Name</sci:member>
				<sci:member>Grid Options</sci:member>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
				<sci:help>The Queue Name allows you to specify the name of the queue on the grid engine to submit the job to. Leave blank to specify the default queue.</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Grid Options" type="StringType" required="false" visibility="visible" multi="true" legalvalsenforced="false" uimpl="true">
				<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;DD:MM:SS&amp;gt; - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
				<sci:help>Component Attributes</sci:help>
				<sci:legalval>ComponentTakesInput</sci:legalval>
				<sci:legalval>ComponentReturnsPass</sci:legalval>
				<sci:legalval>ComponentReturnsFail</sci:legalval>
				<sci:legalval>ComponentRunsLocal</sci:legalval>
			</sci:arg>
			<sci:arg name="Reporting Stylesheet" type="StylesheetType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>Specifies the name of a Stylesheet to be used by this protocol if any of the Reporting components have a Style selected in the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.</sci:help>
				<sci:value>{25A23C6A-4EF0-45F2-8495-3E88896C6262}</sci:value>
			</sci:arg>
			<sci:arg name="Reporting" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>This group contains parameters specific to protocols containing Reporting components.</sci:help>
				<sci:member>Reporting Stylesheet</sci:member>
			</sci:arg>
			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="WebExports" type="StringType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically 
exported if this protocol is published as a web service.&lt;/p&gt;

&lt;p&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Keep Alive" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Specifies if the process where this protocol is run should stay around for later use.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The user who registered this component.</sci:help>
				<sci:value>scitegic/coreutils</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The date this component was registered.</sci:help>
				<sci:value>Fri Feb 07 14:23:49 2020</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The server version when this component was registered</sci:help>
				<sci:value>18.1.0.1604</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>Temporal Split 2009</sci:value>
			</sci:arg>
			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol AutoLayout</sci:help>
				<sci:value>1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
				<sci:value>PROTOCOLNODE</sci:value>
			</sci:arg>
			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
				<sci:help>Component Revision</sci:help>
				<sci:value>790</sci:value>
			</sci:arg>
			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}</sci:value>
			</sci:arg>
			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>By Ref</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
				<sci:value>100</sci:value>
				<sci:value>Building protocols in Pipeline Pilot</sci:value>
				<sci:value>This is your help window for working with components and protocols in Pipeline Pilot.
&lt;BR&gt;&lt;BR&gt;
This window can display help about the protocol itself. You are currently viewing the default help text for a protocol. When you design and save a protocol, it is recommended that you change this text to specifically describe the protocol you have designed.
&lt;BR&gt;&lt;BR&gt;
This window also displays help text for individual components and their parameters. To see help for a component, select an item from the Components tab or from within the protocol workspace. To see help about a parameter of a component, select one from the Parameter tab.
&lt;BR&gt;&lt;BR&gt;
For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/getstart/getstart_intro.htm&apos;)&quot;&gt;Getting Started with Pipeline Pilot&lt;/a&gt;.</sci:value>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
			</sci:arg>
			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Scale</sci:help>
				<sci:value>100</sci:value>
			</sci:arg>
			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Sticky Notes</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Options</sci:help>
				<sci:legalval>Owner Access Only</sci:legalval>
			</sci:arg>
			<sci:arg name="ResultFiles Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>Include JobDir Files</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Local Component Identifier</sci:help>
				<sci:value>-1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>50 -50</sci:value>
			</sci:arg>
			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The original path within the database of this component.</sci:help>
				<sci:value>Components\Data Access and Manipulation\Utilities\Internals\Reference Components\New Protocol</sci:value>
			</sci:arg>
		</sci:component>
		<sci:protocol>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Manipulator (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>@SuppressRVersionWarning  := true;</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Applies a PilotScript expression to each data record
</sci:value>
						<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.0.0.35</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.MDLSDReader.1">
				<sci:component name="SD Reader" version="2">
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The file or URL source to read</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>SourceTag</sci:member>
						<sci:member>Keep Properties</sci:member>
						<sci:member>UTF-8 Auto Detect</sci:member>
						<sci:value>$(UserDir)/PP/IonModel/FinalProtdesc.sd.gz</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
					</sci:arg>
					<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called 
&lt;b&gt;SourceTag&lt;/b&gt; is created and holds the value indicated.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;None&lt;/b&gt;: 
No SourceTag property is created and any existing ones are removed.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Filename&lt;/b&gt;: 
The name of the file read.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FilenameAndExtension&lt;/b&gt;: The name of the 
file read with its file extension.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FullFilename&lt;/b&gt;: The name of the 
file read, including the directory path.&lt;/li&gt;&lt;li&gt;&lt;b&gt;ZipFilename&lt;/b&gt;: When reading 
a compressed zip file, the filename within the compressed archive.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Number&lt;/b&gt;: 
When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;&lt;li&gt;&lt;b&gt;Letter&lt;/b&gt;: 
When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;&lt;li&gt;&lt;b&gt;KeepCurrent&lt;/b&gt;: 
Keeps the current value of SourceTag.&lt;/li&gt;&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Filename</sci:legalval>
						<sci:legalval>FilenameAndExtension</sci:legalval>
						<sci:legalval>FullFilename</sci:legalval>
						<sci:legalval>ZipFilename</sci:legalval>
						<sci:legalval>Number</sci:legalval>
						<sci:legalval>Letter</sci:legalval>
						<sci:legalval>KeepCurrent</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
						<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.</sci:help>
					</sci:arg>
					<sci:arg name="UTF-8 Auto Detect" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;UTF-8 is a type of character encoding used to represent international characters with multiple bytes whereas basic Latin characters remain as a single byte.  Files can be stored with a Byte Order Mark (BOM) to indicate that the type of character encoding.&lt;/p&gt;
&lt;p&gt;When reading files that do not have a BOM, this parameter allows the reader to attempt to automatically detect UTF-8 encodings and convert as needed.  However, be aware that automatic detection is not always reliable.  In some cases, valid text stored in different character encodings can appear to be valid UTF-8.  In these cases, the automatic detection will result in garbled text.  When this occurs, you can consider using the &lt;a href=&quot;javascript:DoLink(&apos;{B0B1B56C-3DF6-444C-BB78-B43211188F63}&apos;)&quot;&gt;Binary Reader&lt;/a&gt; to read the file, then converting using the Pilotscript function &lt;b&gt;ConvertBytesToString&lt;/b&gt;&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>ReadProperties</sci:member>
						<sci:member>PutNameInProperty</sci:member>
						<sci:member>ReadQueryInfo</sci:member>
						<sci:member>PutCommentInProperty</sci:member>
						<sci:member>SD Format Options</sci:member>
						<sci:member>Global Templates</sci:member>
					</sci:arg>
					<sci:arg name="SD Format Options" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>&lt;p&gt;Options available for the SD Reader:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Properties Can Contain $$$$:&lt;/b&gt;  By the CTFile standard, a property can contain a &apos;$$$$&apos;-line.  
Properties or data field values are terminated by a blank line.  Only then will the &apos;$$$$&apos;-line 
terminate the full data block.  Setting this option off will terminate the data block upon any read of 
a &apos;$$$$&apos;-line.  This option is available to provide compatibility with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;One-space Lines Terminate Properties:&lt;/b&gt;  By the CTFile standard, properties or data fields values are 
terminated by a blank line. Selecting this option will terminate the data block when encountering a line 
containing a space as the only character in the line.  This option is available to provide compatibility 
with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Unwrap Long Property Lines:&lt;/b&gt;  By the CTFile standard, lines in property fields cannot exceed 200 characters.  When this option is selected and a property line of exactly 200 characters is found, the newline character will be ignored and property string will continue on the next line.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Read Unknown Stereo Parity:&lt;/b&gt;  When selected, the SD Reader will use the &apos;Atom Parity&apos; value (parity of 
&apos;3&apos;) to mark unknown stereo centers in 3D mol files.  This will leave these atoms marked as 
&apos;unknown stereo&apos; and will not calculate the stereo from the coordinates.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Process Complex Data Header Lines:&lt;/b&gt; Data header lines are the lines in the SD format that precede the actual data. They can contain the data field name (enclosed in angular brackets &lt;&gt;), the data field number (as DTn), the external registry number (enclosed in parentheses), and other optional information. When this parameter is set to False, only the data field name is parsed and used to set the corresponding property name. All the other information in the line is ignored. When the parameter is set to true, all the information is parsed. The property name is set from either the field name in &lt;&gt; or the DTn. If both are present the field name takes priority and the DTn number is saved as an additional property named &lt;b&gt;FieldName#DTn&lt;/b&gt;. The external registry number is saved as &lt;b&gt;FieldName#ExtRegNum&lt;/b&gt; and any other information is saved as &lt;b&gt;FieldName#OtherDataFieldInfo&lt;/b&gt;. When the molecules are written to an SD file, the data header lines are reconstructed from these properties. The default state of this parameter is False, as parsing, preserving, and eventually writing all the information in the data header lines can be costly, specially for SD files with many data fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert From H2 And H+ Atom Types:&lt;/b&gt; &apos;H2&apos; and &apos;H+&apos; are two non-standard element types that can be assigned to atoms by the BIOVIA Draw sketcher. They represent unattached Hydrogen (a Hydrogen molecule) and charged Hydrogen (a proton), respectively. When this parameter is selected, these atom types are converted to standard hydrogen atoms upon reading, with charges of 0 for H2 and +1 for H+. Otherwise, these atoms are read and perceived as unknown atom types, with &apos;H2&apos; and &apos;H+&apos; as the atom labels.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert Radicals To Pi Systems:&lt;/b&gt; When selected, pi bonds will be perceived between adjacent atoms marked with radicals and any adjacent metal atom.  Once pi bonds are perceived, subsequent exports will represent the pi bonds using the V3000 format and one-to-many coordination bonds (type 9) unless the writer&apos;s &lt;i&gt;Convert Pi Systems To Radicals&lt;/i&gt; option is used to convert the pi systems back. &lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert GEN+DAT to Polymer Repeat Units:&lt;/b&gt; When selected, this option will automatically convert input GEN sgroups with linked DAT sgroups having the special fieldname of &apos;rc&apos; and numeric or numeric range data internally into polymer repeat sgroups.  This usage is a special type of NONS (Non-Specific Structure) convention that was prototyped in previous releases.  Disabling this conversion will have a higher likelihood of producing a structure that can be registered into Direct databases. &lt;/li&gt;
&lt;li&gt;&lt;b&gt;Always Keep Enhanced Stereo:&lt;/b&gt; Preserves any enhanced stereo collections that are read in from V3000 MOL file.  When disabled, stereo structures will be checked to see if they can be represented more simply using only the Chiral Flag.  That is, structures with only ABS centers can be represented without enhanced stereo by setting the Chiral Flag on and structures with all centers in a single AND group can be represented without enhanced stereo by setting the Chiral Flag off.  Enhanced stereo collections that do not fit into the above cases are always preserved.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Properties Can Contain $$$$</sci:legalval>
						<sci:legalval>One-space Lines Terminate Properties</sci:legalval>
						<sci:legalval selected="true">Unwrap Long Property Lines</sci:legalval>
						<sci:legalval>Read Unknown Stereo Parity</sci:legalval>
						<sci:legalval>Process Complex Data Header Lines</sci:legalval>
						<sci:legalval selected="true">Convert From H2 And H+ Atom Types</sci:legalval>
						<sci:legalval>Convert Radicals To Pi Systems</sci:legalval>
						<sci:legalval selected="true">Convert GEN+DAT to Polymer Repeat Units</sci:legalval>
						<sci:legalval>Always Keep Enhanced Stereo</sci:legalval>
					</sci:arg>
					<sci:arg name="ReadProperties" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Select True to read the properties for each molecule (in addition to the structures)</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ReadQueryInfo" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If properties starting with &quot;QueryInfo&quot; are present, use them to set up query information on the atoms and bonds. (This is how, for example, SMARTS query information can be preserved when writing to an SD format file.) For molecules saved in MOL/SD format, this information only contains information that cannot be written out in the connection table.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="PutNameInProperty" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>What to call the property that holds the name of each molecule</sci:help>
						<sci:value>Name</sci:value>
					</sci:arg>
					<sci:arg name="PutCommentInProperty" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>What to call the property that holds the comment associated with each molecule</sci:help>
					</sci:arg>
					<sci:arg name="Global Templates" type="URLType" required="false" visibility="visible" multi="false">
						<sci:help>V3000 SD or MOL files containing template definitions for amino acid, nucleic acid or other residues or monomers. These templates can then be refered to by molecules read by the SD reader.&lt;p&gt;
The default template file included in the Chemistry collection, &lt;i&gt;data\Direct\Direct_templates.mol&lt;/i&gt; contains definitions for 22 amino acids and 8 DNA and RNA templates.</sci:help>
						<sci:value>data\HELM\SCSRtemplates.mol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="HasConvertPiSystemOption" type="BoolType" required="false" visibility="nevershow" multi="false" legalvalsenforced="false">
						<sci:help>Hidden flag specifying the presence of the &quot;Convert Radicals To Pi Systems&quot; option.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="AllowUnknownDoubleBondsFromCoordinates" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>According to the CTfile specifications, the cis/trans character of double bonds with bond stereo set to zero is determined from the coordinates. This parameter controls whether or not to assign unknown bond stereo to double bonds for which the stereo could not be determined from the coordinates, either because there are no coordinates or because of colinearity issues.  When the parameter is set to False and the stereo could not be determined, no specific stereo configuration is assigned to the double bond, but it is not marked as unknown stereo.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/chemistry</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed Apr 06 11:41:13 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>SD Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{CA65B896-4FE6-4E3A-B884-DC16B53B8D26}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SD Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -470</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Reads MOL (molecule CTAB) files and SD (structured data) files</sci:value>
						<sci:value>&lt;p&gt;Creates a molecular data record for each molecule represented in the &lt;i&gt;Source&lt;/i&gt; 
data file.  All properties contained in the file are read into the data records.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;This 
component can also read zipped (.zip) and URL-based files.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;See 
Also:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;To write files in MOL or SD format, use the &lt;a href=&quot;javascript:DoLink(&apos;{DC8EE7B0-0620-42FE-944C-B4CD1E79480E}&apos;)&quot;&gt;SD 
Writer&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;To convert a molecule to and from between text properties in CTAB 
format, use &lt;a href=&quot;javascript:DoLink(&apos;{E622FBD9-9FA9-451A-A102-1800B5F28B6D}&apos;)&quot;&gt;Molecule 
to CTAB&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{7D354B65-DDD8-4EA4-83A7-21501A8A6852}&apos;)&quot;&gt;Molecule 
from CTAB&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Other related CTFile format file readers include &lt;a href=&quot;javascript:DoLink(&apos;{169AB4E5-A470-477B-AA65-50464411036C}&apos;)&quot;&gt;RG 
Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{036731AA-0015-4606-9750-7D9D020F21C8}&apos;)&quot;&gt;RXN 
Reader&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{55431CCB-06EA-4741-B95B-633C877E3E9B}&apos;)&quot;&gt;RD 
Reader&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Molecule</sci:value>
						<sci:value>Data fields in the SD file will be added to the property fields</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>17.1.0.59</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>3</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Chemistry\Data Access and Manipulation\Readers\SD Reader</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.DataCacheIO.1">
				<sci:component name="Cache Writer" version="2">
					<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The name of the cache to write, for example: A, 1234 or MyCache.  To create a temporary cacheID use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component.
</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>Append</sci:member>
						<sci:member>Scope</sci:member>
						<sci:value>protdesc</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to write to the cache.</sci:help>
					</sci:arg>
					<sci:arg name="Append" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If True, append to a currently-existing cache if possible; if False, clear any current contents of the cache</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. &lt;I&gt;Job Only&lt;/I&gt; creates a cache that is visible
only to components in the currently-running protocol, and which is deleted when the protocol finishes.
&lt;I&gt;User Only&lt;/I&gt; creates a cache that is visible to components in any protocol a particular user runs;  
&lt;I&gt;All Users&lt;/I&gt; creates a cache that is visible to any user on the Pipeline Pilot server. 
&lt;P&gt;Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to fully determine a particular cache.&lt;/P&gt;
&lt;P&gt;Since the caches created with scopes &lt;I&gt;User Only&lt;/I&gt; and &lt;I&gt;All Users&lt;/I&gt;
may be accessed by multiple jobs, you should use caution, as problems may arise if two jobs try to write to 
the same shared cache at once. Also, to save disk space, you are responsible for deleting these caches
when finished, using the &lt;I&gt;Delete Cache&lt;/I&gt; component. &lt;/P&gt;
			</sci:help>
						<sci:legalval selected="true">Job Only</sci:legalval>
						<sci:legalval>User Only</sci:legalval>
						<sci:legalval>All Users</sci:legalval>
					</sci:arg>
					<sci:arg name="Create Index for Join" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>If set to True, creates an index for the cache that can be used by subsequent &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  As long as the later Join components use identical settings, the created index will greatly improve the performance of the join.  When set to true, you will also need to update &lt;i&gt;JoinUsing&lt;/i&gt;, &lt;i&gt;JoinUsingListType&lt;/i&gt;, &lt;i&gt;JoinPropertyType&lt;/i&gt;, and &lt;i&gt;IgnoreCase&lt;/i&gt; to match your Join component.</sci:help>
						<sci:member>JoinUsing</sci:member>
						<sci:member>IgnoreCase</sci:member>
						<sci:member>JoinPropertyType</sci:member>
						<sci:member>JoinUsingListType</sci:member>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="JoinUsing" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The name of the property or properties to index for use by &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
						<sci:value>accession</sci:value>
					</sci:arg>
					<sci:arg name="JoinUsingListType" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted for creating a cache index when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: The join will use only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: The join will use the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;
&lt;p&gt;This parameter must match the identically named parameter on the Join component in order to benefit from the created index.&lt;/p&gt;</sci:help>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
						<sci:legalval>UseFirstDefinedValue</sci:legalval>
						<sci:legalval selected="true">UseAllValues</sci:legalval>
					</sci:arg>
					<sci:arg name="JoinPropertyType" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The data type of the &lt;i&gt;JoinUsing&lt;/i&gt; property. This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
						<sci:legalval>IsNumeric</sci:legalval>
						<sci:legalval selected="true">IsText</sci:legalval>
						<sci:legalval>IsDate</sci:legalval>
					</sci:arg>
					<sci:arg name="IgnoreCase" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
						<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Additional parameters to control the component behavior.</sci:help>
						<sci:member>Write Globals</sci:member>
						<sci:member>Enable Compression</sci:member>
					</sci:arg>
					<sci:arg name="Write Globals" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>&lt;p&gt;Specifies which globals, if any, are written into the cache.&lt;/p&gt;
&lt;p&gt;The value is an array of top-level global names or global nodes specified using XPath notation. Note that node names should end with a forward slash (/).&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Enable Compression" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>&lt;p&gt;Specifies if compression of the data should be enabled whenever available.&lt;/p&gt;
&lt;b&gt;Warning:&lt;b&gt; Due to the resulting larger size of the cache files when using uncompressed files, this option should typically only be used for smaller data sets.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
					</sci:arg>
					<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
						<sci:legalval selected="true">Writer</sci:legalval>
						<sci:legalval>Reader</sci:legalval>
						<sci:legalval>Writer/Reader</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed Oct 03 14:48:02 2012</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Cache Writer</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>378 -470</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DATABASENODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{674E3781-33EA-42BB-9099-49CB4C3D08E6}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Cache Writer</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Writes data records to a named cache</sci:value>
						<sci:value>&lt;p&gt;A data cache is place where you can temporarily store data records without losing information.  Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache.  A cache can contain records of different types.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To avoid clashes with other cache names, you can use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to obtain a global with a unique cacheID.  For example, you could have a temporary cacheID identified by MYCACHE and set &lt;i&gt;CacheID&lt;/i&gt; to $(MYCACHE).&lt;/li&gt;
&lt;li&gt;Typically, a cache is scoped to only be visible to component in the currently-running job.  To create caches that outlive a job, and may be seen by other users, use the &lt;I&gt;Scope&lt;/I&gt; parameter.&lt;/li&gt;
&lt;li&gt;Caches can be used with the &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; component to add properties to a separate data stream.  To improve the performance of the join, the cache can be indexed during creation by using the &lt;i&gt;Create Index for Join&lt;/i&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To retrieve data from a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9099-05B44C3D08E6}&apos;)&quot;&gt;Cache Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To join against a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>%VERSION 3%</sci:value>
						<sci:value>741 -489 305 176</sci:value>
						<sci:value>255 255 0</sci:value>
						<sci:value>Protein Descriptors</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.0.0.100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>4</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\File Writers\Cache Writer</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.SDWriter.1">
				<sci:component name="SD Writer" version="2">
					<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false">
						<sci:help>The filename or URL for the destination data. To save in compressed (zipped) format, add the extension .gz or .zip to the filename.</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>IfFileExists</sci:member>
						<sci:member>CharacterEncoding</sci:member>
						<sci:value>$(UserDir)/PP/IonModel/NETSN100TemporalSplitTraining.sd.gz</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to write (all if value is empty)</sci:help>
					</sci:arg>
					<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>What to do if the given destination file already exists</sci:help>
						<sci:legalval selected="true">Overwrite</sci:legalval>
						<sci:legalval>Append</sci:legalval>
						<sci:legalval>Halt</sci:legalval>
					</sci:arg>
					<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Indicates the character set that will be used within the file.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;ANSI&lt;/b&gt; 
is the default and specifies a character set where each character is defined by a single byte.  This 
allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications 
can read these files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;UTF-8&lt;/b&gt; specifies a variable length character 
set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters 
specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications 
do not support UTF-8 files.&lt;/li&gt;
 
&lt;li&gt;&lt;b&gt;Unicode&lt;/b&gt; and &lt;b&gt;Unicode big 
endian&lt;/b&gt; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  
Depending on which is used will determine the order in which the bytes appear for each character. Many 
applications do not support Unicode or Unicode big endian files.&lt;/li&gt;
&lt;/ul&gt;
 
&lt;p&gt;&lt;b&gt;See 
Also&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information about each of these encoding styles, 
go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org/&apos;)&quot;&gt;http://www.unicode.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">ANSI</sci:legalval>
						<sci:legalval>UTF-8</sci:legalval>
						<sci:legalval>Unicode</sci:legalval>
						<sci:legalval>Unicode big endian</sci:legalval>
					</sci:arg>
					<sci:arg name="SD Format Options" type="StringType" required="false" visibility="visible" multi="true" expanded="true">
						<sci:help>Options for the SD Writer:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Write Structure&lt;/b&gt;:  Includes 
available structure information with each record.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Write Properties&lt;/b&gt;:  
Includes available property information with each record.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Write Date&lt;/b&gt;:  
Writes the current date into the file.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Write Fully Padded Lines&lt;/b&gt;:  
Writes all the fields in the Atoms and Bonds lines, padding with zeroes those fields with undefined values.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Write 
Query Info&lt;/b&gt;:  Writes out MOL-file query information and also additional SciTegic molecule query 
information to the properties of the SD record.
To read the SciTegic-specific part of this information 
back in, use a SciTegic SD Reader with the ReadQueryInfo parameter set to True. (This option writes out 
substructure queries that may have come from SMARTS queries. It also stops writing query information 
for viewers that cannot handle it).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Write Two Spaces In Data Header Line&lt;/b&gt;:  
When on, data headers will be &lt;TT&gt;&amp;gt&amp;nbsp&amp;nbsp&amp;ltPropName&amp;gt&lt;/TT&gt;.  
When off, data headers will be &lt;TT&gt;&quot;&amp;gt&amp;nbsp&amp;ltPropName&amp;gt&quot;&lt;/TT&gt;.  
The standard does not specify how many spaces there should be. Making this option available for compatibility 
with 3rd party readers.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Wrap Long Property Lines&lt;/b&gt;:  By the CTFile 
standard property lines are limited to 200 characters.  When selected, properties longer than 200 characters 
are with newlines every 200 characters.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Skip Null Or Empty String Properties&lt;/b&gt;:  
When selected, properties that are either null or empty strings will be skipped upon SD export.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Write 
Dot For Empty String Properties&lt;/b&gt;:  In the CTFile format, an empty line is used to terminate 
a property value.  Because of this, there is a convention of writing a &apos;.&apos; on an empty line 
to distinguish between a property that has an empty string value (&quot;&quot;) and a property that has 
no value (or a null value).  Selecting this option enables this convention and empty string properties 
are written with a &apos;.&apos; on the first line and an empty second line to terminate the property.  
When not selected, empty string properties will be written with only a single empty terminating line 
(the same as null properties).  The default for this option is &quot;on&quot; to match the behavior in 
previous versions.  Note that empty string members of string array properties (i.e. empty lines in multi-line 
properties) will always be written with a &apos;.&apos; to prevent an empty line from terminating the 
property.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Write Templates&lt;/b&gt;:  When the molecule has SCSR sequence 
atoms that refer to residue templates, this parameter specifies whether or not to include all the template 
definitions (local and global) in a TEMPLATE block as part of the CTAB, or to include only the local 
SCSR templates, the ones that are not defined in the global templates specified by &lt;i&gt;Global Templates&lt;/i&gt; 
in the SD Reader component. The local templates always need to be saved because the SD Reader would not 
be able to read the molecule otherwise. &lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert To H2 And H+ Atom Types:&lt;/b&gt; 
&apos;H2&apos; and &apos;H+&apos; are two non-standard element types that can be assigned to atoms by 
the BIOVIA Draw sketcher. They represent unattached Hydrogen (a Hydrogen molecule) and charged Hydrogen 
(a proton), respectively. When this parameter is selected, explicit hydrogen atoms are checked to determine 
if they can be classified as &apos;H2&apos; or &apos;H+&apos; and, if so, they are written out with these 
special types instead of just &apos;H&apos;.&lt;/li&gt; 
&lt;li&gt;&lt;b&gt;Convert Pi Systems To Radicals:&lt;/b&gt; 
When checked, converts pi systems involved in pi bonds into their radical representation which is supported 
by both the V2000 and V3000 formats.  When not checked, pi bonds and pi systems are written out in V3000 
format using multiple-attachment point coordination bonds (type 9).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Use 
2H and 3H for Hydrogen Isotopes&lt;/b&gt;: Toggles whether to explicitly write out hydrogen isotopes 
using M ISO lines in the V2000 format or MASS values in the V3000 format.  When not checked, the simpler 
&quot;D&quot; and &quot;T&quot; symbols will be used.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&amp;nbsp
&lt;/p&gt;
&lt;b&gt;V2000 
and V3000 Format Parameters&lt;/b&gt;
&lt;p&gt;
The next two options can be used to force the SD file 
format to be exclusively V2000 or V3000. If none of the options is selected, the input molecules are 
written in V2000 format unless they contain features that require the use of the V3000 format. These 
features include presence of enhanced stereo markings, more than 999 atoms or bonds, atom lists with 
more than 16 atom types or bonds of zero order (dative, coordination, hydrogen bonds). In this case, 
the output SD file might contain a mix of V2000 and V300 molecules.
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use 
V3000 Format&lt;/b&gt;:  Force the format to be V3000 for all molecules.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Use 
V2000 Format&lt;/b&gt;:  Force the format to be V2000 for all molecules. Any molecule with features that 
require the V3000 format is sent to the Fail port. Note that the Fail port in the SD Writer is not active 
by default. If you want to use this option, make sure to activate the component Fail port by right-clicking 
on the component and selecting the &lt;i&gt;Toggle Ports&lt;/i&gt; menu.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Write Structure</sci:legalval>
						<sci:legalval selected="true">Write Properties</sci:legalval>
						<sci:legalval selected="true">Write Date</sci:legalval>
						<sci:legalval>Write Fully Padded Lines</sci:legalval>
						<sci:legalval selected="true">Write Query Info</sci:legalval>
						<sci:legalval>Write Two Spaces In Data Header Line</sci:legalval>
						<sci:legalval selected="true">Wrap Long Property Lines</sci:legalval>
						<sci:legalval>Skip Null Or Empty String Properties</sci:legalval>
						<sci:legalval selected="true">Write Dot For Empty String Properties</sci:legalval>
						<sci:legalval>Use V3000 Format</sci:legalval>
						<sci:legalval>Use V2000 Format</sci:legalval>
						<sci:legalval selected="true">Write Templates</sci:legalval>
						<sci:legalval>Convert To H2 And H+ Atom Types</sci:legalval>
						<sci:legalval>Convert Pi Systems To Radicals</sci:legalval>
						<sci:legalval>Use 2H and 3H for Hydrogen Isotopes</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>Name</sci:member>
						<sci:member>Comment</sci:member>
					</sci:arg>
					<sci:arg name="Name" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Name of property that holds the name of each molecule</sci:help>
						<sci:value>Name</sci:value>
					</sci:arg>
					<sci:arg name="Comment" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Name of the property that holds the comment to write in the CTAB header for each molecule</sci:help>
						<sci:value>Comment</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="HasConvertPiSystemOption" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="HasWriteDotOption" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/chemistry</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Oct 07 13:39:57 2014</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>SD Writer</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{DC8EE7B0-0620-42FE-944C-B4CD1E79480E}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SD Writer</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>666 -820</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Writes an SD (structured data) file</sci:value>
						<sci:value>Writes the molecule and associated property data to the &lt;i&gt;Destination&lt;/i&gt; 
file in SD format.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To read files 
in SD format, use the &lt;a href=&quot;javascript:DoLink(&apos;{CA65B896-4FE6-4E3A-B884-DC16B53B8D26}&apos;)&quot;&gt;SD 
Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To convert molecules to and from a text property containing the 
molecular connection table (CTAB) in MOL format, use &lt;a href=&quot;javascript:DoLink(&apos;{E622FBD9-9FA9-451A-A102-1800B5F28B6D}&apos;)&quot;&gt;Molecule 
to CTAB&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{7D354B65-DDD8-4EA4-83A7-21501A8A6852}&apos;)&quot;&gt;Molecule 
from CTAB&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</sci:value>
						<sci:value>Molecule</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.5.0.606</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>12</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Chemistry\Data Access and Manipulation\Writers\SD Writer</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.MDLSDReader.1">
				<sci:component name="SD Reader" version="2">
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The file or URL source to read</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>SourceTag</sci:member>
						<sci:member>Keep Properties</sci:member>
						<sci:member>UTF-8 Auto Detect</sci:member>
						<sci:value>$(UserDir)/PP/IonModel/NETSN100Full.sd.gz</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
					</sci:arg>
					<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called 
&lt;b&gt;SourceTag&lt;/b&gt; is created and holds the value indicated.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;None&lt;/b&gt;: 
No SourceTag property is created and any existing ones are removed.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Filename&lt;/b&gt;: 
The name of the file read.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FilenameAndExtension&lt;/b&gt;: The name of the 
file read with its file extension.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FullFilename&lt;/b&gt;: The name of the 
file read, including the directory path.&lt;/li&gt;&lt;li&gt;&lt;b&gt;ZipFilename&lt;/b&gt;: When reading 
a compressed zip file, the filename within the compressed archive.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Number&lt;/b&gt;: 
When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;&lt;li&gt;&lt;b&gt;Letter&lt;/b&gt;: 
When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;&lt;li&gt;&lt;b&gt;KeepCurrent&lt;/b&gt;: 
Keeps the current value of SourceTag.&lt;/li&gt;&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Filename</sci:legalval>
						<sci:legalval>FilenameAndExtension</sci:legalval>
						<sci:legalval>FullFilename</sci:legalval>
						<sci:legalval>ZipFilename</sci:legalval>
						<sci:legalval>Number</sci:legalval>
						<sci:legalval>Letter</sci:legalval>
						<sci:legalval>KeepCurrent</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
						<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.</sci:help>
					</sci:arg>
					<sci:arg name="UTF-8 Auto Detect" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;UTF-8 is a type of character encoding used to represent international characters with multiple bytes whereas basic Latin characters remain as a single byte.  Files can be stored with a Byte Order Mark (BOM) to indicate that the type of character encoding.&lt;/p&gt;
&lt;p&gt;When reading files that do not have a BOM, this parameter allows the reader to attempt to automatically detect UTF-8 encodings and convert as needed.  However, be aware that automatic detection is not always reliable.  In some cases, valid text stored in different character encodings can appear to be valid UTF-8.  In these cases, the automatic detection will result in garbled text.  When this occurs, you can consider using the &lt;a href=&quot;javascript:DoLink(&apos;{B0B1B56C-3DF6-444C-BB78-B43211188F63}&apos;)&quot;&gt;Binary Reader&lt;/a&gt; to read the file, then converting using the Pilotscript function &lt;b&gt;ConvertBytesToString&lt;/b&gt;&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>ReadProperties</sci:member>
						<sci:member>PutNameInProperty</sci:member>
						<sci:member>ReadQueryInfo</sci:member>
						<sci:member>PutCommentInProperty</sci:member>
						<sci:member>SD Format Options</sci:member>
						<sci:member>Global Templates</sci:member>
					</sci:arg>
					<sci:arg name="SD Format Options" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>&lt;p&gt;Options available for the SD Reader:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Properties Can Contain $$$$:&lt;/b&gt;  By the CTFile standard, a property can contain a &apos;$$$$&apos;-line.  
Properties or data field values are terminated by a blank line.  Only then will the &apos;$$$$&apos;-line 
terminate the full data block.  Setting this option off will terminate the data block upon any read of 
a &apos;$$$$&apos;-line.  This option is available to provide compatibility with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;One-space Lines Terminate Properties:&lt;/b&gt;  By the CTFile standard, properties or data fields values are 
terminated by a blank line. Selecting this option will terminate the data block when encountering a line 
containing a space as the only character in the line.  This option is available to provide compatibility 
with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Unwrap Long Property Lines:&lt;/b&gt;  By the CTFile standard, lines in property fields cannot exceed 200 characters.  When this option is selected and a property line of exactly 200 characters is found, the newline character will be ignored and property string will continue on the next line.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Read Unknown Stereo Parity:&lt;/b&gt;  When selected, the SD Reader will use the &apos;Atom Parity&apos; value (parity of 
&apos;3&apos;) to mark unknown stereo centers in 3D mol files.  This will leave these atoms marked as 
&apos;unknown stereo&apos; and will not calculate the stereo from the coordinates.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Process Complex Data Header Lines:&lt;/b&gt; Data header lines are the lines in the SD format that precede the actual data. They can contain the data field name (enclosed in angular brackets &lt;&gt;), the data field number (as DTn), the external registry number (enclosed in parentheses), and other optional information. When this parameter is set to False, only the data field name is parsed and used to set the corresponding property name. All the other information in the line is ignored. When the parameter is set to true, all the information is parsed. The property name is set from either the field name in &lt;&gt; or the DTn. If both are present the field name takes priority and the DTn number is saved as an additional property named &lt;b&gt;FieldName#DTn&lt;/b&gt;. The external registry number is saved as &lt;b&gt;FieldName#ExtRegNum&lt;/b&gt; and any other information is saved as &lt;b&gt;FieldName#OtherDataFieldInfo&lt;/b&gt;. When the molecules are written to an SD file, the data header lines are reconstructed from these properties. The default state of this parameter is False, as parsing, preserving, and eventually writing all the information in the data header lines can be costly, specially for SD files with many data fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert From H2 And H+ Atom Types:&lt;/b&gt; &apos;H2&apos; and &apos;H+&apos; are two non-standard element types that can be assigned to atoms by the BIOVIA Draw sketcher. They represent unattached Hydrogen (a Hydrogen molecule) and charged Hydrogen (a proton), respectively. When this parameter is selected, these atom types are converted to standard hydrogen atoms upon reading, with charges of 0 for H2 and +1 for H+. Otherwise, these atoms are read and perceived as unknown atom types, with &apos;H2&apos; and &apos;H+&apos; as the atom labels.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert Radicals To Pi Systems:&lt;/b&gt; When selected, pi bonds will be perceived between adjacent atoms marked with radicals and any adjacent metal atom.  Once pi bonds are perceived, subsequent exports will represent the pi bonds using the V3000 format and one-to-many coordination bonds (type 9) unless the writer&apos;s &lt;i&gt;Convert Pi Systems To Radicals&lt;/i&gt; option is used to convert the pi systems back. &lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert GEN+DAT to Polymer Repeat Units:&lt;/b&gt; When selected, this option will automatically convert input GEN sgroups with linked DAT sgroups having the special fieldname of &apos;rc&apos; and numeric or numeric range data internally into polymer repeat sgroups.  This usage is a special type of NONS (Non-Specific Structure) convention that was prototyped in previous releases.  Disabling this conversion will have a higher likelihood of producing a structure that can be registered into Direct databases. &lt;/li&gt;
&lt;li&gt;&lt;b&gt;Always Keep Enhanced Stereo:&lt;/b&gt; Preserves any enhanced stereo collections that are read in from V3000 MOL file.  When disabled, stereo structures will be checked to see if they can be represented more simply using only the Chiral Flag.  That is, structures with only ABS centers can be represented without enhanced stereo by setting the Chiral Flag on and structures with all centers in a single AND group can be represented without enhanced stereo by setting the Chiral Flag off.  Enhanced stereo collections that do not fit into the above cases are always preserved.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Properties Can Contain $$$$</sci:legalval>
						<sci:legalval>One-space Lines Terminate Properties</sci:legalval>
						<sci:legalval selected="true">Unwrap Long Property Lines</sci:legalval>
						<sci:legalval>Read Unknown Stereo Parity</sci:legalval>
						<sci:legalval>Process Complex Data Header Lines</sci:legalval>
						<sci:legalval selected="true">Convert From H2 And H+ Atom Types</sci:legalval>
						<sci:legalval>Convert Radicals To Pi Systems</sci:legalval>
						<sci:legalval selected="true">Convert GEN+DAT to Polymer Repeat Units</sci:legalval>
						<sci:legalval>Always Keep Enhanced Stereo</sci:legalval>
					</sci:arg>
					<sci:arg name="ReadProperties" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Select True to read the properties for each molecule (in addition to the structures)</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ReadQueryInfo" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If properties starting with &quot;QueryInfo&quot; are present, use them to set up query information on the atoms and bonds. (This is how, for example, SMARTS query information can be preserved when writing to an SD format file.) For molecules saved in MOL/SD format, this information only contains information that cannot be written out in the connection table.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="PutNameInProperty" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>What to call the property that holds the name of each molecule</sci:help>
						<sci:value>Name</sci:value>
					</sci:arg>
					<sci:arg name="PutCommentInProperty" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>What to call the property that holds the comment associated with each molecule</sci:help>
					</sci:arg>
					<sci:arg name="Global Templates" type="URLType" required="false" visibility="visible" multi="false">
						<sci:help>V3000 SD or MOL files containing template definitions for amino acid, nucleic acid or other residues or monomers. These templates can then be refered to by molecules read by the SD reader.&lt;p&gt;
The default template file included in the Chemistry collection, &lt;i&gt;data\Direct\Direct_templates.mol&lt;/i&gt; contains definitions for 22 amino acids and 8 DNA and RNA templates.</sci:help>
						<sci:value>data\HELM\SCSRtemplates.mol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="HasConvertPiSystemOption" type="BoolType" required="false" visibility="nevershow" multi="false" legalvalsenforced="false">
						<sci:help>Hidden flag specifying the presence of the &quot;Convert Radicals To Pi Systems&quot; option.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="AllowUnknownDoubleBondsFromCoordinates" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>According to the CTfile specifications, the cis/trans character of double bonds with bond stereo set to zero is determined from the coordinates. This parameter controls whether or not to assign unknown bond stereo to double bonds for which the stereo could not be determined from the coordinates, either because there are no coordinates or because of colinearity issues.  When the parameter is set to False and the stereo could not be determined, no specific stereo configuration is assigned to the double bond, but it is not marked as unknown stereo.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/chemistry</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed Apr 06 11:41:13 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>SD Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{CA65B896-4FE6-4E3A-B884-DC16B53B8D26}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SD Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>4</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -1020</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Reads MOL (molecule CTAB) files and SD (structured data) files</sci:value>
						<sci:value>&lt;p&gt;Creates a molecular data record for each molecule represented in the &lt;i&gt;Source&lt;/i&gt; 
data file.  All properties contained in the file are read into the data records.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;This 
component can also read zipped (.zip) and URL-based files.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;See 
Also:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;To write files in MOL or SD format, use the &lt;a href=&quot;javascript:DoLink(&apos;{DC8EE7B0-0620-42FE-944C-B4CD1E79480E}&apos;)&quot;&gt;SD 
Writer&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;To convert a molecule to and from between text properties in CTAB 
format, use &lt;a href=&quot;javascript:DoLink(&apos;{E622FBD9-9FA9-451A-A102-1800B5F28B6D}&apos;)&quot;&gt;Molecule 
to CTAB&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{7D354B65-DDD8-4EA4-83A7-21501A8A6852}&apos;)&quot;&gt;Molecule 
from CTAB&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Other related CTFile format file readers include &lt;a href=&quot;javascript:DoLink(&apos;{169AB4E5-A470-477B-AA65-50464411036C}&apos;)&quot;&gt;RG 
Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{036731AA-0015-4606-9750-7D9D020F21C8}&apos;)&quot;&gt;RXN 
Reader&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{55431CCB-06EA-4741-B95B-633C877E3E9B}&apos;)&quot;&gt;RD 
Reader&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Molecule</sci:value>
						<sci:value>Data fields in the SD file will be added to the property fields</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>17.1.0.59</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>5</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Chemistry\Data Access and Manipulation\Readers\SD Reader</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Compare Property to Value Filter" version="2">
					<sci:arg name="Property Name" type="PropertyNameType" required="true" visibility="visible" multi="false">
						<sci:help>The name of the property whose value we wish to compare</sci:help>
						<sci:value>year</sci:value>
					</sci:arg>
					<sci:arg name="Compare Operation" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The comparator operation. For example: &gt; means the property value must be greater than the value as obtained from either the property or the value in the parameter &lt;i&gt;Property Name 2 or Value&lt;/i&gt;.

For boolean values, you can use the double operators &quot;==&quot; and &quot;!=&quot;; the values will be coerced to the numbers &quot;0&quot; or &quot;1&quot; (if necessary) then compared.

The operators are:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;==&lt;/b&gt;: numeric equals&lt;li&gt;
&lt;li&gt;&lt;b&gt;&amp;lt;&lt;/b&gt;: numeric less than&lt;li&gt;
&lt;li&gt;&lt;b&gt;&amp;lt;=&lt;/b&gt;: numeric less than or equals&lt;li&gt;
&lt;li&gt;&lt;b&gt;&amp;gt;&lt;/b&gt;: numeric greater than&lt;li&gt;
&lt;li&gt;&lt;b&gt;&amp;gt;=&lt;/b&gt;: numeric greater than or equals&lt;li&gt;
&lt;li&gt;&lt;b&gt;!=&lt;/b&gt;: numeric not equals&lt;li&gt;
&lt;li&gt;&lt;b&gt;EQ&lt;/b&gt;: string equals, case insensitive&lt;li&gt;
&lt;li&gt;&lt;b&gt;NE&lt;/b&gt;: string not equals, case insensitive&lt;li&gt;
&lt;li&gt;&lt;b&gt;CASE EQ&lt;/b&gt;: string equals, case sensitive&lt;li&gt;
&lt;li&gt;&lt;b&gt;CASE NE&lt;/b&gt;: string not equals, case sensitive&lt;li&gt;
&lt;li&gt;&lt;b&gt;LIKE&lt;/b&gt;: Oracle-style LIKE operation&lt;li&gt;
&lt;li&gt;&lt;b&gt;RLIKE&lt;/b&gt;: Oracle-style RLIKE operation&lt;li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval>==</sci:legalval>
						<sci:legalval>&lt;</sci:legalval>
						<sci:legalval selected="true">&lt;=</sci:legalval>
						<sci:legalval>&gt;=</sci:legalval>
						<sci:legalval>&gt;</sci:legalval>
						<sci:legalval>!=</sci:legalval>
						<sci:legalval>EQ</sci:legalval>
						<sci:legalval>NE</sci:legalval>
						<sci:legalval>CASE EQ</sci:legalval>
						<sci:legalval>CASE NE</sci:legalval>
						<sci:legalval>LIKE</sci:legalval>
						<sci:legalval>RLIKE</sci:legalval>
					</sci:arg>
					<sci:arg name="Value" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The value we wish to compare against the value of the property. 

If you wish to compare against the value of another property, or a global property, or a parameter value, use the &lt;i&gt;Initialize Using...&lt;/i&gt; option.</sci:help>
						<sci:value>2009</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to scope the global property to the subprotocol where it is used.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="Refresh rather than Reinitialize" type="BoolType" required="false" visibility="nevershow" multi="false" legalvalsenforced="false">
						<sci:help>Refresh rather than Reinitialize</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>
#propertyName := trim(Parameter(&apos;Property Name&apos;, 2));
#filter := trim(Parameter(&apos;Compare Operation&apos;, 2));
#value := trim(Parameter(&apos;Value&apos;, 2));
if(strlength(#propertyName) &gt; 0 AND strlength(#value) &gt; 0) then		
	&apos;Compare &apos; . #propertyName . &apos; &apos; . #filter . &apos; &apos; . #value;
else
	&apos;&apos;;
end if;
				</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>FilterNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{C69423B9-CBFD-4CE5-B979-1F54A793FC3A}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>378 -1020</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Pass or Fail a data record depending on the results of a property comparison operation</sci:value>
						<sci:value>This component uses a binary comparison operation to decide whether to return the record out the Pass port (true) or the Fail port (false).</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>A generic data record</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records which contain the Property Name property that passes the comparison operation</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records which do not contain the Property Name property, or do not pass the comparison operation</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>18.1.0.1398</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed Mar 29 10:12:15 2017</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>9</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Property Filters\Compare Property to Value Filter</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.SDWriter.1">
				<sci:component name="SD Writer" version="2">
					<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false">
						<sci:help>The filename or URL for the destination data. To save in compressed (zipped) format, add the extension .gz or .zip to the filename.</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>IfFileExists</sci:member>
						<sci:member>CharacterEncoding</sci:member>
						<sci:value>$(UserDir)/PP/IonModel/NETSN100TemporalSplitTest.sd.gz</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to write (all if value is empty)</sci:help>
					</sci:arg>
					<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>What to do if the given destination file already exists</sci:help>
						<sci:legalval selected="true">Overwrite</sci:legalval>
						<sci:legalval>Append</sci:legalval>
						<sci:legalval>Halt</sci:legalval>
					</sci:arg>
					<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Indicates the character set that will be used within the file.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;ANSI&lt;/b&gt; 
is the default and specifies a character set where each character is defined by a single byte.  This 
allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications 
can read these files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;UTF-8&lt;/b&gt; specifies a variable length character 
set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters 
specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications 
do not support UTF-8 files.&lt;/li&gt;
 
&lt;li&gt;&lt;b&gt;Unicode&lt;/b&gt; and &lt;b&gt;Unicode big 
endian&lt;/b&gt; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  
Depending on which is used will determine the order in which the bytes appear for each character. Many 
applications do not support Unicode or Unicode big endian files.&lt;/li&gt;
&lt;/ul&gt;
 
&lt;p&gt;&lt;b&gt;See 
Also&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information about each of these encoding styles, 
go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org/&apos;)&quot;&gt;http://www.unicode.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">ANSI</sci:legalval>
						<sci:legalval>UTF-8</sci:legalval>
						<sci:legalval>Unicode</sci:legalval>
						<sci:legalval>Unicode big endian</sci:legalval>
					</sci:arg>
					<sci:arg name="SD Format Options" type="StringType" required="false" visibility="visible" multi="true" expanded="true">
						<sci:help>Options for the SD Writer:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Write Structure&lt;/b&gt;:  Includes 
available structure information with each record.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Write Properties&lt;/b&gt;:  
Includes available property information with each record.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Write Date&lt;/b&gt;:  
Writes the current date into the file.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Write Fully Padded Lines&lt;/b&gt;:  
Writes all the fields in the Atoms and Bonds lines, padding with zeroes those fields with undefined values.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Write 
Query Info&lt;/b&gt;:  Writes out MOL-file query information and also additional SciTegic molecule query 
information to the properties of the SD record.
To read the SciTegic-specific part of this information 
back in, use a SciTegic SD Reader with the ReadQueryInfo parameter set to True. (This option writes out 
substructure queries that may have come from SMARTS queries. It also stops writing query information 
for viewers that cannot handle it).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Write Two Spaces In Data Header Line&lt;/b&gt;:  
When on, data headers will be &lt;TT&gt;&amp;gt&amp;nbsp&amp;nbsp&amp;ltPropName&amp;gt&lt;/TT&gt;.  
When off, data headers will be &lt;TT&gt;&quot;&amp;gt&amp;nbsp&amp;ltPropName&amp;gt&quot;&lt;/TT&gt;.  
The standard does not specify how many spaces there should be. Making this option available for compatibility 
with 3rd party readers.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Wrap Long Property Lines&lt;/b&gt;:  By the CTFile 
standard property lines are limited to 200 characters.  When selected, properties longer than 200 characters 
are with newlines every 200 characters.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Skip Null Or Empty String Properties&lt;/b&gt;:  
When selected, properties that are either null or empty strings will be skipped upon SD export.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Write 
Dot For Empty String Properties&lt;/b&gt;:  In the CTFile format, an empty line is used to terminate 
a property value.  Because of this, there is a convention of writing a &apos;.&apos; on an empty line 
to distinguish between a property that has an empty string value (&quot;&quot;) and a property that has 
no value (or a null value).  Selecting this option enables this convention and empty string properties 
are written with a &apos;.&apos; on the first line and an empty second line to terminate the property.  
When not selected, empty string properties will be written with only a single empty terminating line 
(the same as null properties).  The default for this option is &quot;on&quot; to match the behavior in 
previous versions.  Note that empty string members of string array properties (i.e. empty lines in multi-line 
properties) will always be written with a &apos;.&apos; to prevent an empty line from terminating the 
property.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Write Templates&lt;/b&gt;:  When the molecule has SCSR sequence 
atoms that refer to residue templates, this parameter specifies whether or not to include all the template 
definitions (local and global) in a TEMPLATE block as part of the CTAB, or to include only the local 
SCSR templates, the ones that are not defined in the global templates specified by &lt;i&gt;Global Templates&lt;/i&gt; 
in the SD Reader component. The local templates always need to be saved because the SD Reader would not 
be able to read the molecule otherwise. &lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert To H2 And H+ Atom Types:&lt;/b&gt; 
&apos;H2&apos; and &apos;H+&apos; are two non-standard element types that can be assigned to atoms by 
the BIOVIA Draw sketcher. They represent unattached Hydrogen (a Hydrogen molecule) and charged Hydrogen 
(a proton), respectively. When this parameter is selected, explicit hydrogen atoms are checked to determine 
if they can be classified as &apos;H2&apos; or &apos;H+&apos; and, if so, they are written out with these 
special types instead of just &apos;H&apos;.&lt;/li&gt; 
&lt;li&gt;&lt;b&gt;Convert Pi Systems To Radicals:&lt;/b&gt; 
When checked, converts pi systems involved in pi bonds into their radical representation which is supported 
by both the V2000 and V3000 formats.  When not checked, pi bonds and pi systems are written out in V3000 
format using multiple-attachment point coordination bonds (type 9).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Use 
2H and 3H for Hydrogen Isotopes&lt;/b&gt;: Toggles whether to explicitly write out hydrogen isotopes 
using M ISO lines in the V2000 format or MASS values in the V3000 format.  When not checked, the simpler 
&quot;D&quot; and &quot;T&quot; symbols will be used.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&amp;nbsp
&lt;/p&gt;
&lt;b&gt;V2000 
and V3000 Format Parameters&lt;/b&gt;
&lt;p&gt;
The next two options can be used to force the SD file 
format to be exclusively V2000 or V3000. If none of the options is selected, the input molecules are 
written in V2000 format unless they contain features that require the use of the V3000 format. These 
features include presence of enhanced stereo markings, more than 999 atoms or bonds, atom lists with 
more than 16 atom types or bonds of zero order (dative, coordination, hydrogen bonds). In this case, 
the output SD file might contain a mix of V2000 and V300 molecules.
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use 
V3000 Format&lt;/b&gt;:  Force the format to be V3000 for all molecules.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Use 
V2000 Format&lt;/b&gt;:  Force the format to be V2000 for all molecules. Any molecule with features that 
require the V3000 format is sent to the Fail port. Note that the Fail port in the SD Writer is not active 
by default. If you want to use this option, make sure to activate the component Fail port by right-clicking 
on the component and selecting the &lt;i&gt;Toggle Ports&lt;/i&gt; menu.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Write Structure</sci:legalval>
						<sci:legalval selected="true">Write Properties</sci:legalval>
						<sci:legalval selected="true">Write Date</sci:legalval>
						<sci:legalval>Write Fully Padded Lines</sci:legalval>
						<sci:legalval selected="true">Write Query Info</sci:legalval>
						<sci:legalval>Write Two Spaces In Data Header Line</sci:legalval>
						<sci:legalval selected="true">Wrap Long Property Lines</sci:legalval>
						<sci:legalval>Skip Null Or Empty String Properties</sci:legalval>
						<sci:legalval selected="true">Write Dot For Empty String Properties</sci:legalval>
						<sci:legalval>Use V3000 Format</sci:legalval>
						<sci:legalval>Use V2000 Format</sci:legalval>
						<sci:legalval selected="true">Write Templates</sci:legalval>
						<sci:legalval>Convert To H2 And H+ Atom Types</sci:legalval>
						<sci:legalval>Convert Pi Systems To Radicals</sci:legalval>
						<sci:legalval>Use 2H and 3H for Hydrogen Isotopes</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>Name</sci:member>
						<sci:member>Comment</sci:member>
					</sci:arg>
					<sci:arg name="Name" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Name of property that holds the name of each molecule</sci:help>
						<sci:value>Name</sci:value>
					</sci:arg>
					<sci:arg name="Comment" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Name of the property that holds the comment to write in the CTAB header for each molecule</sci:help>
						<sci:value>Comment</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="HasConvertPiSystemOption" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="HasWriteDotOption" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/chemistry</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Oct 07 13:39:57 2014</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>SD Writer</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{DC8EE7B0-0620-42FE-944C-B4CD1E79480E}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SD Writer</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>666 -1195</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Writes an SD (structured data) file</sci:value>
						<sci:value>Writes the molecule and associated property data to the &lt;i&gt;Destination&lt;/i&gt; 
file in SD format.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To read files 
in SD format, use the &lt;a href=&quot;javascript:DoLink(&apos;{CA65B896-4FE6-4E3A-B884-DC16B53B8D26}&apos;)&quot;&gt;SD 
Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To convert molecules to and from a text property containing the 
molecular connection table (CTAB) in MOL format, use &lt;a href=&quot;javascript:DoLink(&apos;{E622FBD9-9FA9-451A-A102-1800B5F28B6D}&apos;)&quot;&gt;Molecule 
to CTAB&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{7D354B65-DDD8-4EA4-83A7-21501A8A6852}&apos;)&quot;&gt;Molecule 
from CTAB&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</sci:value>
						<sci:value>Molecule</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.5.0.606</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>13</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Chemistry\Data Access and Manipulation\Writers\SD Writer</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.MDLSDReader.1">
				<sci:component name="SD Reader" version="2">
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The file or URL source to read</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>SourceTag</sci:member>
						<sci:member>Keep Properties</sci:member>
						<sci:member>UTF-8 Auto Detect</sci:member>
						<sci:value>$(UserDir)/PP/IonModel/NETSN100TemporalSplitTraining.sd.gz</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
					</sci:arg>
					<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called 
&lt;b&gt;SourceTag&lt;/b&gt; is created and holds the value indicated.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;None&lt;/b&gt;: 
No SourceTag property is created and any existing ones are removed.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Filename&lt;/b&gt;: 
The name of the file read.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FilenameAndExtension&lt;/b&gt;: The name of the 
file read with its file extension.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FullFilename&lt;/b&gt;: The name of the 
file read, including the directory path.&lt;/li&gt;&lt;li&gt;&lt;b&gt;ZipFilename&lt;/b&gt;: When reading 
a compressed zip file, the filename within the compressed archive.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Number&lt;/b&gt;: 
When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;&lt;li&gt;&lt;b&gt;Letter&lt;/b&gt;: 
When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;&lt;li&gt;&lt;b&gt;KeepCurrent&lt;/b&gt;: 
Keeps the current value of SourceTag.&lt;/li&gt;&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Filename</sci:legalval>
						<sci:legalval>FilenameAndExtension</sci:legalval>
						<sci:legalval>FullFilename</sci:legalval>
						<sci:legalval>ZipFilename</sci:legalval>
						<sci:legalval>Number</sci:legalval>
						<sci:legalval>Letter</sci:legalval>
						<sci:legalval>KeepCurrent</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
						<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.</sci:help>
					</sci:arg>
					<sci:arg name="UTF-8 Auto Detect" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;UTF-8 is a type of character encoding used to represent international characters with multiple bytes whereas basic Latin characters remain as a single byte.  Files can be stored with a Byte Order Mark (BOM) to indicate that the type of character encoding.&lt;/p&gt;
&lt;p&gt;When reading files that do not have a BOM, this parameter allows the reader to attempt to automatically detect UTF-8 encodings and convert as needed.  However, be aware that automatic detection is not always reliable.  In some cases, valid text stored in different character encodings can appear to be valid UTF-8.  In these cases, the automatic detection will result in garbled text.  When this occurs, you can consider using the &lt;a href=&quot;javascript:DoLink(&apos;{B0B1B56C-3DF6-444C-BB78-B43211188F63}&apos;)&quot;&gt;Binary Reader&lt;/a&gt; to read the file, then converting using the Pilotscript function &lt;b&gt;ConvertBytesToString&lt;/b&gt;&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>ReadProperties</sci:member>
						<sci:member>PutNameInProperty</sci:member>
						<sci:member>ReadQueryInfo</sci:member>
						<sci:member>PutCommentInProperty</sci:member>
						<sci:member>SD Format Options</sci:member>
						<sci:member>Global Templates</sci:member>
					</sci:arg>
					<sci:arg name="SD Format Options" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>&lt;p&gt;Options available for the SD Reader:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Properties Can Contain $$$$:&lt;/b&gt;  By the CTFile standard, a property can contain a &apos;$$$$&apos;-line.  
Properties or data field values are terminated by a blank line.  Only then will the &apos;$$$$&apos;-line 
terminate the full data block.  Setting this option off will terminate the data block upon any read of 
a &apos;$$$$&apos;-line.  This option is available to provide compatibility with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;One-space Lines Terminate Properties:&lt;/b&gt;  By the CTFile standard, properties or data fields values are 
terminated by a blank line. Selecting this option will terminate the data block when encountering a line 
containing a space as the only character in the line.  This option is available to provide compatibility 
with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Unwrap Long Property Lines:&lt;/b&gt;  By the CTFile standard, lines in property fields cannot exceed 200 characters.  When this option is selected and a property line of exactly 200 characters is found, the newline character will be ignored and property string will continue on the next line.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Read Unknown Stereo Parity:&lt;/b&gt;  When selected, the SD Reader will use the &apos;Atom Parity&apos; value (parity of 
&apos;3&apos;) to mark unknown stereo centers in 3D mol files.  This will leave these atoms marked as 
&apos;unknown stereo&apos; and will not calculate the stereo from the coordinates.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Process Complex Data Header Lines:&lt;/b&gt; Data header lines are the lines in the SD format that precede the actual data. They can contain the data field name (enclosed in angular brackets &lt;&gt;), the data field number (as DTn), the external registry number (enclosed in parentheses), and other optional information. When this parameter is set to False, only the data field name is parsed and used to set the corresponding property name. All the other information in the line is ignored. When the parameter is set to true, all the information is parsed. The property name is set from either the field name in &lt;&gt; or the DTn. If both are present the field name takes priority and the DTn number is saved as an additional property named &lt;b&gt;FieldName#DTn&lt;/b&gt;. The external registry number is saved as &lt;b&gt;FieldName#ExtRegNum&lt;/b&gt; and any other information is saved as &lt;b&gt;FieldName#OtherDataFieldInfo&lt;/b&gt;. When the molecules are written to an SD file, the data header lines are reconstructed from these properties. The default state of this parameter is False, as parsing, preserving, and eventually writing all the information in the data header lines can be costly, specially for SD files with many data fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert From H2 And H+ Atom Types:&lt;/b&gt; &apos;H2&apos; and &apos;H+&apos; are two non-standard element types that can be assigned to atoms by the BIOVIA Draw sketcher. They represent unattached Hydrogen (a Hydrogen molecule) and charged Hydrogen (a proton), respectively. When this parameter is selected, these atom types are converted to standard hydrogen atoms upon reading, with charges of 0 for H2 and +1 for H+. Otherwise, these atoms are read and perceived as unknown atom types, with &apos;H2&apos; and &apos;H+&apos; as the atom labels.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert Radicals To Pi Systems:&lt;/b&gt; When selected, pi bonds will be perceived between adjacent atoms marked with radicals and any adjacent metal atom.  Once pi bonds are perceived, subsequent exports will represent the pi bonds using the V3000 format and one-to-many coordination bonds (type 9) unless the writer&apos;s &lt;i&gt;Convert Pi Systems To Radicals&lt;/i&gt; option is used to convert the pi systems back. &lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert GEN+DAT to Polymer Repeat Units:&lt;/b&gt; When selected, this option will automatically convert input GEN sgroups with linked DAT sgroups having the special fieldname of &apos;rc&apos; and numeric or numeric range data internally into polymer repeat sgroups.  This usage is a special type of NONS (Non-Specific Structure) convention that was prototyped in previous releases.  Disabling this conversion will have a higher likelihood of producing a structure that can be registered into Direct databases. &lt;/li&gt;
&lt;li&gt;&lt;b&gt;Always Keep Enhanced Stereo:&lt;/b&gt; Preserves any enhanced stereo collections that are read in from V3000 MOL file.  When disabled, stereo structures will be checked to see if they can be represented more simply using only the Chiral Flag.  That is, structures with only ABS centers can be represented without enhanced stereo by setting the Chiral Flag on and structures with all centers in a single AND group can be represented without enhanced stereo by setting the Chiral Flag off.  Enhanced stereo collections that do not fit into the above cases are always preserved.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Properties Can Contain $$$$</sci:legalval>
						<sci:legalval>One-space Lines Terminate Properties</sci:legalval>
						<sci:legalval selected="true">Unwrap Long Property Lines</sci:legalval>
						<sci:legalval>Read Unknown Stereo Parity</sci:legalval>
						<sci:legalval>Process Complex Data Header Lines</sci:legalval>
						<sci:legalval selected="true">Convert From H2 And H+ Atom Types</sci:legalval>
						<sci:legalval>Convert Radicals To Pi Systems</sci:legalval>
						<sci:legalval selected="true">Convert GEN+DAT to Polymer Repeat Units</sci:legalval>
						<sci:legalval>Always Keep Enhanced Stereo</sci:legalval>
					</sci:arg>
					<sci:arg name="ReadProperties" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Select True to read the properties for each molecule (in addition to the structures)</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ReadQueryInfo" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If properties starting with &quot;QueryInfo&quot; are present, use them to set up query information on the atoms and bonds. (This is how, for example, SMARTS query information can be preserved when writing to an SD format file.) For molecules saved in MOL/SD format, this information only contains information that cannot be written out in the connection table.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="PutNameInProperty" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>What to call the property that holds the name of each molecule</sci:help>
						<sci:value>Name</sci:value>
					</sci:arg>
					<sci:arg name="PutCommentInProperty" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>What to call the property that holds the comment associated with each molecule</sci:help>
					</sci:arg>
					<sci:arg name="Global Templates" type="URLType" required="false" visibility="visible" multi="false">
						<sci:help>V3000 SD or MOL files containing template definitions for amino acid, nucleic acid or other residues or monomers. These templates can then be refered to by molecules read by the SD reader.&lt;p&gt;
The default template file included in the Chemistry collection, &lt;i&gt;data\Direct\Direct_templates.mol&lt;/i&gt; contains definitions for 22 amino acids and 8 DNA and RNA templates.</sci:help>
						<sci:value>data\HELM\SCSRtemplates.mol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="HasConvertPiSystemOption" type="BoolType" required="false" visibility="nevershow" multi="false" legalvalsenforced="false">
						<sci:help>Hidden flag specifying the presence of the &quot;Convert Radicals To Pi Systems&quot; option.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="AllowUnknownDoubleBondsFromCoordinates" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>According to the CTfile specifications, the cis/trans character of double bonds with bond stereo set to zero is determined from the coordinates. This parameter controls whether or not to assign unknown bond stereo to double bonds for which the stereo could not be determined from the coordinates, either because there are no coordinates or because of colinearity issues.  When the parameter is set to False and the stereo could not be determined, no specific stereo configuration is assigned to the double bond, but it is not marked as unknown stereo.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/chemistry</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed Apr 06 11:41:13 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>SD Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{CA65B896-4FE6-4E3A-B884-DC16B53B8D26}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SD Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>4</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -1545</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Reads MOL (molecule CTAB) files and SD (structured data) files</sci:value>
						<sci:value>&lt;p&gt;Creates a molecular data record for each molecule represented in the &lt;i&gt;Source&lt;/i&gt; 
data file.  All properties contained in the file are read into the data records.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;This 
component can also read zipped (.zip) and URL-based files.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;See 
Also:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;To write files in MOL or SD format, use the &lt;a href=&quot;javascript:DoLink(&apos;{DC8EE7B0-0620-42FE-944C-B4CD1E79480E}&apos;)&quot;&gt;SD 
Writer&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;To convert a molecule to and from between text properties in CTAB 
format, use &lt;a href=&quot;javascript:DoLink(&apos;{E622FBD9-9FA9-451A-A102-1800B5F28B6D}&apos;)&quot;&gt;Molecule 
to CTAB&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{7D354B65-DDD8-4EA4-83A7-21501A8A6852}&apos;)&quot;&gt;Molecule 
from CTAB&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Other related CTFile format file readers include &lt;a href=&quot;javascript:DoLink(&apos;{169AB4E5-A470-477B-AA65-50464411036C}&apos;)&quot;&gt;RG 
Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{036731AA-0015-4606-9750-7D9D020F21C8}&apos;)&quot;&gt;RXN 
Reader&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{55431CCB-06EA-4741-B95B-633C877E3E9B}&apos;)&quot;&gt;RD 
Reader&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Molecule</sci:value>
						<sci:value>Data fields in the SD file will be added to the property fields</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>17.1.0.59</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>14</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Chemistry\Data Access and Manipulation\Readers\SD Reader</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.JoinProperties.1">
				<sci:component name="Join Data from Cache" version="2">
					<sci:arg name="JoinUsing" type="PropertyNameType" required="true" visibility="visible" multi="false">
						<sci:help>The name of the property that identifies which records to join. When a record in the cache 
has the same value for this property as the incoming streaming data record, its properties and child 
nodes are added to the streaming record. Calculable properties can be used for the streaming data, but 
data in the cache must already contain stored properties to join.

If you provide a comma-separated list 
of property names, then by default all values must match. (You can control this behavior by changing 
JoinUsingListType.) Or, if you provide a property that is an array of values, then all values must match 
(and the source must provide the data in an array-based form.)</sci:help>
						<sci:member>JoinUsingListType</sci:member>
						<sci:member>IgnoreCase</sci:member>
						<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
						<sci:member>JoinPropertyType</sci:member>
						<sci:value>accession</sci:value>
					</sci:arg>
					<sci:arg name="JoinUsingListType" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: Join using only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: Joins using the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;</sci:help>
						<sci:legalval>UseFirstDefinedValue</sci:legalval>
						<sci:legalval selected="true">UseAllValues</sci:legalval>
					</sci:arg>
					<sci:arg name="JoinPropertyType" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The data type of the join property</sci:help>
						<sci:legalval>IsNumeric</sci:legalval>
						<sci:legalval selected="true">IsText</sci:legalval>
						<sci:legalval>IsDate</sci:legalval>
					</sci:arg>
					<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set JoinPropertyType to IsText&apos;);
Parameter(&apos;JoinPropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The name of the cache that was written using the Cache Writer</sci:help>
						<sci:member>Scope</sci:member>
						<sci:value>protdesc</sci:value>
					</sci:arg>
					<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The scope within which the cache we wish to join against exists.
&lt;ul&gt;
&lt;li&gt;&lt;I&gt;Job Only&lt;/I&gt; all caches created within the currently-running protocol.
&lt;li&gt;&lt;I&gt;User Only&lt;/I&gt; all caches created so that all jobs by that user can see them.
&lt;li&gt;&lt;I&gt;All Users&lt;/I&gt; all caches created by any user in the global scope. 
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Job Only</sci:legalval>
						<sci:legalval>User Only</sci:legalval>
						<sci:legalval>All Users</sci:legalval>
					</sci:arg>
					<sci:arg name="Join Behavior" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:member>JoinOnto</sci:member>
						<sci:member>WhenJoiningOnto</sci:member>
						<sci:member>JoinAllNullString</sci:member>
						<sci:member>MultipleReferenceBehavior</sci:member>
						<sci:member>AppendNodes</sci:member>
					</sci:arg>
					<sci:arg name="JoinOnto" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Indicates which data record will be output:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;ProcessData&lt;/i&gt;: The data streaming through the pipeline remains with properties and child nodes from the cache copied onto the record.
&lt;li&gt;&lt;i&gt;Reference&lt;/i&gt;: The data from the cache remains with properties and child nodes from the streaming data record copied onto the record.  Only data records that successfully join against the incoming data stream will be output.
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">ProcessData</sci:legalval>
						<sci:legalval>Reference</sci:legalval>
					</sci:arg>
					<sci:arg name="WhenJoiningOnto" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;During the joining of two property lists, this parameter indicates how differences 
between the property lists are resolved.  
By default, the streaming input data (process data) serves 
as the base for a join and the cache data (reference data) is treated as the joining data (this distinction 
can be reversed using the &lt;i&gt;JoinOnto&lt;/i&gt; parameter).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;OverwriteOrCreate&lt;/i&gt;: 
Copies all properties from the joining data onto the base data, overwriting the values of any properties 
that already exist.
&lt;li&gt;&lt;i&gt;OverwriteExisting&lt;/i&gt;: Copies only those properties from 
the joining data to the base data that already exist on the base.
&lt;li&gt;&lt;i&gt;CreateIfNew&lt;/i&gt;: 
Copies only those properties from the joining data to the base data that do not already exist on the 
base data.
&lt;li&gt;&lt;i&gt;AppendOrCreate&lt;/i&gt;: The value of a joining property that already 
exists in the base data is appended  (as an array) to the value in the base property.  The other joining 
properties that are not already present in the base data are copied there.
&lt;li&gt;&lt;i&gt;AppendExisting&lt;/i&gt;: 
The value of a joining property that already exists in the base data is appended  (as an array) to the 
value in the base property.  No other properties are copied. 
&lt;li&gt;&lt;i&gt;GroupData&lt;/i&gt;: 
Creates a hierarchical group containing both the joining and base data.
&lt;/ul&gt;</sci:help>
						<sci:legalval>OverwriteOrCreate</sci:legalval>
						<sci:legalval>OverwriteExisting</sci:legalval>
						<sci:legalval>CreateIfNew</sci:legalval>
						<sci:legalval selected="true">AppendOrCreate</sci:legalval>
						<sci:legalval>AppendExisting</sci:legalval>
						<sci:legalval>GroupData</sci:legalval>
					</sci:arg>
					<sci:arg name="AppendNodes" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>When joining data records that contain child nodes, whether to append the child nodes of the joining data onto the base data as determined by the &lt;i&gt;JoinOnto&lt;/i&gt; parameter.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="MultipleReferenceBehavior" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;What to do if there are multiple records in the cache (reference data) with a matching 
value for the &lt;i&gt;JoinUsing&lt;/i&gt; property of an incoming streaming record.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;JoinFirst&lt;/i&gt;: 
Uses the first one found. 
&lt;li&gt;&lt;i&gt;JoinLast&lt;/i&gt;: Uses the last one found. 
&lt;li&gt;&lt;i&gt;JoinAll&lt;/i&gt;: 
Appends all values for each property together in an array. 
&lt;li&gt;&lt;i&gt;JoinTogether&lt;/i&gt;: 
Joins each of the matching records in the cache with the streaming record individually and independently, 
which results in multiple records output for one input record.
&lt;/ul&gt;</sci:help>
						<sci:legalval>JoinFirst</sci:legalval>
						<sci:legalval>JoinLast</sci:legalval>
						<sci:legalval>JoinAll</sci:legalval>
						<sci:legalval selected="true">JoinTogether</sci:legalval>
					</sci:arg>
					<sci:arg name="JoinAllNullString" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;This string is used during append to pad out empty values when MultipleReferenceBehavior is set to  &quot;JoinAll&quot;. This keeps the generated arrays of values in sync for multiple references.&lt;/p&gt;
&lt;p&gt;The value &quot;None&quot; causes no padding to occur.&lt;/p&gt;</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MultipleReferenceBehavior to JoinAll&apos;);
Parameter(&apos;MultipleReferenceBehavior&apos;) eq &apos;JoinAll&apos;</sci:enabledscript>
						<sci:value>None</sci:value>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>Prefix</sci:member>
						<sci:member>GroupName</sci:member>
					</sci:arg>
					<sci:arg name="Prefix" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A prefix to add to each property name as it is joined onto the streaming data (instead of overwriting or appending to the existing value).</sci:help>
					</sci:arg>
					<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>If &lt;i&gt;WhenJoiningOnto&lt;/i&gt; is set to &quot;GroupData&quot;, this is the name of the group node into which the results are placed</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set WhenJoiningOnto to GroupData&apos;);
Parameter(&apos;WhenJoiningOnto&apos;) eq &apos;GroupData&apos;</sci:enabledscript>
						<sci:value>Data</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="PassDownParameters" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Parameters to pass on to the reader</sci:help>
						<sci:value>Scope</sci:value>
					</sci:arg>
					<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the JoinUsing property -- even 
non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  JoinPropertyType 
is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with 
a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a 
numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then 
records containing non-numeric strings for the JoinUsing property will be sent out the Fail port.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Source" type="URLType" required="true" visibility="nevershow" multi="false">
						<sci:help>Names of data files, a learned model, or data cache ID, to join with the streaming data that enters this component. If multiple files are given, each is joined in sequence. (The Windows browser reverses the order of the files during selection, so you should select from last to first.)</sci:help>
						<sci:value>$(CacheID)</sci:value>
					</sci:arg>
					<sci:arg name="SourceFormat" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>The name of the reader to use for the join source. (For readers with particular parameters, you can create them and save them, then add their name to the options list for this protocol.  For example, you could create a Delimited Text with Commas and No Column Names component, save it to your tab, then add it to this list and select.)</sci:help>
						<sci:legalval>Delimited Text With Column Names</sci:legalval>
						<sci:legalval>Delimited Text No Column Names</sci:legalval>
						<sci:legalval>Comma Delimited With Column Names</sci:legalval>
						<sci:legalval>Tab Delimited With Column Names</sci:legalval>
						<sci:legalval>Space Delimited With Column Names</sci:legalval>
						<sci:legalval>Excel XLS With Column Names</sci:legalval>
						<sci:legalval>Excel XLS No Column Names</sci:legalval>
						<sci:legalval>MDL SD Format</sci:legalval>
						<sci:legalval>Learned Model Reader</sci:legalval>
						<sci:legalval selected="true">{704E3781-33EA-42BB-9099-05B44C3D08E6}</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="nevershow" multi="false">
						<sci:help>A list of properties to join from the source file. If this value is not defined, all properties are joined into the record.</sci:help>
					</sci:arg>
					<sci:arg name="UseIndexFile" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Uses an index file when performing the Join operation when set to &quot;True&quot;. An index file is created if it does not already exist; it is used to accelerate the join process.

 Note: This option is useful for optimizing join operations against a file that may be used many times, at the first time of use an index file can be created to speed accesses in subsequent uses.  This file is created in the same directory as the source file and is automatically used for any subsequent join.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Sep 13 07:03:53 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}</sci:value>
					</sci:arg>
					<sci:arg name="CheckSyntax" type="BoolType" required="true" visibility="nevershow" multi="false">
						<sci:help>Whether to perform a quick syntax check at the beginning of the file when we open it, and if a problem is found, throw an error.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="SourceComponent" type="ComponentType" required="false" visibility="nevershow" multi="false">
						<sci:help>Name of the data format of the Source file</sci:help>
						<sci:value>$(SourceFormat)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;JoinUsing&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>if (strlength(trim(parameter(&apos;JoinUsing&apos;, 2))) &gt; 0) then
	&quot;Join on &quot; . trim(parameter(&apos;JoinUsing&apos;, 2));
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Join Data from File</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>JOINNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>378 -1545</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Augments data records with properties from data in a cache where specified property values match</sci:value>
						<sci:value>&lt;p&gt;For each incoming data record, a property value or set of values specified by 
&lt;i&gt;JoinUsing&lt;/i&gt; is used to identify matching records in the data cache created by the &lt;a 
href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache Writer&lt;/a&gt; 
specified by &lt;i&gt;CacheID&lt;/i&gt;.  Properties from these records are added to the incoming data 
record.  If no match is found, the record is sent out the Fail port.&lt;/p&gt;

&lt;p&gt;Records match 
if the value of the &lt;i&gt;JoinUsing&lt;/i&gt; property is the same for the incoming record as in the 
cache.  If multiple &lt;i&gt;JoinUsing&lt;/i&gt; properties are specified, the behavior depends on &lt;i&gt;JoinUsingListType&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;By 
default, this component expects the cache to have been created by the current job.  If the cache is outside 
the scope of the current job, update &lt;i&gt;Scope&lt;/i&gt; accordingly&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;By 
default only properties are extracted from the matching records.  Use &lt;i&gt;JoinOnto&lt;/i&gt; to 
obtain additional information such as molecular data.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use 
&lt;a href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache 
Writer&lt;/a&gt; to create the data cache specified by &lt;i&gt;CacheID&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;Use 
&lt;a href=&quot;javascript:DoLink(&apos;{D24316C3-9D5C-4B5D-ADF3-28F258F11858}&apos;)&quot;&gt;Join 
Data from File&lt;/a&gt; to join against a source data file.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records which received additional properties from the source file through a successful join.</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records for which no data was found in the source file.</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>17.1.0.119</sci:value>
					</sci:arg>
					<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
						<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>6</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Data Manipulators\Join Data from Cache</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="6 only Molecular Fingerprints" version="2">
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;DD:MM:SS&amp;gt; - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Convert Fingerprints To" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Convert Fingerprints To</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>This option controls the automatic conversion of fingerprint properties into different format</sci:help>
						<sci:member>Fixed Length</sci:member>
						<sci:legalval>Leave As-Is</sci:legalval>
						<sci:legalval>Fixed-Length Array of Bits</sci:legalval>
						<sci:legalval selected="true">Fixed-Length Array of Counts</sci:legalval>
					</sci:arg>
					<sci:arg name="Fixed Length" type="LongType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Fixed Length</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>If Convert Fingerprints To is given a fixed-length type, then this is the fixed-length.  Bits larger than this length are folded into this range using a mod operation.</sci:help>
						<sci:value>1024</sci:value>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Final Model Ion Fingerprints</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>CalculatorNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{189EB20A-2776-FE4A-9E57-6CC84D7C92A8}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>666 -1545</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>6 only Molecular Fingerprints</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>18.1.100.11</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>peter</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed Sep 11 09:45:36 2019</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>7</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Unknown</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.CalculateECFP.2">
						<sci:component name="Molecular Fingerprints" version="2">
							<sci:arg name="Type" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The type of fingerprint to generate:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;ExtendedConnectivity&lt;/b&gt;: Generates higher-order features.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Path&lt;/b&gt;: Generates higher-order features.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;AtomEnvironment&lt;/b&gt;: Generates higher-order features using a method developed by Bender &lt;i&gt;et al&lt;/i&gt;.  This generates a String Fingerprint.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;HashedAtomEnvironment&lt;/b&gt;: Uses a hash code to create an Integer Fingerprint representation of the &lt;b&gt;AtomEnvironment&lt;/b&gt; fingerprints for ease of use (e.g. learned models, etc.).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;UserKeys&lt;/b&gt;:  Fingerprints derived from user-defined substructures. These substructure queries are stored in MOL or SD query format in &quot;data\Queries\UserQueries&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on Extended-Connectivity fingerprints, see Rogers, D. and Hahn, M, Extended-Connectivity Fingerprints. J. Chem. Inf. Model. 2010, 50(5), 742-754&lt;/li&gt;
&lt;li&gt;For more information on AtomEnvironment fingerprints, see Bender, A., Mussa, H.Y., and Glen, R.C., Molecular Similarity Searching Using Atom Environments, Information-Based Feature Selection, and a Naive Bayesian Classifier. J. Chem. Inf. Comput. Sci. 2004, 44, 170-178&lt;/li&gt;
&lt;li&gt;The &lt;b&gt;MDLPublicKeys&lt;/b&gt; fingerprint previously found here is a native Pipeline Pilot implementation of the MDL fingerprint which does not always match the results obtained from legacy-MDL products such as the Direct Cartridge.  This fingerprint has been deprecated in favor of an implementation using MDL libraries which is available in the &lt;a href=&quot;javascript:DoLink(&apos;{6352F5A7-9C1C-4934-930E-F96B1E785E92}&apos;)&quot;&gt;MDL Key Fingerprints&lt;/a&gt; component as the &lt;b&gt;MDL2DKeys166&lt;/b&gt; descriptor.  &lt;b&gt;MDLPublicKeys&lt;/b&gt; is now available only as a calculable property (i.e. pilotscript: calculate(&quot;MDLPublicKeys&quot;);)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">ExtendedConnectivity</sci:legalval>
								<sci:legalval>Path</sci:legalval>
								<sci:legalval>AtomEnvironment</sci:legalval>
								<sci:legalval>HashedAtomEnvironment</sci:legalval>
								<sci:legalval>UserKeys</sci:legalval>
							</sci:arg>
							<sci:arg name="AtomAbstraction" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Method used to assign initial category for atom classes.
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;AtomType&lt;/b&gt;: (First letter: &quot;E&quot;) Uses atom type, charge and hybridization.&lt;/li&gt;

&lt;li&gt;&lt;b&gt;ALogPCode&lt;/b&gt;: (First letter: &quot;L&quot;) Uses ALogP category of atoms.&lt;/li&gt;

&lt;li&gt;&lt;b&gt;FunctionalClass&lt;/b&gt;: (First letter: &quot;F&quot;) Uses the following groups:
&lt;ul&gt;
&lt;li&gt;H-bond acceptor&lt;/li&gt;
&lt;li&gt;H-bond donor&lt;/li&gt;
&lt;li&gt;Positive ionizable&lt;/li&gt;
&lt;li&gt;Negative ionizable&lt;/li&gt; 
&lt;li&gt;Halogen&lt;/li&gt;
&lt;li&gt;Aromatic&lt;/li&gt;
&lt;li&gt;None of the above&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Sybyl&lt;/b&gt;: (First letter: &quot;S&quot;) Uses the Sybyl atom types used in the Tripos Mol2 File Format.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;UserAtomTypes&lt;/b&gt;: (First letter: &quot;U&quot;) Assumes that the property &lt;b&gt;UserAtomTypes&lt;/b&gt; is defined on the molecule, and contains an array of integers, one for each atom in the molecule.  The i&apos;th value in the array is the user atom type for the i&apos;th atom in the molecule.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Reaction&lt;/b&gt;: (First letter: &quot;R&quot;) Uses type, charge, hybridization, reactant or product, and &quot;reaction site&quot; information. Atoms are in the reaction site if they are changed by the reaction or attached to bonds that change. This information is perceived from the the reaction&apos;s atom-atom mappings. Only reaction site atoms are selected to be bit centers but atoms outside the site can be included for higher-distance bits. Can only be used for reaction inputs.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;ReactionSiteOnly&lt;/b&gt;:  (First letter: &quot;Q&quot;) Similar to &lt;b&gt;Reaction&lt;/b&gt; (see above). Only reaction site atoms are selected to be bit centers and atoms outside the reaction site are &lt;i&gt;excluded&lt;/i&gt; from any higher-distance bits. Can only be used for reaction inputs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Information about Sybyl atom types is available from Tripos:
&lt;a href=&quot;javascript:DoLink(&apos;http://www.tripos.com/mol2/atom_types.html&apos;)&quot;&gt;http://www.tripos.com/mol2/atom_types.html&lt;/a&gt;.
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;This parameter does not apply to MDLPublicKeys or UserKeys&apos;);
Parameter(&apos;Type&apos;) ne &apos;MDLPublicKeys&apos; and Parameter(&apos;Type&apos;) ne &apos;UserKeys&apos;</sci:enabledscript>
								<sci:legalval>FunctionalClass</sci:legalval>
								<sci:legalval>AtomType</sci:legalval>
								<sci:legalval>ALogPCode</sci:legalval>
								<sci:legalval selected="true">Sybyl</sci:legalval>
								<sci:legalval>UserAtomTypes</sci:legalval>
								<sci:legalval>Reaction</sci:legalval>
								<sci:legalval>ReactionSiteOnly</sci:legalval>
							</sci:arg>
							<sci:arg name="MaximumDistance" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>The maximum bond distance in the substructures represented in the fingerprint.
&lt;ul&gt;
&lt;li&gt;For extended connectivity fingerprints, this is the diameter of the neighborhood surrounding the central atom, and should be an even number.&lt;/li&gt; 
&lt;li&gt;For path fingerprints, this is the maximum number of bonds in the paths.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;This parameter does not apply to MDLPublicKeys or UserKeys&apos;);
Parameter(&apos;Type&apos;) ne &apos;MDLPublicKeys&apos; and Parameter(&apos;Type&apos;) ne &apos;UserKeys&apos;</sci:enabledscript>
								<sci:value>6</sci:value>
							</sci:arg>
							<sci:arg name="OutputType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Controls the way the fingerprint is presented:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Fingerprint&lt;/b&gt;: A list of the features present in the molecule, with duplicates removed.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Counts&lt;/b&gt;: A list of the features present in the molecule, with duplicates retained; if a feature occurs more than once in a molecule, that bit value is included more than once in the output list.&lt;/li&gt;
&lt;/ul&gt;

</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;This parameter does not apply to MDLPublicKeys or UserKeys&apos;);
Parameter(&apos;Type&apos;) ne &apos;MDLPublicKeys&apos; and Parameter(&apos;Type&apos;) ne &apos;UserKeys&apos;</sci:enabledscript>
								<sci:legalvalscript>#legalVals := &apos;Fingerprint&apos;;
if parameter(&apos;Type&apos;) ne &apos;MDLPublicKeys&apos; then
	append(#legalVals, &apos;Counts&apos;);
end if;
	
setLegalValues(#legalVals);</sci:legalvalscript>
								<sci:value>Counts</sci:value>
							</sci:arg>
							<sci:arg name="Options" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>Options for the fingerprint calculation. &lt;b&gt;IncludeStereo&lt;/b&gt; changes the fingerprint. The other options cause the calculation of other properties with associated information. The options are:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;IncludeStereo&lt;/b&gt;: (#S) include information from stereoatoms into fingerprint calculation.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;OutputBitDistance&lt;/b&gt;: (#D) output an array with the length or diameter of each bit.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;OutputBitSubstructure&lt;/b&gt;: (#C) output an array with an example of SMARTS of the fragment.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;OutputBitExactSubstructure&lt;/b&gt;: (#X) output an array with the SMARTS of the fragment, in this molecule.  (This is slower than OutputBitSubstructure, since the former can cache the first example it finds in a data set, and re-use it.)&lt;/li&gt;
&lt;li&gt;&lt;b&gt;OutputBitAllAtoms&lt;/b&gt;: (#A) output an array with the set of all atoms involved with a feature anywhere in the molecule.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;OutputBitFeatureAtoms&lt;/b&gt;: (#F) output an array with the set of atoms showing one example of the feature bit.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;OutputBitCentralAtom&lt;/b&gt;: (#Z) output an array with the number of the central atom for each bit.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;AddBitsToCentralAtom&lt;/b&gt;: (#P) output, to each central atoms&apos;s property collection, a list of its generated bits. (The atom property name is the name of the fingerprint.)&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:legalval>IncludeStereo</sci:legalval>
								<sci:legalval>OutputBitDistance</sci:legalval>
								<sci:legalval>OutputBitSubstructure</sci:legalval>
								<sci:legalval>OutputBitExactSubstructure</sci:legalval>
								<sci:legalval>OutputBitAllAtoms</sci:legalval>
								<sci:legalval>OutputBitFeatureAtoms</sci:legalval>
								<sci:legalval>OutputBitCentralAtom</sci:legalval>
								<sci:legalval>AddBitsToCentralAtom</sci:legalval>
							</sci:arg>
							<sci:arg name="UserKeyDirectory" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If given, use this directory (instead of &quot;data/Queries/UserQueries/&quot;) for the source of the user keys.  The name of the directory must end in a slash or backslash.

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;&lt;li&gt;The substructure queries defined here must be in either MOL or SD query format.&lt;/li&gt;
&lt;li&gt;The &quot;ReadQueryInfo&quot; parameter on the internal SD reader is enabled to allow the import of any non-CTAB atom and bond tests persisted in the property block.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
							</sci:arg>
							<sci:arg name="ForReactionsInclude" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Determines which part of inputs to examine.</sci:help>
								<sci:legalval selected="true">ReactantsAndProducts</sci:legalval>
								<sci:legalval>ReactantsOnly</sci:legalval>
								<sci:legalval>ProductsOnly</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/chemistry</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue May 21 13:30:28 2013</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>SCFC6</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Molecular Fingerprints</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>CALCULATORNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{C5873CBC-62ED-4F93-A565-13027A5B3512}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Calculates a variety of molecular and reaction fingerprints</sci:value>
								<sci:value>Uses one the following algorithms to calculate fingerprints on input molecules and reactions:
&lt;ul&gt;
&lt;li&gt;SciTegic extended-connectivity fingerprints
&lt;li&gt;Daylight-style path fingerprints
&lt;li&gt;Fingerprints derived from user-defined substructures. These substructure queries are stored in MOL or SD query format in &quot;data\Queries\UserQueries&quot;.
&lt;/ul&gt; 

For both the extended-connectivity and path fingerprints, a number of methods are available to define the atom abstraction used to generate the initial atom code. You should also specify the maximum path distance (such as number of bonds) that will be used to index an individual fragment.




</sci:value>
								<sci:value>Molecule</sci:value>
								<sci:value/>
								<sci:value>Molecule</sci:value>
								<sci:value>Records augmented with the molecular fingerprint property</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>9.0.1.28</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>17</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Chemistry\Property Calculators\Structural\Molecular Fingerprints</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.CalculateFP25D.1">
						<sci:component name="Molecular Pharmacophore Fingerprints" version="2">
							<sci:arg name="Size" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Number of features: pairs, triplets or quartets</sci:help>
								<sci:legalval selected="true">Pairs</sci:legalval>
								<sci:legalval>Triplets</sci:legalval>
								<sci:legalval>Quartets</sci:legalval>
							</sci:arg>
							<sci:arg name="MolecularFeatures" type="StringType" required="true" visibility="visible" multi="true">
								<sci:help>Molecular features to perceive and include in the pharmacophore keys</sci:help>
								<sci:legalval selected="true">HBondAcceptor</sci:legalval>
								<sci:legalval selected="true">HBondDonor</sci:legalval>
								<sci:legalval selected="true">PositiveCharge</sci:legalval>
								<sci:legalval selected="true">NegativeCharge</sci:legalval>
								<sci:legalval selected="true">PositiveIonizable</sci:legalval>
								<sci:legalval selected="true">NegativeIonizable</sci:legalval>
								<sci:legalval selected="true">Hydrophobe</sci:legalval>
								<sci:legalval selected="true">AromaticRing</sci:legalval>
								<sci:legalval selected="true">AttachmentPoint</sci:legalval>
							</sci:arg>
							<sci:arg name="ShortestPathInfo" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Level of detail about the shortest path between two features</sci:help>
								<sci:legalval>NumBondsOnly</sci:legalval>
								<sci:legalval selected="true">NumBondsAndNumRotBonds</sci:legalval>
								<sci:legalval>NumBondsAndBondTypes</sci:legalval>
							</sci:arg>
							<sci:arg name="MinimumDistance" type="LongType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Minimum number of bonds between two molecular features to be included in a pharmacophore key</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="MaximumDistance" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>Maximum number of bonds between two molecular features to be included in a pharmacophore key</sci:help>
								<sci:value>15</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:member>OutputType</sci:member>
								<sci:member>MaxNumberPharmacophores</sci:member>
								<sci:member>OutputFeatureInfo</sci:member>
								<sci:member>MustHaveAttachmentPoint</sci:member>
								<sci:member>Hydrophobic Factor</sci:member>
								<sci:member>Allow NonHydrophobic Atoms in Hydrophobic Rings</sci:member>
							</sci:arg>
							<sci:arg name="OutputType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Controls the way the fingerprint is presented:

 - Fingerprint: A list of the features present in the molecule, with duplicates removed.

 - Counts: A list of the features present in the molecule, with duplicates retained; if a feature occurs more than once in a molecule, that bit value is included more than once in the output list.

</sci:help>
								<sci:legalval selected="true">Fingerprints</sci:legalval>
								<sci:legalval>Counts</sci:legalval>
							</sci:arg>
							<sci:arg name="MaxNumberPharmacophores" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>Maximum number of keys to be generated for an individual molecule</sci:help>
								<sci:value>5000</sci:value>
							</sci:arg>
							<sci:arg name="OutputFeatureInfo" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>Output detailed information about the molecular features perceived in the molecule and the pharmacophore pairs, triplets or quartets generated</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="MustHaveAttachmentPoint" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>Whether or not to impose the restriction that any pharmacophore must include an attachment point feature as at least one of the features.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Hydrophobic Factor" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Factor to use in the perception of hydrophobic features. A group of atoms is classified as a hydrophobic feature if their surface area is equal or greater than the area of a methyl group multiplied by this factor. The default is 1.50. </sci:help>
								<sci:enabledscript>contains(parameter(&quot;MolecularFeatures&quot;), &quot;Hydrophobe&quot;)</sci:enabledscript>
								<sci:value>1.50</sci:value>
							</sci:arg>
							<sci:arg name="Allow NonHydrophobic Atoms in Hydrophobic Rings" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>When set to True, the perception of hydrophobic rings allows the presence of atoms with low hydrophobic factors, as long as the total hydrophobicity of the ring is high enough. Otherwise, the presence of even one heteroatom or other atom with low hydrophobicity disqualifies the ring as hydrophobic.</sci:help>
								<sci:enabledscript>contains(parameter(&quot;MolecularFeatures&quot;), &quot;Hydrophobe&quot;)</sci:enabledscript>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Calculates a number of different molecular fingerprints, including extended-connectivity fingerprints, daylight-style path fingerprints, and MDL public key fingerprints.</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/chemistry</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Aug 19 13:06:35 2014</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>&apos;Type&apos; gives the type of fingerprint we wish to calculate:
    ExtendedConnectivity generates extended-connectivity fingerprints
    Path generates Daylight-style path-based fingerprints
    MDLPublicKeys generates the MDL Public key fingerprints
    UserKeys generates fingerprints derived from user-defined substructures
&apos;AtomAbstraction&apos; is used by ExtendedConnectivity and Path fingerprints, and defines the abstraction used to generate the initial atom-based codes.
&apos;MaximumDistance&apos; is used by ExtendedConnectivity and Path fingerprints, and gives either the diameter of the neighborhoods considered (if ExtendedConnectivity type) or of the paths (if Path type).

Input            - Molecule data records
Output Pass - Molecule data records augmented with fingerprint information</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Molecular Pharmacophore Fingerprints</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Molecular Fingerprints</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>CALCULATORNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{CD9BD04A-BB3D-405B-9F96-4BD83AB7814D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Calculates molecular pharmacophore fingerprints for the input molecules</sci:value>
								<sci:value>Calculate pharmacophore fingerprints using topological (bond) distances. Pharmacophores consist of pairs, triplets or quartets of molecular features and the corresponding bond distances among them.
&lt;p&gt;
Molecular features include:
&lt;ul&gt;
&lt;li&gt;HBond Acceptor
&lt;li&gt;HBond Donor
&lt;li&gt;Positive Charge
&lt;li&gt;Negative Charge
&lt;li&gt;Positive Ionizable
&lt;li&gt;Negative Ionizable
&lt;li&gt;Aromatic Ring
&lt;li&gt;Hydrophobic
&lt;li&gt;AttachmentPoint
&lt;/ul&gt;
&lt;p&gt;
The output type can be either fingerprints (each individual pharmacophore is counted only once) or counts (each individual pharmacophore is counted as many times as it appears in the molecule.
&lt;p&gt;
Pharmacophore keys can contain only information about the number of bonds in the path between two molecular features, or can include also the number of rotatable bonds in the path or the types of bonds in the path (single, double, triple, ring, aromatic)
&lt;p&gt;
The name of the calculated pharmacophore keys encodes the type of fingerprint:
&lt;ul&gt;
&lt;li&gt;PHFP_2, PHFP_3, PHFP_4: pairs, triplets or quartets including only number of bonds in the shortest path between features
&lt;li&gt;PHRFP_2, PHRFP_3, PHRFP_4: pairs, triplets or quartets including number of bonds and number of rotatable bonds in the path
&lt;li&gt;PHPFP_2, PHPFP_3, PHPFP_4: pairs, triplets or quartets including  number of bonds and types of bonds in the path
&lt;/ul&gt;
The counts have similar names, but with &apos;FP&apos; replaced by &apos;FC&apos;. For example, PHFC_3 represents counts of triplets with information only about the number of bonds in the path.





</sci:value>
								<sci:value>Molecule</sci:value>
								<sci:value/>
								<sci:value>Molecule</sci:value>
								<sci:value>Records augmented with the molecular pharmacophore fingerprint property</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>9.5.0.547</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>18</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Chemistry\Property Calculators\Structural\Molecular Pharmacophore Fingerprints</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.CalculateFP25D.1">
						<sci:component name="Molecular Pharmacophore Fingerprints" version="2">
							<sci:arg name="Size" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Number of features: pairs, triplets or quartets</sci:help>
								<sci:legalval selected="true">Pairs</sci:legalval>
								<sci:legalval>Triplets</sci:legalval>
								<sci:legalval>Quartets</sci:legalval>
							</sci:arg>
							<sci:arg name="MolecularFeatures" type="StringType" required="true" visibility="visible" multi="true">
								<sci:help>Molecular features to perceive and include in the pharmacophore keys</sci:help>
								<sci:legalval selected="true">HBondAcceptor</sci:legalval>
								<sci:legalval selected="true">HBondDonor</sci:legalval>
								<sci:legalval selected="true">PositiveCharge</sci:legalval>
								<sci:legalval selected="true">NegativeCharge</sci:legalval>
								<sci:legalval selected="true">PositiveIonizable</sci:legalval>
								<sci:legalval selected="true">NegativeIonizable</sci:legalval>
								<sci:legalval selected="true">Hydrophobe</sci:legalval>
								<sci:legalval selected="true">AromaticRing</sci:legalval>
								<sci:legalval selected="true">AttachmentPoint</sci:legalval>
							</sci:arg>
							<sci:arg name="ShortestPathInfo" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Level of detail about the shortest path between two features</sci:help>
								<sci:legalval>NumBondsOnly</sci:legalval>
								<sci:legalval>NumBondsAndNumRotBonds</sci:legalval>
								<sci:legalval selected="true">NumBondsAndBondTypes</sci:legalval>
							</sci:arg>
							<sci:arg name="MinimumDistance" type="LongType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Minimum number of bonds between two molecular features to be included in a pharmacophore key</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="MaximumDistance" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>Maximum number of bonds between two molecular features to be included in a pharmacophore key</sci:help>
								<sci:value>15</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:member>OutputType</sci:member>
								<sci:member>MaxNumberPharmacophores</sci:member>
								<sci:member>OutputFeatureInfo</sci:member>
								<sci:member>MustHaveAttachmentPoint</sci:member>
								<sci:member>Hydrophobic Factor</sci:member>
								<sci:member>Allow NonHydrophobic Atoms in Hydrophobic Rings</sci:member>
							</sci:arg>
							<sci:arg name="OutputType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Controls the way the fingerprint is presented:

 - Fingerprint: A list of the features present in the molecule, with duplicates removed.

 - Counts: A list of the features present in the molecule, with duplicates retained; if a feature occurs more than once in a molecule, that bit value is included more than once in the output list.

</sci:help>
								<sci:legalval>Fingerprints</sci:legalval>
								<sci:legalval selected="true">Counts</sci:legalval>
							</sci:arg>
							<sci:arg name="MaxNumberPharmacophores" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>Maximum number of keys to be generated for an individual molecule</sci:help>
								<sci:value>5000</sci:value>
							</sci:arg>
							<sci:arg name="OutputFeatureInfo" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>Output detailed information about the molecular features perceived in the molecule and the pharmacophore pairs, triplets or quartets generated</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="MustHaveAttachmentPoint" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>Whether or not to impose the restriction that any pharmacophore must include an attachment point feature as at least one of the features.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Hydrophobic Factor" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Factor to use in the perception of hydrophobic features. A group of atoms is classified as a hydrophobic feature if their surface area is equal or greater than the area of a methyl group multiplied by this factor. The default is 1.50. </sci:help>
								<sci:enabledscript>contains(parameter(&quot;MolecularFeatures&quot;), &quot;Hydrophobe&quot;)</sci:enabledscript>
								<sci:value>1.50</sci:value>
							</sci:arg>
							<sci:arg name="Allow NonHydrophobic Atoms in Hydrophobic Rings" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>When set to True, the perception of hydrophobic rings allows the presence of atoms with low hydrophobic factors, as long as the total hydrophobicity of the ring is high enough. Otherwise, the presence of even one heteroatom or other atom with low hydrophobicity disqualifies the ring as hydrophobic.</sci:help>
								<sci:enabledscript>contains(parameter(&quot;MolecularFeatures&quot;), &quot;Hydrophobe&quot;)</sci:enabledscript>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Comment</sci:help>
								<sci:value>Calculates a number of different molecular fingerprints, including extended-connectivity fingerprints, daylight-style path fingerprints, and MDL public key fingerprints.</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/chemistry</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Aug 19 13:06:35 2014</sci:value>
							</sci:arg>
							<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Usage</sci:help>
								<sci:value>&apos;Type&apos; gives the type of fingerprint we wish to calculate:
    ExtendedConnectivity generates extended-connectivity fingerprints
    Path generates Daylight-style path-based fingerprints
    MDLPublicKeys generates the MDL Public key fingerprints
    UserKeys generates fingerprints derived from user-defined substructures
&apos;AtomAbstraction&apos; is used by ExtendedConnectivity and Path fingerprints, and defines the abstraction used to generate the initial atom-based codes.
&apos;MaximumDistance&apos; is used by ExtendedConnectivity and Path fingerprints, and gives either the diameter of the neighborhoods considered (if ExtendedConnectivity type) or of the paths (if Path type).

Input            - Molecule data records
Output Pass - Molecule data records augmented with fingerprint information</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Molecular Pharmacophore Fingerprints</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Molecular Fingerprints</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>CALCULATORNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{CD9BD04A-BB3D-405B-9F96-4BD83AB7814D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>666 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Calculates molecular pharmacophore fingerprints for the input molecules</sci:value>
								<sci:value>Calculate pharmacophore fingerprints using topological (bond) distances. Pharmacophores consist of pairs, triplets or quartets of molecular features and the corresponding bond distances among them.
&lt;p&gt;
Molecular features include:
&lt;ul&gt;
&lt;li&gt;HBond Acceptor
&lt;li&gt;HBond Donor
&lt;li&gt;Positive Charge
&lt;li&gt;Negative Charge
&lt;li&gt;Positive Ionizable
&lt;li&gt;Negative Ionizable
&lt;li&gt;Aromatic Ring
&lt;li&gt;Hydrophobic
&lt;li&gt;AttachmentPoint
&lt;/ul&gt;
&lt;p&gt;
The output type can be either fingerprints (each individual pharmacophore is counted only once) or counts (each individual pharmacophore is counted as many times as it appears in the molecule.
&lt;p&gt;
Pharmacophore keys can contain only information about the number of bonds in the path between two molecular features, or can include also the number of rotatable bonds in the path or the types of bonds in the path (single, double, triple, ring, aromatic)
&lt;p&gt;
The name of the calculated pharmacophore keys encodes the type of fingerprint:
&lt;ul&gt;
&lt;li&gt;PHFP_2, PHFP_3, PHFP_4: pairs, triplets or quartets including only number of bonds in the shortest path between features
&lt;li&gt;PHRFP_2, PHRFP_3, PHRFP_4: pairs, triplets or quartets including number of bonds and number of rotatable bonds in the path
&lt;li&gt;PHPFP_2, PHPFP_3, PHPFP_4: pairs, triplets or quartets including  number of bonds and types of bonds in the path
&lt;/ul&gt;
The counts have similar names, but with &apos;FP&apos; replaced by &apos;FC&apos;. For example, PHFC_3 represents counts of triplets with information only about the number of bonds in the path.





</sci:value>
								<sci:value>Molecule</sci:value>
								<sci:value/>
								<sci:value>Molecule</sci:value>
								<sci:value>Records augmented with the molecular pharmacophore fingerprint property</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>9.5.0.547</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>19</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Chemistry\Property Calculators\Structural\Molecular Pharmacophore Fingerprints</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.CalculateMDLKeysNative.1">
						<sci:component name="MDL Key Fingerprints" version="2">
							<sci:arg name="Output" type="StringType" required="true" visibility="visible" multi="true">
								<sci:help>Type of output to generate:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;MDL2DKeys960:&lt;/b&gt; Fingerprint bitset of 960 molecule substructure/similarity search keys&lt;/li&gt;
&lt;li&gt;&lt;b&gt;MDL2DKeys166:&lt;/b&gt; Fingerprint bitset of 166 publicly defined molecule keys, a subset of MDL2DKeys960&lt;/li&gt;
&lt;li&gt;&lt;b&gt;MDLRxnCenterKeys:&lt;/b&gt; Fingerprint bitset of 654 reaction substructure/similarity search keys encoding only the reacting center (transform) features&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval type="LongFingerprintType" selected="true">MDL2DKeys960</sci:legalval>
								<sci:legalval type="LongFingerprintType" selected="true">MDL2DKeys166</sci:legalval>
								<sci:legalval type="LongFingerprintType">MDLRxnCenterKeys</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{6CC6EEFE-0CC7-40F9-919D-E6135D529532}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>MDL Key Fingerprints</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>CALCULATORNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>954 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Computes MDL keys from an input molecule or reaction</sci:value>
								<sci:value>Calculates molecule or reaction fingerprints used by the BIOVIA Direct Data Cartridge:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;MDL2DKeys960:&lt;/b&gt; Fingerprint bitset of 960 molecule substructure/similarity search keys&lt;/li&gt;
&lt;li&gt;&lt;b&gt;MDL2DKeys166:&lt;/b&gt; Fingerprint bitset of 166 publicly defined molecule keys, a subset of MDL2DKeys960&lt;/li&gt;
&lt;li&gt;&lt;b&gt;MDLRxnCenterKeys:&lt;/b&gt; Fingerprint bitset of 654 reaction substructure/similarity search keys encoding only the reacting center (transform) features&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;MDL2DKeys166&lt;/b&gt; is a replacement for the deprecated &lt;b&gt;MDLPublicKeys&lt;/b&gt; fingerprint which was previously available in the &lt;a href=&quot;javascript:DoLink(&apos;{C5873CBC-62ED-4F93-A565-13027A5B3512}&apos;)&quot;&gt;Molecular Fingerprints&lt;/a&gt; component and now available only as a calculable property. &lt;b&gt;MDL2DKeys166&lt;/b&gt; generates the actual MDL public keys, &lt;b&gt;MDLPublicKeys&lt;/b&gt; uses a native-Pipeline Pilot implementation to generate an approximation of these keys.&lt;/li&gt;
&lt;li&gt;For more information on MDL keys see: Durant J. L.; Leland B. A.; Henry D. R.; Nourse J. G. Reoptimization of MDL Keys for Use in Drug Discovery.&lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;2002&lt;/b&gt;, &lt;i&gt;42&lt;/i&gt;, 1273-1280.&lt;/li&gt;
&lt;li&gt;More details on MDL key technology is available at here: &lt;a href=&quot;javascript:DoLink(&apos;http://accelrys.com/products/pdf/keys-to-keyset-technology.pdf&apos;)&quot;&gt;MDL Keys whitepaper&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic,Molecule</sci:value>
								<sci:value>Input molecule or reaction</sci:value>
								<sci:value>Generic,Molecule</sci:value>
								<sci:value>Data records augmented with a property containing the requested fingerprints</sci:value>
								<sci:value>Generic,Molecule</sci:value>
								<sci:value>Data records that could not have the fingerprints computed</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.2.0.0</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>6</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/chemistry</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jul 11 11:26:46 2016</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Chemistry\Property Calculators\Structural\MDL Key Fingerprints</sci:value>
							</sci:arg>
						</sci:component>
						<sci:proplist>
							<sci:propval name="MDL2DKeys960|Category">Fingerprints</sci:propval>
							<sci:propval name="MDL2DKeys166|Category">Fingerprints</sci:propval>
							<sci:propval name="MDLRxnCenterKeys|Category">Fingerprints</sci:propval>
						</sci:proplist>
					</sci:data>
					<sci:data object="SciTegic.PropertyCalculator.1">
						<sci:component name="Calculate Properties" version="2">
							<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>The properties to learn from: 
  &apos;AllPropertiesOnFirstData&apos; uses all those that are found
on the first data object;
  &apos;CalculablePropertiesOnFirstData&apos; uses all those that are
found on the first data that can be calculated;
  &apos;UserSet&apos; takes the list of properties from the parameter
UserSet.  Property ranges can be given by giving the first
and last property in the range separated by a hyphen; 
properties can be referred to by index using the word &quot;Column&quot;
followed by the index, i.e., Column3-Column10.
  &apos;PointInfoText&apos; takes a copy of a previously-generated 
Calculate Properties state in either the globals or the parameter
PointInfoText. The restores the calculator to behave as it did
when the text was originally generated.  This is useful for connecting
Learn components with Model components.
</sci:help>
								<sci:member>IgnoreProperties</sci:member>
								<sci:member>UserSet</sci:member>
								<sci:member>PredefinedSet</sci:member>
								<sci:legalval>AllPropertiesOnFirstData</sci:legalval>
								<sci:legalval>CalculablePropertiesOnFirstData</sci:legalval>
								<sci:legalval selected="true">PredefinedSet</sci:legalval>
								<sci:legalval>UserSet</sci:legalval>
								<sci:legalval>PointInfoText</sci:legalval>
							</sci:arg>
							<sci:arg name="PredefinedSet" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>A predefined set of properties to use for learning</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to PredefinedSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;PredefinedSet&apos;</sci:enabledscript>
								<sci:legalval selected="true">MDL2DKeys960</sci:legalval>
								<sci:legalval selected="true">MDL2DKeys166</sci:legalval>
								<sci:legalval>MDLRxnCenterKeys</sci:legalval>
								<sci:legalval>PHFP_2</sci:legalval>
								<sci:legalval>PHFP_3</sci:legalval>
								<sci:legalval>PHFP_4</sci:legalval>
								<sci:legalval selected="true">PHRFP_2</sci:legalval>
								<sci:legalval>PHRFP_3</sci:legalval>
								<sci:legalval>PHRFP_4</sci:legalval>
								<sci:legalval>PHPFP_2</sci:legalval>
								<sci:legalval>PHPFP_3</sci:legalval>
								<sci:legalval>PHPFP_4</sci:legalval>
								<sci:legalval>PHFC_2</sci:legalval>
								<sci:legalval>PHFC_3</sci:legalval>
								<sci:legalval>PHFC_4</sci:legalval>
								<sci:legalval selected="true">PHPFC_2</sci:legalval>
								<sci:legalval>PHPFC_3</sci:legalval>
								<sci:legalval>PHPFC_4</sci:legalval>
								<sci:legalval>PHRFC_2</sci:legalval>
								<sci:legalval>PHRFC_3</sci:legalval>
								<sci:legalval>PHRFC_4</sci:legalval>
								<sci:legalval>FCFC_6</sci:legalval>
								<sci:legalval>ECFC_6</sci:legalval>
								<sci:legalval>LCFC_6</sci:legalval>
								<sci:legalval selected="true">SCFC_6</sci:legalval>
								<sci:legalval>FPFC_6</sci:legalval>
								<sci:legalval>EPFC_6</sci:legalval>
								<sci:legalval>LPFC_6</sci:legalval>
								<sci:legalval>SPFC_6</sci:legalval>
								<sci:legalval>FEFC_6</sci:legalval>
								<sci:legalval>EEFC_6</sci:legalval>
								<sci:legalval>LEFC_6</sci:legalval>
								<sci:legalval>SEFC_6</sci:legalval>
								<sci:legalval>FHFC_6</sci:legalval>
								<sci:legalval>EHFC_6</sci:legalval>
								<sci:legalval>LHFC_6</sci:legalval>
								<sci:legalval>SHFC_6</sci:legalval>
								<sci:legalval>FCFP_6</sci:legalval>
								<sci:legalval>ECFP_6</sci:legalval>
								<sci:legalval>LCFP_6</sci:legalval>
								<sci:legalval>SCFP_6</sci:legalval>
								<sci:legalval>FPFP_6</sci:legalval>
								<sci:legalval>EPFP_6</sci:legalval>
								<sci:legalval>LPFP_6</sci:legalval>
								<sci:legalval>SPFP_6</sci:legalval>
								<sci:legalval>FEFP_6</sci:legalval>
								<sci:legalval>EEFP_6</sci:legalval>
								<sci:legalval>LEFP_6</sci:legalval>
								<sci:legalval>SEFP_6</sci:legalval>
								<sci:legalval>FHFP_6</sci:legalval>
								<sci:legalval>EHFP_6</sci:legalval>
								<sci:legalval>LHFP_6</sci:legalval>
								<sci:legalval>SHFP_6</sci:legalval>
							</sci:arg>
							<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A comma-separated list of properties to use for calculation. 
&lt;p&gt;If an item on the list contains a hyphen (e.g., &quot;X1-X5&quot;), and the properties on either side of the hyphen (e.g., &quot;X1&quot;, &quot;X5&quot;) are defined on the first data record, then all properties in that range are included. Note that the properties within the specified range are determined by the order of properties in the property list. Thus, if properties in the property list are in the following order: X1, X2, X5, X3, X4, X6, then the range &quot;X1-X5&quot; will only include properties X1, X2, and X5.&lt;/p&gt;
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;UserSet&apos;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A comma-separated list of properties to ignore.  This is used, for example, if UseProperties is AllPropertiesOnFirstData, but there is a small set of undesirable properties you don&apos;t wish to use but can&apos;t remove (i.e., record names)</sci:help>
							</sci:arg>
							<sci:arg name="Convert Fingerprints To" type="LinkParentParameterType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:metaproplist>
									<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">StringType</sci:propval>
								</sci:metaproplist>
								<sci:help>This option controls the automatic conversion of fingerprint properties into different format</sci:help>
								<sci:member>Fixed Length</sci:member>
								<sci:value>Convert Fingerprints To</sci:value>
							</sci:arg>
							<sci:arg name="PutPropertyListInGlobal" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If given, the array of properties that are being calculated is placed into this global property when the first data is passed into the component.</sci:help>
								<sci:value>CalculatedProperties</sci:value>
							</sci:arg>
							<sci:arg name="PutCalculatedPropertiesInProperty" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If given, the array of properties that are newly calculated for a particlar sample are placed into this property on each data</sci:help>
								<sci:value>NewProperties</sci:value>
							</sci:arg>
							<sci:arg name="IllegalCharacters" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If given, this is a regular expression that is applied to property names to discover illegal characters.  In this case, the illegal characters are replaced with underscores, and the original property names and the new property names added to the global values PropertyCalculatorOriginalNames and PropertyCalculatorNewNames, respectively.  This gives you the mapping from the original name to the internal R names.</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Fixed Length" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false">
								<sci:help>If Convert Fingerprints To is given a fixed-length type, then this is the fixed-length.  Bits larger than this length are folded into this range using a mod operation.</sci:help>
								<sci:value>Fixed Length</sci:value>
							</sci:arg>
							<sci:arg name="RemoveCalculatedPropertiesInProperty" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Remove the properties listed in the particular property name</sci:help>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon May 26 06:56:16 2014</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Calculate Properties</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>CalculatorNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{22FFFABF-758F-406F-976F-46E680B2CBFF}</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon</sci:help>
								<sci:value>Calculate Properties</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>9.2.0.9</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1242 -95</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>This component is used to provide a general interface that can be promoted in Learners, and also used in Models.</sci:value>
								<sci:value>This component is used in subprotocols to provide a standard interface for Learners that can later be used to provide automatic calculation later in your learned models.

Typically, some of the parameters of this interface are promoted in the Learner.  Others are kept hidden, either because they are not needed, or because they are defaulted to appropriate values.

One it has initialized by the first data record, it sets the global property PointInfoText with a string that contains all the information you later need to re-initialize another Calculate Properties component in a saved model to the same state as it was in in the Learner.  To use this, you save the global PointInfoText on a parameter of the same name on the model component, then set the UseProperties parameter to the value PointInfoText.</sci:value>
								<sci:value>Generic Data</sci:value>
								<sci:value/>
								<sci:value>Generic Data</sci:value>
								<sci:value/>
								<sci:value>Generic Data</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>7</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Calculate Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Rename Properties" version="2">
							<sci:arg name="Original Property Names" type="PropertyNameType" required="true" visibility="visible" multi="true">
								<sci:help>An array of property names to rename. The new name will be the corresponding name in &lt;i&gt;New Property Names&lt;i&gt;.</sci:help>
								<sci:value>PHFP_2</sci:value>
								<sci:value>PHFP_3</sci:value>
								<sci:value>PHFP_4</sci:value>
								<sci:value>PHRFP_2</sci:value>
								<sci:value>PHRFP_3</sci:value>
								<sci:value>PHRFP_4</sci:value>
								<sci:value>PHPFP_2</sci:value>
								<sci:value>PHPFP_3</sci:value>
								<sci:value>PHPFP_4</sci:value>
								<sci:value>PHFC_2</sci:value>
								<sci:value>PHFC_3</sci:value>
								<sci:value>PHFC_4</sci:value>
								<sci:value>PHPFC_2</sci:value>
								<sci:value>PHPFC_3</sci:value>
								<sci:value>PHPFC_4</sci:value>
								<sci:value>PHRFC_2</sci:value>
								<sci:value>PHRFC_3</sci:value>
								<sci:value>PHRFC_4</sci:value>
								<sci:value>FCFC_6</sci:value>
								<sci:value>ECFC_6</sci:value>
								<sci:value>LCFC_6</sci:value>
								<sci:value>SCFC_6</sci:value>
								<sci:value>FPFC_6</sci:value>
								<sci:value>EPFC_6</sci:value>
								<sci:value>LPFC_6</sci:value>
								<sci:value>SPFC_6</sci:value>
								<sci:value>FEFC_6</sci:value>
								<sci:value>EEFC_6</sci:value>
								<sci:value>LEFC_6</sci:value>
								<sci:value>SEFC_6</sci:value>
								<sci:value>FHFC_6</sci:value>
								<sci:value>EHFC_6</sci:value>
								<sci:value>LHFC_6</sci:value>
								<sci:value>SHFC_6</sci:value>
								<sci:value>FCFP_6</sci:value>
								<sci:value>ECFP_6</sci:value>
								<sci:value>LCFP_6</sci:value>
								<sci:value>SCFP_6</sci:value>
								<sci:value>FPFP_6</sci:value>
								<sci:value>EPFP_6</sci:value>
								<sci:value>LPFP_6</sci:value>
								<sci:value>SPFP_6</sci:value>
								<sci:value>FEFP_6</sci:value>
								<sci:value>EEFP_6</sci:value>
								<sci:value>LEFP_6</sci:value>
								<sci:value>SEFP_6</sci:value>
								<sci:value>FHFP_6</sci:value>
								<sci:value>EHFP_6</sci:value>
								<sci:value>LHFP_6</sci:value>
								<sci:value>SHFP_6</sci:value>
							</sci:arg>
							<sci:arg name="New Property Names" type="PropertyNameType" required="true" visibility="visible" multi="true">
								<sci:help>An array of the new property names. The original name will be the corresponding name in &lt;i&gt;Original Property Names&lt;i&gt;.</sci:help>
								<sci:value>PHFP2</sci:value>
								<sci:value>PHFP3</sci:value>
								<sci:value>PHFP4</sci:value>
								<sci:value>PHRFP2</sci:value>
								<sci:value>PHRFP3</sci:value>
								<sci:value>PHRFP4</sci:value>
								<sci:value>PHPFP2</sci:value>
								<sci:value>PHPFP3</sci:value>
								<sci:value>PHPFP4</sci:value>
								<sci:value>PHFC2</sci:value>
								<sci:value>PHFC3</sci:value>
								<sci:value>PHFC4</sci:value>
								<sci:value>PHPFC2</sci:value>
								<sci:value>PHPFC3</sci:value>
								<sci:value>PHPFC4</sci:value>
								<sci:value>PHRFC2</sci:value>
								<sci:value>PHRFC3</sci:value>
								<sci:value>PHRFC4</sci:value>
								<sci:value>FCFC6</sci:value>
								<sci:value>ECFC6</sci:value>
								<sci:value>LCFC6</sci:value>
								<sci:value>SCFC6</sci:value>
								<sci:value>FPFC6</sci:value>
								<sci:value>EPFC6</sci:value>
								<sci:value>LPFC6</sci:value>
								<sci:value>SPFC6</sci:value>
								<sci:value>FEFC6</sci:value>
								<sci:value>EEFC6</sci:value>
								<sci:value>LEFC6</sci:value>
								<sci:value>SEFC6</sci:value>
								<sci:value>FHFC6</sci:value>
								<sci:value>EHFC6</sci:value>
								<sci:value>LHFC6</sci:value>
								<sci:value>SHFC6</sci:value>
								<sci:value>FCFP6</sci:value>
								<sci:value>ECFP6</sci:value>
								<sci:value>LCFP6</sci:value>
								<sci:value>SCFP6</sci:value>
								<sci:value>FPFP6</sci:value>
								<sci:value>EPFP6</sci:value>
								<sci:value>LPFP6</sci:value>
								<sci:value>SPFP6</sci:value>
								<sci:value>FEFP6</sci:value>
								<sci:value>EEFP6</sci:value>
								<sci:value>LEFP6</sci:value>
								<sci:value>SEFP6</sci:value>
								<sci:value>FHFP6</sci:value>
								<sci:value>EHFP6</sci:value>
								<sci:value>LHFP6</sci:value>
								<sci:value>SHFP6</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>RenameProperties</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Feb 28 12:30:36 2017</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#orig := Parameter(&apos;Original Property Names&apos;);
#new := Parameter(&apos;New Property Names&apos;);
if (numvalues(#orig) == 0 OR #orig[1] eq &quot;&quot; OR numvalues(#new) == 0 OR #new[1] eq &quot;&quot;) then
	&quot;&quot;;
else
  #display := &apos;Rename &apos; . #orig[1] . &apos; to &apos; . #new[1];
  if (numvalues(#orig) &gt; 1) then
    #display .= &apos;, ...&apos;;
  end if;
  #display;
end if;
</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1530 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{04496ABE-C1D2-43D2-83D4-35AC9FC8D501}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Rename the specified properties</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, rename the properties found in the &lt;i&gt;Original Property Names&lt;/i&gt; list to the names provided in &lt;i&gt;New Property Names&lt;/i&gt;.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To remove specified properties from each data record, use 
&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>With only the specified properties remaining</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.0.1376</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>15</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Rename Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:connectid from="17" to="18" type="true"/>
					<sci:connectid from="18" to="19" type="true"/>
					<sci:connectid from="19" to="6" type="true"/>
					<sci:connectid from="6" to="7" type="true"/>
					<sci:connectid from="7" to="15" type="true"/>
					<sci:version iVal="1"/>
				</sci:protocol>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="R Learn" version="2">
					<sci:arg name="LearnedPropertyName" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Name of the model component that will be created in the LearnedProperties/R Models folder on your user tab.  This is also the base name of the properties that can be calculated by that component.</sci:help>
						<sci:member>Destination Folder</sci:member>
						<sci:value>ChEMBL25 NET Temporal Split Ion 2009</sci:value>
					</sci:arg>
					<sci:arg name="Destination Folder" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Destination Folder</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Name of component database folder in which the learned model is to be saved.</sci:help>
						<sci:value>$(Username)/LearnedProperties/R Models/Final Model</sci:value>
					</sci:arg>
					<sci:arg name="Name" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>Name of the dependent (Y) property to be learned</sci:help>
						<sci:value>pchembl_value</sci:value>
					</sci:arg>
					<sci:arg name="TypeOfPropertyToLearn" type="StringType" required="true" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Type of property to learn, either continuous or categorical.</sci:help>
						<sci:legalval selected="true">Continuous</sci:legalval>
						<sci:legalval>Categorical</sci:legalval>
					</sci:arg>
					<sci:arg name="Models" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:member>Stack Methods</sci:member>
						<sci:member>ModelBuild</sci:member>
					</sci:arg>
					<sci:arg name="Stack Methods" type="GroupType" required="false" visibility="visible" multi="true" legalvalsenforced="false">
						<sci:member>Stack Methods Stack 1</sci:member>
						<sci:member>Stack Methods Stack 2</sci:member>
					</sci:arg>
					<sci:arg name="ModelBuild" type="GroupType" required="false" visibility="visible" multi="true" legalvalsenforced="false" uimpl="false">
						<sci:member>ModelBuild Stack 1</sci:member>
						<sci:member>ModelBuild Stack 2</sci:member>
					</sci:arg>
					<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The properties to learn from.  Options are:
&lt;ul&gt;
&lt;li&gt;AllPropertiesOnFirstData: Uses all properties that are found on the first data record.
&lt;li&gt;CalculablePropertiesOnFirstData: Uses all calculable properties found on the first data record.
&lt;li&gt;PredefinedSet: Uses the properties specified by &lt;i&gt;PredefinedSet&lt;/i&gt;.
&lt;li&gt;UserSet: Uses the properties specified by &lt;i&gt;UserSet&lt;/i&gt;.  Property ranges can be given by providing the first and last property in the range separated by a hyphen. Properties can be referred to by index using the word &quot;Column&quot; followed by the index, such as &quot;Column3-Column10&quot;.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For any array property used in model building, each array member is treated as a separate variable.
&lt;/ul&gt;</sci:help>
						<sci:member>PredefinedSet</sci:member>
						<sci:member>UserSet</sci:member>
						<sci:member>IgnoreProperties</sci:member>
						<sci:legalval>AllPropertiesOnFirstData</sci:legalval>
						<sci:legalval>CalculablePropertiesOnFirstData</sci:legalval>
						<sci:legalval selected="true">PredefinedSet</sci:legalval>
						<sci:legalval>UserSet</sci:legalval>
					</sci:arg>
					<sci:arg name="PredefinedSet" type="StringType" required="false" visibility="visible" multi="true" expanded="true">
						<sci:help>A list of molecular properties to use in building the model when &lt;i&gt;UseProperties&lt;/i&gt; is set to PredefinedSet</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to PredefinedSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;PredefinedSet&apos;</sci:enabledscript>
						<sci:legalval>FCFP_6</sci:legalval>
						<sci:legalval>ALogP</sci:legalval>
						<sci:legalval>Molecular_Weight</sci:legalval>
						<sci:legalval>Num_H_Donors</sci:legalval>
						<sci:legalval>Num_H_Acceptors</sci:legalval>
						<sci:legalval selected="true">Num_RotatableBonds</sci:legalval>
						<sci:legalval selected="true">Num_BridgeBonds</sci:legalval>
						<sci:legalval selected="true">Num_Atoms</sci:legalval>
						<sci:legalval selected="true">Num_Rings</sci:legalval>
						<sci:legalval>Num_AromaticRings</sci:legalval>
						<sci:legalval>Num_Fragments</sci:legalval>
						<sci:legalval>NPlusO_Count</sci:legalval>
						<sci:legalval selected="true">Molecular_Solubility</sci:legalval>
						<sci:legalval selected="true">Molecular_SurfaceArea</sci:legalval>
						<sci:legalval>Molecular_PolarSurfaceArea</sci:legalval>
						<sci:legalval>Molecular_PolarSASA</sci:legalval>
						<sci:legalval>Estate_Keys</sci:legalval>
						<sci:legalval>Estate_Counts</sci:legalval>
						<sci:legalval selected="true">MDLPublicKeys</sci:legalval>
						<sci:legalval selected="true">MDL2DKeys960</sci:legalval>
						<sci:legalval>MDL2DKeys166</sci:legalval>
						<sci:legalval>PHFP2</sci:legalval>
						<sci:legalval>PHFP3</sci:legalval>
						<sci:legalval>PHFP4</sci:legalval>
						<sci:legalval selected="true">PHRFP2</sci:legalval>
						<sci:legalval>PHRFP3</sci:legalval>
						<sci:legalval>PHRFP4</sci:legalval>
						<sci:legalval>PHPFP2</sci:legalval>
						<sci:legalval>PHPFP3</sci:legalval>
						<sci:legalval>PHPFP4</sci:legalval>
						<sci:legalval>PHFC2</sci:legalval>
						<sci:legalval>PHFC3</sci:legalval>
						<sci:legalval>PHFC4</sci:legalval>
						<sci:legalval selected="true">PHPFC2</sci:legalval>
						<sci:legalval>PHPFC3</sci:legalval>
						<sci:legalval>PHPFC4</sci:legalval>
						<sci:legalval>PHRFC2</sci:legalval>
						<sci:legalval>PHRFC3</sci:legalval>
						<sci:legalval>PHRFC4</sci:legalval>
						<sci:legalval>FCFC6</sci:legalval>
						<sci:legalval>ECFC6</sci:legalval>
						<sci:legalval>LCFC6</sci:legalval>
						<sci:legalval selected="true">SCFC6</sci:legalval>
						<sci:legalval>FPFC6</sci:legalval>
						<sci:legalval>EPFC6</sci:legalval>
						<sci:legalval>LPFC6</sci:legalval>
						<sci:legalval>SPFC6</sci:legalval>
						<sci:legalval>FEFC6</sci:legalval>
						<sci:legalval>EEFC6</sci:legalval>
						<sci:legalval>LEFC6</sci:legalval>
						<sci:legalval>SEFC6</sci:legalval>
						<sci:legalval>FHFC6</sci:legalval>
						<sci:legalval>EHFC6</sci:legalval>
						<sci:legalval>LHFC6</sci:legalval>
						<sci:legalval>SHFC6</sci:legalval>
						<sci:legalval>FCFP6</sci:legalval>
						<sci:legalval>ECFP6</sci:legalval>
						<sci:legalval>LCFP6</sci:legalval>
						<sci:legalval>SCFP6</sci:legalval>
						<sci:legalval>FPFP6</sci:legalval>
						<sci:legalval>EPFP6</sci:legalval>
						<sci:legalval>LPFP6</sci:legalval>
						<sci:legalval>SPFP6</sci:legalval>
						<sci:legalval>FEFP6</sci:legalval>
						<sci:legalval>EEFP6</sci:legalval>
						<sci:legalval>LEFP6</sci:legalval>
						<sci:legalval>SEFP6</sci:legalval>
						<sci:legalval>FHFP6</sci:legalval>
						<sci:legalval>EHFP6</sci:legalval>
						<sci:legalval>LHFP6</sci:legalval>
						<sci:legalval>SHFP6</sci:legalval>
						<sci:legalval/>
						<sci:legalval>G1AminoAcidComposition</sci:legalval>
						<sci:legalval>G2DipeptideComposition</sci:legalval>
						<sci:legalval>G3AutoCorrelationDescriptors</sci:legalval>
						<sci:legalval selected="true">G4CompositionTransitionDistribution</sci:legalval>
						<sci:legalval>G5QuasiSequenceOrderDescriptors</sci:legalval>
						<sci:legalval>G6PseudoAminoAcidComposition</sci:legalval>
						<sci:legalval>G7AmphiphilicPseudoAminoAcidComposition</sci:legalval>
						<sci:legalval selected="true">G9TotalAminoAcidProperties</sci:legalval>
						<sci:legalval>Aligned_Zscales_Hellberg</sci:legalval>
						<sci:legalval>Aligned_Zscales_Jonsson</sci:legalval>
						<sci:legalval>Aligned_Zscales_Sandberg</sci:legalval>
						<sci:legalval>Aligned_Zscales_binary</sci:legalval>
						<sci:legalval>Aligned_Tscales</sci:legalval>
						<sci:legalval>Aligned_STscales</sci:legalval>
						<sci:legalval>Aligned_VHSE</sci:legalval>
						<sci:legalval>Aligned_ISA_ECI</sci:legalval>
						<sci:legalval>Aligned_GRID_tscore</sci:legalval>
						<sci:legalval>Aligned_VSTV</sci:legalval>
						<sci:legalval>Aligned_MSWHIM</sci:legalval>
						<sci:legalval>Aligned_FASGAI</sci:legalval>
						<sci:legalval>Aligned_BLOSUM</sci:legalval>
						<sci:legalval>Aligned_VARIMAX</sci:legalval>
						<sci:legalval>Aligned_ProtFP_numerical</sci:legalval>
						<sci:legalval>Aligned_ProtFP_hash</sci:legalval>
						<sci:legalval>Aligned_Norinder</sci:legalval>
						<sci:legalval>Aligned_cscales</sci:legalval>
						<sci:legalval>Aligned_DPPS</sci:legalval>
						<sci:legalval>Aligned_Escales</sci:legalval>
						<sci:legalval>Aligned_Gscales</sci:legalval>
						<sci:legalval>Aligned_HESH</sci:legalval>
						<sci:legalval>Aligned_HSEHPCSV</sci:legalval>
						<sci:legalval>Aligned_Kidera</sci:legalval>
						<sci:legalval>Aligned_Pscales</sci:legalval>
						<sci:legalval>Aligned_QCP</sci:legalval>
						<sci:legalval>Aligned_Sneath</sci:legalval>
						<sci:legalval>Aligned_SVEEVA</sci:legalval>
						<sci:legalval>Aligned_SVHEHS</sci:legalval>
						<sci:legalval>Aligned_SVRDF</sci:legalval>
						<sci:legalval>Aligned_SVRG</sci:legalval>
						<sci:legalval>Aligned_SVWG</sci:legalval>
						<sci:legalval>Aligned_Vscales</sci:legalval>
						<sci:legalval>Aligned_VSGETAWAY</sci:legalval>
						<sci:legalval>Aligned_VSTPV</sci:legalval>
						<sci:legalval>Aligned_VSW</sci:legalval>
						<sci:legalval>Aligned_VTSA</sci:legalval>
						<sci:legalval>Aligned_SVGER</sci:legalval>
						<sci:legalval>Aligned_PSM</sci:legalval>
						<sci:legalval>Aligned_SSIA_AM1</sci:legalval>
						<sci:legalval>Aligned_SSIA_PM3</sci:legalval>
						<sci:legalval>Aligned_SSIA_HF</sci:legalval>
						<sci:legalval>Aligned_SSIA_DFT</sci:legalval>
						<sci:legalval selected="true">ACC_Zscales_Hellberg</sci:legalval>
						<sci:legalval>ACC_Zscales_Jonsson</sci:legalval>
						<sci:legalval>ACC_Zscales_Sandberg</sci:legalval>
						<sci:legalval>ACC_Zscales_binary</sci:legalval>
						<sci:legalval>ACC_Tscales</sci:legalval>
						<sci:legalval>ACC_STscales</sci:legalval>
						<sci:legalval>ACC_VHSE</sci:legalval>
						<sci:legalval selected="true">ACC_ISA_ECI</sci:legalval>
						<sci:legalval>ACC_GRID_tscore</sci:legalval>
						<sci:legalval>ACC_VSTV</sci:legalval>
						<sci:legalval>ACC_MSWHIM</sci:legalval>
						<sci:legalval>ACC_FASGAI</sci:legalval>
						<sci:legalval>ACC_BLOSUM</sci:legalval>
						<sci:legalval>ACC_VARIMAX</sci:legalval>
						<sci:legalval>ACC_ProtFP_numerical</sci:legalval>
						<sci:legalval selected="true">ACC_ProtFP_hash</sci:legalval>
						<sci:legalval>ACC_Norinder</sci:legalval>
						<sci:legalval>ACC_cscales</sci:legalval>
						<sci:legalval>ACC_DPPS</sci:legalval>
						<sci:legalval>ACC_Escales</sci:legalval>
						<sci:legalval>ACC_Gscales</sci:legalval>
						<sci:legalval>ACC_HESH</sci:legalval>
						<sci:legalval selected="true">ACC_HSEHPCSV</sci:legalval>
						<sci:legalval>ACC_Kidera</sci:legalval>
						<sci:legalval>ACC_Pscales</sci:legalval>
						<sci:legalval>ACC_QCP</sci:legalval>
						<sci:legalval>ACC_Sneath</sci:legalval>
						<sci:legalval selected="true">ACC_SVEEVA</sci:legalval>
						<sci:legalval>ACC_SVHEHS</sci:legalval>
						<sci:legalval>ACC_SVRDF</sci:legalval>
						<sci:legalval>ACC_SVRG</sci:legalval>
						<sci:legalval>ACC_SVWG</sci:legalval>
						<sci:legalval>ACC_Vscales</sci:legalval>
						<sci:legalval>ACC_VSGETAWAY</sci:legalval>
						<sci:legalval>ACC_VSTPV</sci:legalval>
						<sci:legalval>ACC_VSW</sci:legalval>
						<sci:legalval>ACC_VTSA</sci:legalval>
						<sci:legalval>ACC_SVGER</sci:legalval>
						<sci:legalval selected="true">ACC_PSM</sci:legalval>
						<sci:legalval>ACC_SSIA_AM1</sci:legalval>
						<sci:legalval>ACC_SSIA_PM3</sci:legalval>
						<sci:legalval>ACC_SSIA_HF</sci:legalval>
						<sci:legalval>ACC_SSIA_DFT</sci:legalval>
					</sci:arg>
					<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>A comma-separated list of properties to use for learning. 
&lt;p&gt;If an item on the list contains a hyphen (e.g., &quot;X1-X5&quot;), and the properties on either side of the hyphen (e.g., &quot;X1&quot;, &quot;X5&quot;) are defined on the first data record, then all properties in that range are included. Note that the properties within the specified range are determined by the order of properties in the property list. Thus, if properties in the property list are in the following order: X1, X2, X5, X3, X4, X6, then the range &quot;X1-X5&quot; will only include properties X1, X2, and X5.&lt;/p&gt;
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;UserSet&apos; or Parameter(&apos;UseProperties&apos;) eq &apos;UserAndIngredientSet&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>A comma-separated list of properties to exclude.  This can be used, for example, if &lt;i&gt;UseProperties&lt;/i&gt; is &lt;i&gt;AllPropertiesOnFirstData&lt;/i&gt;, but there is a small subset of properties you wish not to use in  building the model.</sci:help>
					</sci:arg>
					<sci:arg name="Data Processing" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:member>Variance-based Removal</sci:member>
						<sci:member>PreProcess</sci:member>
						<sci:member>Missing Values</sci:member>
						<sci:member>Remove Correlated Columns</sci:member>
					</sci:arg>
					<sci:arg name="Variance-based Removal" type="StringType" required="false" visibility="visible" multi="false">
						<sci:member>frequency cutoff</sci:member>
						<sci:legalval>zero variance</sci:legalval>
						<sci:legalval selected="true">near zero variance</sci:legalval>
					</sci:arg>
					<sci:arg name="frequency cutoff" type="StringType" required="false" visibility="visible" multi="false">
						<sci:legalval selected="true">95/5</sci:legalval>
						<sci:legalval>90/10</sci:legalval>
						<sci:legalval>85/15</sci:legalval>
						<sci:legalval>80/20</sci:legalval>
						<sci:legalval>75/25</sci:legalval>
					</sci:arg>
					<sci:arg name="PreProcess" type="StringType" required="false" visibility="visible" multi="true">
						<sci:legalval>none</sci:legalval>
						<sci:legalval selected="true">center</sci:legalval>
						<sci:legalval>scale</sci:legalval>
					</sci:arg>
					<sci:arg name="Missing Values" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies whether you wish to replace missing values in your data with imputed values before running randomForest.  This may be required if your data set is sparse, as otherwise there may be few or no complete data records that can be input to the calculation.</sci:help>
						<sci:member>Imputation Method</sci:member>
						<sci:legalval selected="true">Remove</sci:legalval>
						<sci:legalval>Impute NOT IMPLEMENTED</sci:legalval>
					</sci:arg>
					<sci:arg name="Imputation Method" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:member>Imputation Type</sci:member>
						<sci:member>Imputation Model</sci:member>
						<sci:legalval selected="true">Generalized Imputation</sci:legalval>
						<sci:legalval>Similar case Imputation</sci:legalval>
						<sci:legalval>Prediction Model</sci:legalval>
					</sci:arg>
					<sci:arg name="Imputation Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:member>Case</sci:member>
						<sci:enabledscript>Parameter(&apos;Imputation Method&apos;) eq &quot;Generalized Imputation&quot; OR Parameter(&apos;Imputation Method&apos;) eq &quot;Similar case Imputation&quot;</sci:enabledscript>
						<sci:legalval selected="true">mean</sci:legalval>
						<sci:legalval>mode</sci:legalval>
						<sci:legalval>median</sci:legalval>
					</sci:arg>
					<sci:arg name="Case" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>collumn name of the case for similar case imputation</sci:help>
						<sci:enabledscript>Parameter(&apos;Imputation Method&apos;) eq &quot;Similar case Imputation&quot;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Imputation Model" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:member>Imputation Iterations</sci:member>
						<sci:enabledscript>Parameter(&apos;Imputation Method&apos;) eq &quot;Prediction Model&quot;</sci:enabledscript>
						<sci:legalval selected="true">randomForest</sci:legalval>
						<sci:legalval>ranger</sci:legalval>
					</sci:arg>
					<sci:arg name="Imputation Iterations" type="LongType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Number of iterations of re-imputation to perform after initially replacing missing values with median (for numerical properties) or mode (for categorical properties).  The re-imputation is done based on a proximity measure after training a forest model on the data.  Enter 0 if you wish to use only the initial imputed values in training the final model.</sci:help>
						<sci:enabledscript>Parameter(&apos;Imputation Method&apos;) eq &quot;Prediction Model&quot;</sci:enabledscript>
						<sci:value>200</sci:value>
					</sci:arg>
					<sci:arg name="Remove Correlated Columns" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:member>Correlation Cutoff</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Correlation Cutoff" type="DoubleType" required="true" visibility="visible" multi="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Remove Correlated Columns to true&apos;);
Parameter(&apos;Remove Correlated Columns&apos;) eq &apos;True&apos;</sci:enabledscript>
						<sci:value>0.95</sci:value>
					</sci:arg>
					<sci:arg name="ROutput" type="StringType" required="true" visibility="visible" multi="true" expanded="true" uimpl="false">
						<sci:help>Component output. You can select one or more options. Options are:

&lt;ul&gt;
&lt;li&gt;FitSummary: A text summary of the fitting results.

&lt;li&gt;FitPlot: For classification models, a ROC plot for out-of-bag (OOB) samples; for regression models, a fit plot and residuals plot for OOB samples. Also output is a plot of &quot;importance&quot; for the properties that best distinguish among the different classes or best reduce the RMS error when splitting.  OOB samples are those samples that are not used in the training of a particular tree in the forest.  Thus, an OOB plot is similar to a cross-validation plot.

&lt;li&gt;FitSummary and FitPlot: Both the text summary and the plots. (Included for backward compatibility.)

&lt;li&gt;Importance Values: For each property used in the learning, the &quot;importance&quot; of the property in distinguishing among the different classes.  Two importance measures are used: one based on the decrease in prediction accuracy when the property values are randomized, and another based on the Gini index measuring the change in node purity when that property is used to split a tree node into two child nodes.  In addition, the correlation of each variable with each class is output.  This allows you to see whether a given important property is positively or negatively correlated with a given class.  E.g., you can see whether the presence of a molecular fingerprint feature makes it more or less likely that the molecule is active. 

&lt;li&gt;Importance Plots: Two plots of the top 30 most important properties or features are output in properties named &lt;b&gt;ImportancePlot&lt;/b&gt; and &lt;b&gt;AccuracyImportancePlot&lt;/b&gt;.

&lt;/ul&gt;</sci:help>
						<sci:member>RScript</sci:member>
						<sci:member>RFunctionsScript</sci:member>
						<sci:member>RModelScript</sci:member>
						<sci:legalval selected="true">Show Descriptors</sci:legalval>
						<sci:legalval>Show Columns</sci:legalval>
						<sci:legalval selected="true">Model Summary</sci:legalval>
						<sci:legalval selected="true">Cross Validation Summary</sci:legalval>
						<sci:legalval selected="true">Cross Validation Fit</sci:legalval>
						<sci:legalval selected="true">Y-scrambling</sci:legalval>
						<sci:legalval>Genetic Algorithm Summary</sci:legalval>
						<sci:legalval>Stepwise Summary</sci:legalval>
						<sci:legalval>Parameter Optimization Summary</sci:legalval>
						<sci:legalval>t-SNE</sci:legalval>
						<sci:legalval>Importance Plots</sci:legalval>
					</sci:arg>
					<sci:arg name="RScript" type="TextType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>RScript</sci:value>
								<sci:value>RScript</sci:value>
								<sci:value>RScript</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>R script for building the model.</sci:help>
						<sci:value>source(&quot;$(RFunctionsFile)&quot;)
source(&quot;$(RFunctionsScriptfile)&quot;)


###--Libraries--
loadOrInstall(&quot;randomForest&quot;)
loadOrInstall(&quot;ranger&quot;)
loadOrInstall(&quot;xgboost&quot;)
loadOrInstall(&quot;extraTrees&quot;)
loadOrInstall(&quot;pls&quot;)
loadOrInstall(&quot;Matrix&quot;)
loadOrInstall(&quot;mlbench&quot;)
loadOrInstall(&quot;caret&quot;)
loadOrInstall(&quot;iml&quot;)

# Temporary for checking memory and time usage whilst writing the programm
#loadOrInstall(&quot;pryr&quot;)

# Initialize rng
set.seed($(Seed))



###--Globals--
# Filenames
yfile &lt;- &quot;$(Rinput1file)&quot;
xfile &lt;- &quot;$(Rinput2file)&quot;
argumentsfile &lt;- &quot;$(Rinput3file)&quot;
stackmethodfile &lt;- &quot;$(Rinput4file)&quot;
outfile &lt;- &quot;$(Routput3file)&quot;

# Data Processing
IsClassification &lt;- &quot;$(TypeOfPropertyToLearn)&quot; == &quot;Categorical&quot;
doImputation &lt;- &quot;$(Missing Values)&quot; != &quot;Remove&quot;
MakeYFactor &lt;- IsClassification
YMustBeNumber &lt;- !IsClassification
XMustBeNumber &lt;- !IsClassification
omitNA &lt;- !doImputation
removeZeroVar &lt;- tolower(&quot;$(Variance-based Removal)&quot;) == &quot;zero variance&quot;
removeNearZeroVar &lt;- tolower(&quot;$(Variance-based Removal)&quot;) == &quot;near zero variance&quot;
if (removeNearZeroVar){nzvCutoff &lt;- $(frequency cutoff)}
RemoveCorrelated &lt;- tolower(&quot;$(Remove Correlated Columns)&quot;) == &quot;true&quot;
CorCutoff &lt;- $(Correlation Cutoff)

PerformPreprocess &lt;- TRUE
PrepParams &lt;- unlist(strsplit(&quot;$(PreProcess)&quot;, split=&quot;,&quot;))
if (&quot;none&quot; %in% unlist(strsplit(c(&quot;$(PreProcess)&quot;), split=&quot;,&quot;))){
  PerformPreprocess &lt;- FALSE
  PrepParams &lt;- NULL
}

# TODO add to options
removeColinear &lt;- FALSE
colinearCutoff &lt;- 1

# Plotting
Routput &lt;- strsplit(&quot;$(ROutput)&quot;, &quot;,&quot;)[[1]]
PlotWidth &lt;- $(PlotWidth)
PlotHeight &lt;- $(PlotHeight)

# Validation
PerformCV &lt;- (&quot;Cross Validation Summary&quot; %in% Routput || &quot;Cross Validation Fit&quot; %in% Routput)
CVRepeats &lt;- $(Cross Validation Repeats)
CVFolds &lt;- $(Cross Validation Folds)
Partitions &lt;- $(Partitions)

# Additionial options
SaveToSpecificFile &lt;- tolower(&quot;$(SaveRObject)&quot;) == &quot;true&quot;
SpecificFile &lt;- &quot;$(FilenameRObject)&quot;

# Global Arguments of the models imported into a variable
GlobalArgs &lt;- read.csv(argumentsfile, comment.char=&quot;&quot;, blank.lines.skip=FALSE, na.strings=&quot;&quot;)
StackGoals &lt;- read.csv(stackmethodfile, comment.char=&quot;&quot;, blank.lines.skip=FALSE, na.strings=&quot;&quot;)

# Convert all indexes to strings (otherwise they are likely factors..)
GlobalArgs &lt;- data.frame(lapply(GlobalArgs, as.character), stringsAsFactors=FALSE)
StackGoals &lt;- data.frame(lapply(StackGoals, as.character), stringsAsFactors=FALSE)

# Names of all the models with stacks
StacksnModels &lt;- GlobalArgs[1,][!is.na(GlobalArgs[1,])]

# Return if stack goals dont match number of stacks
if (length(StackGoals[,1]) != length(StacksnModels[grepl(&quot;ModelBuild Stack \\d+ Model 1&quot;,StacksnModels)])){
  stop(&quot;number of stacks in Stack Methods don&apos;t match number of stacks in Model&quot;)
}
# Return if last stack isn&apos;t an ensemble or single model
if (StackGoals[length(StackGoals[,1]),2] == &quot;Keep All Predictions&quot;){
  stop(&quot;Last stack goal can&apos;t be &apos;Keep All Predictions&apos;&quot;)
}


###--Import Data--
# Alldata has $xy (the data), $ynames (y names), $xnames (x names), and $y (y values).
AllData &lt;- readAllData(yfile, xfile, outfile, IsClassification, doImputation, MakeYFactor, 
                       YMustBeNumber, XMustBeNumber, omitNA, removeZeroVar, removeNearZeroVar, 
                       nzvCutoff, RemoveCorrelated, CorCutoff, removeColinear = FALSE, colinearCutoff = 1)

# Attach data
attach(AllData)

###--Feature globals--
# List of features in the input
if (&quot;$(UseProperties)&quot; == &quot;PredefinedSet&quot;){
  featureList &lt;- unlist(strsplit(&quot;$(PredefinedSet)&quot;, split = &quot;,&quot;))
}else if (&quot;$(UseProperties)&quot; == &quot;UserSet&quot;){
  featureList &lt;- unlist(strsplit(&quot;$(UserSet)&quot;, split = &quot;,&quot;))
}
if (&quot;$(IgnoreProperties)&quot; != &quot;&quot;){
  featureList &lt;- featureList[!featureList == unlist(strsplit(&quot;$(IgnoreProperties)&quot;, split = &quot;,&quot;))]
}


# To check if something goes wrong
sapply(featureList, function(x) grep(x, xnames))
unlist(sapply(featureList, function(x) grep(x, xnames)))


# Check if there aren&apos;t any overlapping feature names
if(length(xnames[unlist(sapply(featureList, function(x) grep(x, xnames)))]) != length(xnames)){
  stop(&quot;class to feature method is wrong! Look out for overlapping names&quot;)
}

# Update featureList to only include those features that still have columns
featureList &lt;- featureList[!sapply(featureList, function(x) sum(grepl(x, xnames))) == 0]

# Create a mask of the overarching classes onto the xy column names
featureClasses &lt;- sapply(featureList, function(x) grep(x, xnames))
featureMask &lt;- unlist(lapply(names(featureClasses), function(x) rep(x, length(featureClasses[[x]]))))

# Update data
xy &lt;- cbind(xy[1], xy[-1][xnames])

###--Model globals--
# Model settings into one list
ModelBuild &lt;- NULL
StacksnModels &lt;- GlobalArgs[1,][!is.na(GlobalArgs[1,])]

# For every stack
for (i in 1:length(StacksnModels[grepl(&quot;ModelBuild Stack \\d+ Model 1&quot;,StacksnModels)])){
  ModelBuild &lt;- append(ModelBuild, list(NULL))
  names(ModelBuild)[i] &lt;- paste(&quot;stack&quot;, i, sep = &quot;&quot;)
  ModelBuild[[i]] &lt;- append(ModelBuild[[i]],list(Details = list(Goal = GetParam(StackGoals, paste(&quot;Stack&quot;, i)),
																StackCV = NULL,
																StackPerformPreprocess = PerformPreprocess,
																StackPrepParams = PrepParams,
																StackProcess = NULL)))
  if (ModelBuild[[i]]$Details$Goal == &quot;Keep Best Model&quot;){
    ModelBuild[[i]]$Details &lt;- append(ModelBuild[[i]]$Details, list(BestModel = NULL))
  }

  # For every Model per Stack
  for (j in 1:length(StacksnModels[grepl(paste(&quot;ModelBuild Stack&quot;, i, &quot;Model \\d+&quot;),StacksnModels)])){
    # Take out the parameter names and values for this model
    tmpGlobals &lt;- GlobalArgs[, grep(paste(&quot;ModelBuild.Stack&quot;, i, &quot;Model&quot;, j, &quot;.*&quot;, sep = &quot;.&quot;), colnames(GlobalArgs))]
    
    # Add model index to list
    ModelBuild[[i]] &lt;- append(ModelBuild[[i]],list(NULL))
    names(ModelBuild[[i]])[j+1] &lt;- paste(&quot;model&quot;, j, sep = &quot;&quot;)
    
    # Add Type of model and initialize the list
    ModelBuild[[i]][[j+1]] &lt;- list(TypeOfModel = GetParam(tmpGlobals, &quot;TypeOfModel&quot;),
								   Build = NULL,
								   CV = NULL,
                                   FeatureSelection = NULL, 
                                   ParameterOptimization = NULL,
								   Features = NULL,
								   args = NULL,
								   extraInfo = NULL)

	# Features pre-Selected per Model
    if (GetParam(tmpGlobals, &quot;UseProperties&quot;) == &quot;PreviouslyDefinedSet&quot;){
	  ModelBuild[[i]][[j+1]]$Features &lt;- xnames
	} else if (GetParam(tmpGlobals, &quot;UseProperties&quot;) == &quot;PredefinedSet&quot;){
	  ModelBuild[[i]][[j+1]]$Features &lt;- xnames[featureMask %in% unlist(strsplit(GetParam(tmpGlobals, &quot;PredefinedSet&quot;), split=&quot;; &quot;))[!(unlist(strsplit(GetParam(tmpGlobals, &quot;PredefinedSet&quot;), split=&quot;; &quot;)) 
																															   %in% unlist(strsplit(GetParam(tmpGlobals, &quot;IgnoreProperties&quot;), split=&quot;; &quot;)))]]
	}else if (GetParam(tmpGlobals, &quot;UseProperties&quot;) == &quot;UserSet&quot;){
	  ModelBuild[[i]][[j+1]]$Features &lt;- xnames[featureMask %in% unlist(strsplit(GetParam(tmpGlobals, &quot;UserSet&quot;), split=&quot;; &quot;))[!(unlist(strsplit(GetParam(tmpGlobals, &quot;UserSet&quot;), split=&quot;; &quot;)) 
																														 %in% unlist(strsplit(GetParam(tmpGlobals, &quot;IgnoreProperties&quot;), split=&quot;; &quot;)))]]
	}

    # Some parameters are dependent on descriptors or type of learning
    if (ModelBuild[[i]][[j+1]]$TypeOfModel == &quot;randomForest&quot; || ModelBuild[[i]][[j+1]]$TypeOfModel == &quot;ranger&quot; 
        || ModelBuild[[i]][[j+1]]$TypeOfModel == &quot;extraTrees&quot;) {
	  ModelBuild[[i]][[j+1]]$extraInfo &lt;- list(mtrySet = GetParam(tmpGlobals, &quot;Number Of Descriptors&quot;), mtryFrac = as.numeric(GetParam(tmpGlobals, &quot;Specified Fraction&quot;)))
      mtry &lt;- floor(sqrt(length(xnames)))
      if (GetParam(tmpGlobals, &quot;Number Of Descriptors&quot;) == &quot;Log2(D)&quot;) {
        mtry &lt;- ceiling(log2(length(xnames)))
      } else if (GetParam(tmpGlobals, &quot;Number Of Descriptors&quot;) == &quot;Specified Fraction&quot;) {
        mtry &lt;- ceiling(as.numeric(GetParam(tmpGlobals, &quot;Specified Fraction&quot;)) * length(xnames))
      }
      if (is.na(GetParam(tmpGlobals, &quot;Node Size&quot;)) || !(as.numeric(GetParam(tmpGlobals, &quot;Node Size&quot;)) &gt; 0)) {
        #standard values of model
        nodesize &lt;- if(IsClassification) {1} else {5}
      } else {
        nodesize &lt;- as.numeric(GetParam(tmpGlobals, &quot;Node Size&quot;))
      } 
    } 
    
    # Add Model arguments to the list
    if (ModelBuild[[i]][[j+1]]$TypeOfModel == &quot;randomForest&quot; || ModelBuild[[i]][[j+1]]$TypeOfModel == &quot;extraTrees&quot;){
      model.args &lt;- list(ntree = as.numeric(GetParam(tmpGlobals, &quot;Number Of Trees&quot;)), mtry = mtry, nodesize = nodesize, maxnodes = NULL)
      if (IsClassification &amp;&amp; tolower(&quot;$(Equalize Class Sizes)&quot;) == &quot;true&quot;) {
        # Determine minimum representatives in a class, but make sure sample
        # size is at least 5 for classes with at least that many representatives.
        ytab &lt;- table(y)
        minclass &lt;- max(min(ytab), 5)
        sampsize &lt;- as.vector(apply(ytab, 1, function(x) min(x, minclass)))
        model.args &lt;- c(model.args, list(sampsize = sampsize))
      }
      if (ModelBuild[[i]][[j+1]]$TypeOfModel == &quot;extraTrees&quot;){
        model.args &lt;- c(model.args, list(numRandomCuts = as.numeric(GetParam(tmpGlobals, &quot;Number of Random Cuts&quot;))))
        model.args$maxnodes &lt;- NULL
      } 
    } else if (ModelBuild[[i]][[j+1]]$TypeOfModel == &quot;ranger&quot;) {
      model.args &lt;- list(num.trees = as.numeric(GetParam(tmpGlobals, &quot;Number Of Trees&quot;)), mtry = mtry, min.node.size = nodesize, max.depth = NULL)
      
      if (tolower(&quot;$(RParallel)&quot;) == &quot;true&quot;){
        model.args &lt;- c(model.args, list(num.threads = $(Num Threads)))
      }
    } else if (ModelBuild[[i]][[j+1]]$TypeOfModel == &quot;pls&quot;){
      # Avoid error due to more components than data can support
      model.args &lt;- list(ncomp = min(as.numeric(GetParam(tmpGlobals, &quot;NumberOfVariables&quot;)), nrow(xy[-1]) - 1, ncol(xy[-1])), 
						 method = tolower(GetParam(tmpGlobals, &quot;ModelType&quot;)), validation = &quot;none&quot;)
    } else if (ModelBuild[[i]][[j+1]]$TypeOfModel == &quot;xgboost&quot;){
      if (packageVersion(&quot;xgboost&quot;) &lt; 0.6) {
        booster &lt;- &quot;gbtree&quot;  # DART is only supported for ver. 0.6 and above
      } else {
        booster &lt;- GetParam(tmpGlobals, &quot;Booster&quot;)
      }
      
      if(!IsClassification){
        obj &lt;- &quot;reg:linear&quot;
      } else {
        obj &lt;- &quot;multi:softprob&quot;
      }
      
      model.args &lt;- list(eta = as.numeric(GetParam(tmpGlobals, &quot;Learning Rate&quot;)), 
                         gamma = as.numeric(GetParam(tmpGlobals, &quot;Gamma&quot;)), 
                         max.depth = as.numeric(GetParam(tmpGlobals, &quot;Max Depth&quot;)),
                         subsample = as.numeric(GetParam(tmpGlobals, &quot;Data Fraction&quot;)), 
                         colsample_bytree = as.numeric(GetParam(tmpGlobals, &quot;Descriptor Fraction&quot;)),
                         nrounds = as.numeric(GetParam(tmpGlobals, &quot;Max Trees&quot;)), 
                         nthread = 16, objective = obj, booster = c(booster))
      if (booster == &quot;dart&quot;) {
        model.args &lt;- c(model.args, list(rate_drop = as.numeric(GetParam(tmpGlobals, &quot;Dropout Fraction&quot;)), 
                                         skip_drop = as.numeric(GetParam(tmpGlobals, &quot;Dropout Skip Probability&quot;))))
      } 
      
      if (tolower(&quot;$(RParallel)&quot;) == &quot;true&quot;){
        model.args$nthread &lt;- $(Num Threads)
      }
    }
	ModelBuild[[i]][[j+1]]$args &lt;- model.args

    # Add Feature Selection arguments to the list
	if (!is.na(GetParam(tmpGlobals, &quot;Feature Selection&quot;))){
	  ModelBuild[[i]][[j+1]]$FeatureSelection &lt;- list(Details = unlist(strsplit(GetParam(tmpGlobals, &quot;Feature Selection&quot;), &quot;; &quot;)), 
													  Metric = GetParam(tmpGlobals, &quot;Selection Metric&quot;), 
													  SelectionFolds = as.numeric(GetParam(tmpGlobals, &quot;Selection Folds&quot;)), 
													  SelectionRepeats = as.numeric(GetParam(tmpGlobals, &quot;Selection Repeats&quot;)),
													  Maxiter = as.numeric(GetParam(tmpGlobals, &quot;Maximum Iterations&quot;)), 
													  nonImprovingIter = as.numeric(GetParam(tmpGlobals, &quot;Maximum non-Improving Iterations&quot;)))
	  if (&quot;Genetic Feature Selection&quot; %in% ModelBuild[[i]][[j+1]]$FeatureSelection$Details){
		ModelBuild[[i]][[j+1]]$FeatureSelection &lt;- append(ModelBuild[[i]][[j+1]]$FeatureSelection, 
														  list(Mutation = GetParam(tmpGlobals, &quot;Mutation&quot;),
															   Elitism = as.numeric(GetParam(tmpGlobals, &quot;Elitism&quot;)),
															   Popsize = as.numeric(GetParam(tmpGlobals, &quot;Population Size&quot;))))
	  }
	}

	# Add Parameter optimization arguments to the list
	if (GetParam(tmpGlobals, &quot;Parameter Optimization&quot;) != &quot;None&quot;){
	  ModelBuild[[i]][[j+1]]$ParameterOptimization &lt;- list(Details = GetParam(tmpGlobals, &quot;Parameter Optimization&quot;), 
													  Metric = GetParam(tmpGlobals, &quot;Tuning Metric&quot;), 
													  TuningFolds = as.numeric(GetParam(tmpGlobals, &quot;Tuning Folds&quot;)), 
													  TuningRepeats = as.numeric(GetParam(tmpGlobals, &quot;Tuning Repeats&quot;)),
													  Grid = NULL)

	  # create arguments for model building
	  if (ModelBuild[[i]][[j+1]]$TypeOfModel == &quot;randomForest&quot; || ModelBuild[[i]][[j+1]]$TypeOfModel == &quot;extraTrees&quot;){
		Grid &lt;- list(ntree = c(GetParam(tmpGlobals, &quot;Number Of Trees Grid&quot;)), mtry = unlist(strsplit(GetParam(tmpGlobals, &quot;Number Of Descriptors Grid&quot;), split = &quot;; &quot;)), 
					 nodesize = c(GetParam(tmpGlobals, &quot;Node Size Grid&quot;)))
		if (IsClassification &amp;&amp; tolower(&quot;$(Equalize Class Sizes)&quot;) == &quot;true&quot;) {
		  Grid &lt;- c(Grid, list(sampsize = ModelBuild[[i]][[j+1]]$args$sampsize))
		}
		if (ModelBuild[[i]][[j+1]]$TypeOfModel == &quot;extraTrees&quot;){
		  Grid &lt;- c(Grid, list(numRandomCuts = c(GetParam(tmpGlobals, &quot;Number of Random Cuts Grid&quot;))))
		} else {
		  Grid &lt;- c(Grid, list(maxnodes = c(GetParam(tmpGlobals, &quot;Maximum Number of Nodes Grid&quot;))))
		}
	  } else if (ModelBuild[[i]][[j+1]]$TypeOfModel == &quot;ranger&quot;) {
		Grid &lt;- list(num.trees = c(GetParam(tmpGlobals, &quot;Number Of Trees Grid&quot;)), mtry = unlist(strsplit(GetParam(tmpGlobals, &quot;Number Of Descriptors Grid&quot;), split = &quot;; &quot;)), 
					 min.node.size = c(GetParam(tmpGlobals, &quot;Node Size Grid&quot;)), max.depth = c(GetParam(tmpGlobals, &quot;Maximum Depth Grid&quot;)))
        if (tolower(&quot;$(RParallel)&quot;) == &quot;true&quot;){
          Grid &lt;- c(Grid, list(num.threads = $(Num Threads)))
        }
	  } else if (ModelBuild[[i]][[j+1]]$TypeOfModel == &quot;pls&quot;){
		Grid &lt;- list(ncomp =  c(GetParam(tmpGlobals, &quot;Number Of Variables Grid&quot;)))
	  } else if (ModelBuild[[i]][[j+1]]$TypeOfModel == &quot;xgboost&quot;){
		Grid &lt;- list(eta = c(GetParam(tmpGlobals, &quot;Learning Rate Grid&quot;)),
					 gamma = c(GetParam(tmpGlobals, &quot;Gamma Grid&quot;)), 
					 max.depth = c(GetParam(tmpGlobals, &quot;Max Depth Grid&quot;)), 
					 subsample = c(GetParam(tmpGlobals, &quot;Data Fraction Grid&quot;)), 
					 colsample_bytree = c(GetParam(tmpGlobals, &quot;Descriptor Fraction Grid&quot;)),
					 nthread = ModelBuild[[i]][[j+1]]$args$nthread, 
					 nrounds = c(GetParam(tmpGlobals, &quot;Max Trees Grid&quot;)), 
					 objective = ModelBuild[[i]][[j+1]]$args$obj, 
					 booster = unlist(strsplit(GetParam(tmpGlobals, &quot;Booster Grid&quot;), split = &quot;,&quot;)),
					 rate_drop= c(GetParam(tmpGlobals, &quot;Dropout Fraction Grid&quot;)),
					 skip_drop = c(GetParam(tmpGlobals, &quot;Dropout Skip Probability Grid&quot;)))
	  }
	  ModelBuild[[i]][[j+1]]$ParameterOptimization$Grid &lt;- Grid
	}
  }
}

# Print to check
print(ModelBuild)

###--Run--

# Center or Scale
if (ModelBuild[[1]]$Details$StackPerformPreprocess) {
  ModelBuild[[1]]$Details$StackProcess &lt;- preProcess(xy[-1], method = c(ModelBuild[[i]]$Details$StackPrepParams))
  xy &lt;- cbind(xy[1], predict(ModelBuild[[1]]$Details$StackProcess, xy[-1]))
}

# init
toremove &lt;- NULL
PreviousStack &lt;- NULL

xyStack &lt;- xy
xnamesStack &lt;- xnames

# For each Stack
for (i in 1:length(ModelBuild)){
  # Update data
  xy &lt;- cbind(xyStack[1], xyStack[-1][xnamesStack])

  FSpreCV &lt;- NULL
  POpreCV &lt;- NULL
  preCV &lt;- NULL

  #For each model
  for (j in 2:length(ModelBuild[[i]])){
	# set the model featureList
	ModelFeatureList &lt;- c(names(unlist(lapply(lapply(sapply(featureList, function(x) grep(x, ModelBuild[[i]][[j]]$Features)), function(x) {if (!(length(x) == 0)){x}}), function(x) x[1]))), toremove)

    # Feature Selection
    if (!is.null(ModelBuild[[i]][[j]]$FeatureSelection)){
	  if (i &gt; 1){
	    FSpreCV &lt;- buildCVStack(xy, xnames, StackList = ModelBuild[1:(i-1)], IsClassification, Folds = ModelBuild[[i]][[j]]$FeatureSelection$SelectionFolds, 
						   Repeats = ModelBuild[[i]][[j]]$FeatureSelection$SelectionRepeats, PreBuildCVStack = NULL)$PreCV
	  }
	  if (&quot;Stepwise Feature Selection&quot; %in% ModelBuild[[i]][[j]]$FeatureSelection$Details){
		ClassesStep &lt;- stepwise(xy, xnamesStack, featureList = ModelFeatureList, featureMask = c(featureMask, toremove), ModelList = ModelBuild[[i]][[j]], plot = FALSE, 
							    stopiter = ModelBuild[[i]][[j]]$FeatureSelection$nonImprovingIter, maxiter = ModelBuild[[i]][[j]]$FeatureSelection$Maxiter, 
							    CVFolds = ModelBuild[[i]][[j]]$FeatureSelection$SelectionFolds, CVReps = ModelBuild[[i]][[j]]$FeatureSelection$SelectionRepeats, 
								Metric = ModelBuild[[i]][[j]]$FeatureSelection$Metric, preCV = FSpreCV)
	  }  
	  if (&quot;Genetic Feature Selection&quot; %in% ModelBuild[[i]][[j]]$FeatureSelection$Details){
		ClassesGA &lt;- GA(xy, xnamesStack, featureList = ModelFeatureList, featureMask = c(featureMask, toremove), ModelList = ModelBuild[[i]][[j]], 
						elitism = ModelBuild[[i]][[j]]$FeatureSelection$Elitism, pmutation = 0.03, popsize = ModelBuild[[i]][[j]]$FeatureSelection$Popsize, 
						stopiter = ModelBuild[[i]][[j]]$FeatureSelection$nonImprovingIter, maxiter = ModelBuild[[i]][[j]]$FeatureSelection$Maxiter, plot = FALSE, 
						CVFolds = ModelBuild[[i]][[j]]$FeatureSelection$SelectionFolds, CVReps = ModelBuild[[i]][[j]]$FeatureSelection$SelectionRepeats, preCV = FSpreCV) 
	  }
	  if (&quot;Genetic Feature Selection&quot; %in% ModelBuild[[i]][[j]]$FeatureSelection$Details &amp;&amp; &quot;Stepwise Feature Selection&quot; %in% ModelBuild[[i]][[j]]$FeatureSelection$Details){
		evalStep &lt;- DoCV(xy, xnames = ClassToFeature(xnamesStack, ClassesStep), ModelList = ModelBuild[[i]][[j]],  PreCV = FSpreCV, Folds = ModelBuild[[i]][[j]]$FeatureSelection$SelectionFolds, 
						 Repeats = ModelBuild[[i]][[j]]$FeatureSelection$SelectionRepeats, overrideArgs = TRUE)
		evalGA &lt;- DoCV(xy, xnames = ClassToFeature(xnamesStack, ClassesGA), ModelList = ModelBuild[[i]][[j]],  PreCV = FSpreCV, Folds = ModelBuild[[i]][[j]]$FeatureSelection$SelectionFolds, 
					   Repeats = ModelBuild[[i]][[j]]$FeatureSelection$SelectionRepeats, overrideArgs = TRUE)
		if (evalGA$Rsquared &gt;= evalStep$Rsquared){ModelBuild[[i]][[j]]$Features &lt;- ClassToFeature(xnamesStack, ClassesGA, featureList = ModelFeatureList, featureMask = c(featureMask, toremove))}
		else{ModelBuild[[i]][[j]]$Features &lt;- ClassToFeature(xnamesStack, ClassesStep, featureList = ModelFeatureList, featureMask = c(featureMask, toremove))}
      } else if (&quot;Stepwise Feature Selection&quot; %in% ModelBuild[[i]][[j]]$FeatureSelection$Details){
		ModelBuild[[i]][[j]]$Features &lt;- ClassToFeature(xnamesStack, ClassesStep, featureList = ModelFeatureList, featureMask = c(featureMask, toremove))
	  } else {
		ModelBuild[[i]][[j]]$Features &lt;- ClassToFeature(xnamesStack, ClassesGA, featureList = ModelFeatureList, featureMask = c(featureMask, toremove))
	  }
	} else {
	  ModelBuild[[i]][[j]]$Features &lt;- c(ModelBuild[[i]][[j]]$Features, toremove)
	}
	# Update mtry due to new set of descriptors
	if (ModelBuild[[i]][[j]]$TypeOfModel == &quot;randomForest&quot; || ModelBuild[[i]][[j]]$TypeOfModel == &quot;ranger&quot; || ModelBuild[[i]][[j]]$TypeOfModel == &quot;extraTrees&quot;){
	  ModelBuild[[i]][[j]]$args$mtry &lt;- floor(sqrt(length(ModelBuild[[i]][[j]]$Features)))
	  if (ModelBuild[[i]][[j]]$extraInf$mtrySet == &quot;Log2(D)&quot;) {
	    ModelBuild[[i]][[j]]$args$mtry &lt;- ceiling(log2(length(ModelBuild[[i]][[j]]$Features)))
	  } else if (ModelBuild[[i]][[j]]$extraInf$mtrySet == &quot;Specified Fraction&quot;) {
		ModelBuild[[i]][[j]]$args$mtry &lt;- ceiling(ModelBuild[[i]][[j]]$extraInf$mtryFrac * length(ModelBuild[[i]][[j]]$Features))
	  }
	}
	# Update ncomp due to new set of descriptors
	if (ModelBuild[[i]][[j]]$TypeOfModel == &quot;pls&quot;){
      ModelBuild[[i]][[j]]$args$ncomp &lt;- min(ModelBuild[[i]][[j]]$args$ncomp, nrow(xy[-1]) - 1, ncol(xy[-1][,ModelBuild[[i]][[j]]$Features]))
	}

	# Parameter optimization
    if (!is.null(ModelBuild[[i]][[j]]$ParameterOptimization)){
	  if (i &gt; 1){
	    POpreCV &lt;- buildCVStack(xy, xnames, StackList = ModelBuild[1:(i-1)], IsClassification, Folds = ModelBuild[[i]][[j]]$ParameterOptimization$TuningFolds, 
								Repeats = ModelBuild[[i]][[j]]$ParameterOptimization$TuningRepeats, PreBuildCVStack = NULL)$PreCV
	  }
	  if (&quot;Grid Search&quot; %in% ModelBuild[[i]][[j]]$ParameterOptimization$Details){
	    ModelBuild[[i]][[j]]$args &lt;- GridSearch(xy, ModelBuild[[i]][[j]]$Features, ModelList = ModelBuild[[i]][[j]], Grid = ModelBuild[[i]][[j]]$ParameterOptimization$Grid, Summary = FALSE, POpreCV = POpreCV, 
											  Metric = ModelBuild[[i]][[j]]$ParameterOptimization$Metric, 
											  CVFolds = ModelBuild[[i]][[j]]$ParameterOptimization$TuningFolds, 
											  CVreps = ModelBuild[[i]][[j]]$ParameterOptimization$TuningRepeats)
	  }
	}
  }

  # Select Best Model for the Stack if there is one needed
  if (length(ModelBuild[[i]]) &gt; 2 &amp;&amp; ModelBuild[[i]]$Details$Goal == &quot;Keep Best Model&quot;){
	if (i &gt; 1){
	  preCV &lt;- buildCVStack(xy, xnames, StackList = ModelBuild[1:(i-1)], IsClassification, Folds = ModelBuild[[i]][[j]]$FeatureSelection$SelectionFolds, 
						      Repeats = ModelBuild[[i]][[j]]$FeatureSelection$SelectionRepeats, PreBuildCVStack = NULL)$PreCV
	}
	Best &lt;- 0
	for (j in 2:length(ModelBuild[[i]])){
	  eval &lt;- DoCV(xy, xnames = ModelBuild[[i]][[j]]$Features, ModelList = ModelBuild[[i]][[j]],  PreCV = preCV, Folds = CVFolds, Repeats = CVRepeats, overrideArgs = TRUE)
	  if (eval$Rsquared &gt; Best){
		Best &lt;- eval$Rsquared
		ModelBuild[[i]]$Details$BestModel &lt;- j
	  }
	}
  }

  # Build Stack and predict
  StackBuild &lt;- buildStack(xyStack, xnamesStack, StackList = ModelBuild[1:i], IsClassification, PreBuildStack = PreviousStack)
  PreviousStack &lt;- StackBuild
  
  # Update xyStack with the newly predicted values of the previous stack
  xyStack &lt;- cbind(xyStack[1], xyStack[-1][xnamesStack[!(xnamesStack %in% toremove)]], StackBuild[[i]]$StackPred)	
  xnamesStack &lt;- c(xnamesStack[!(xnamesStack %in% toremove)], colnames(StackBuild[[i]]$StackPred))
  toremove &lt;- colnames(StackBuild[[i]]$StackPred)
}


# Rename model for output
Stacks &lt;- StackBuild


# Create Cross validation of final model
if(&quot;Cross Validation Summary&quot; %in% Routput || &quot;Cross Validation Fit&quot; %in% Routput){
  CVResults &lt;- buildCVStack(xy, xnames, StackList = ModelBuild, IsClassification, Folds = CVFolds, Repeats = CVRepeats, PreBuildCVStack = NULL)
  if (&quot;Cross Validation Fit&quot; %in% Routput){
	model.CV.obs &lt;- as.matrix(xy[,1])
	model.CV.pred &lt;- as.matrix(CVResults[[length(CVResults)]]$StackPredictions[,1])
  }
}

# Create Y-scrambling of final model
if(&quot;Y-scrambling&quot; %in% Routput){
  Y &lt;- Yscramble(xy, xnames, StackList = ModelBuild, IsClassification, Partitions = Partitions, Folds = CVFolds, Repeats = CVRepeats)
}


#--output--

if (&quot;Show Descriptors&quot; %in% Routput) 
{
	# write out descriptors
	sink(file = &quot;$(Routput1file)&quot;)
	
	featureList &lt;- featureList[!sapply(featureList, function(x) sum(grepl(x, xnames))) == 0]
	Descriptors &lt;- sapply(featureList, function(x) grep(x, xnames))
	
	cat(&quot;\nInput Descriptors:\n&quot;)
	cat(featureList, sep=&quot;\n&quot;)

	cat(&quot;\nFinal Model Descriptors:&quot;)
	for (i in 1:length(ModelBuild)){
	  cat(&quot;\n\nStack&quot;, i)
	  cat(&quot;\nStack Method:&quot;, ModelBuild[[i]]$Details$Goal)
	  for (j in 2:length(ModelBuild[[i]])){
		cat(&quot;\nModel&quot;, j-1)
		cat(&quot;\nType of model:&quot;, ModelBuild[[i]][[j]]$TypeOfModel)
		cat(&quot;\nFeature Selection Performed:&quot;, ModelBuild[[i]][[j]]$FeatureSelection$Details)
		ModelDescriptors &lt;- sapply(featureList, function(x) grep(x, ModelBuild[[i]][[j]]$Features))
		extraDescriptors &lt;- ModelBuild[[i]][[j]]$Features[!(1:length(ModelBuild[[i]][[j]]$Features) %in% unlist(ModelDescriptors, use.names = F))]
		ModelDescriptors &lt;- names(unlist(lapply(lapply(ModelDescriptors, function(x) {if (!(length(x) == 0)){x}}), function(x) x[1])))
		cat(&quot;\nModel Descriptors:\n&quot;)			
		cat(ModelDescriptors, sep=&quot;\n&quot;)
		cat(extraDescriptors, sep = &quot;\n&quot;)
		cat(&quot;\n&quot;)
	  }
	}
	
	cat(&quot;\nFinal Descriptors:\n&quot;)
	cat(names(Descriptors), sep=&quot;\n&quot;)

	sink()
}

if (&quot;Show Columns&quot; %in% Routput) 
{
	# write out descriptors
	sink(file = &quot;$(Routput16file)&quot;)

	cat(&quot;\nCollumns:\n&quot;)
	cat(names(xy[-1]), sep=&quot;\n&quot;)
	
	sink()
}

if (&quot;Model Summary&quot; %in% Routput) 
{
	# write out fit results
	sink(file = &quot;$(Routput10file)&quot;)
	
	cat(&quot;Final Model Summary&quot;)
	cat(&quot;\n\nData Processes: &quot;)
	cat(&quot;\nPreprocess:&quot;, PrepParams)
	cat(&quot;\nVariance-based Removal:&quot;, &quot;$(Variance-based Removal)&quot;)
	if (tolower(&quot;$(Variance-based Removal)&quot;) == &quot;near zero variance&quot;){
	  cat(&quot; with cutoff &quot;, &quot;$(frequency cutoff)&quot;)
	}
	cat(&quot;\nCorrelation-based Removal:&quot;, &quot;$(Remove Correlated Columns)&quot;)
	if (tolower(&quot;$(Remove Correlated Columns)&quot;) == &quot;true&quot;){
	  cat(&quot; with cutoff &quot;, &quot;$(Correlation Cutoff)&quot;)
	}

	for (i in 1:length(ModelBuild)){
	  cat(&quot;\n\nStack&quot;, i)
	  cat(&quot;\nStack Method:&quot;, ModelBuild[[i]]$Details$Goal)
	  cat(&quot;\nStack Models:&quot;)
	  if (length(ModelBuild[[i]]) &gt; 2 &amp;&amp; ModelBuild[[i]]$Details$Goal == &quot;Keep Best Model&quot;){
		cat(&quot;\nBest Model was:&quot;, ModelBuild[[i]]$Details$BestModel - 1)
	  }
	  for (j in 2:length(ModelBuild[[i]])){
		cat(&quot;\nModel&quot;, j-1)
		cat(&quot;\nType of model:&quot;, ModelBuild[[i]][[j]]$TypeOfModel)
		cat(&quot;\nFeature Selection Performed:&quot;, ModelBuild[[i]][[j]]$FeatureSelection$Details)
		cat(&quot;\nParameter Optimization Performed:&quot;, ModelBuild[[i]][[j]]$ParameterOptimization$Details)
		args &lt;- ModelBuild[[i]][[j]]$args
		args[sapply(args, is.null)] &lt;- NA
		cat(&quot;\nArguments called:&quot;, paste(rownames(as.matrix(unlist(args))), as.matrix(unlist(args)), sep = &quot; = &quot;))
	  }
	}
	#cat(&quot;\nArguments called:&quot;, paste(rownames(as.matrix(model.args[-2:-1])), as.matrix(model.args[-2:-1]), sep = &quot; = &quot;))

	sink()
}

if (&quot;Cross Validation Summary&quot; %in% Routput) 
{
	# write out fit results
	sink(file = &quot;$(Routput11file)&quot;)

	cat(&quot;\n&quot;, paste(CVFolds, &quot;-Fold Cross Validation with &quot;, CVRepeats, &quot; repeat(s)&quot;, sep = &quot;&quot;))

	cat(&quot;\n\n R-squared (CV): &quot;, format(CVResults[[length(CVResults)]]$StackResults$Rsquared, digits=4) , &quot;, std: &quot;, format(CVResults[[length(CVResults)]]$StackResults$RsquaredSD, digits=4))
	cat(&quot;\n RMSE (CV): &quot;, format(CVResults[[length(CVResults)]]$StackResults$RMSE, digits=4) , &quot;, std: &quot;, format(CVResults[[length(CVResults)]]$StackResults$RMSESD, digits=4))
	cat(&quot;\n MAE (CV): &quot;, format(CVResults[[length(CVResults)]]$StackResults$MAE, digits=4) , &quot;, std: &quot;, format(CVResults[[length(CVResults)]]$StackResults$MAESD, digits=4))

	sink()
}

if (&quot;Cross Validation Fit&quot; %in% Routput)
{ 
  # Plot fit of predicted versus observed
  png(filename = &quot;$(Routput22file)&quot;, width = $(RPlotWidth), height = $(RPlotHeight))
  $(RParScript)
	
  par(pty=&quot;s&quot;)
  plot(model.CV.obs, model.CV.pred, xlab=&quot;observed pChEMBL&quot;, ylab=&quot;predicted pChEMBL&quot;, bty=&quot;l&quot;, pch = 20, col = &quot;#FF5F5B&quot;,
	   xlim=c(min(model.CV.obs, model.CV.pred), max(model.CV.obs, model.CV.pred)), ylim=c(min(model.CV.obs, model.CV.pred), max(model.CV.obs, model.CV.pred)), main=&quot;Cross-Validated Fitted vs. Actual Values (training data)&quot;,
	   abline(coef = c(0,1), col = &quot;black&quot;, lty = 4))
  dev.off()


  # Plot residuals versus predicted values for a regression fit
  png(filename = &quot;$(Routput23file)&quot;, width = $(RPlotWidth), height = $(RPlotHeight))
  $(RParScript)
	
  par(pty=&quot;s&quot;)
  plot(model.CV.pred, model.CV.obs - model.CV.pred, xlab=&quot;predicted pChEMBL&quot;, ylab=&quot;Residual&quot;, bty=&quot;l&quot;, pch = 20, col = &quot;#FF5F5B&quot;,
	   ylim=c(-max(model.CV.obs - model.CV.pred, abs(min(model.CV.obs - model.CV.pred))), max(model.CV.obs - model.CV.pred, abs(min(model.CV.obs - model.CV.pred)))), main=&quot;Cross-Validated Residuals (training data)&quot;,
       abline(coef = c(0,0), col = &quot;black&quot;, lty = 4))

  dev.off()
}

if (&quot;Y-scrambling&quot; %in% Routput)
{
  # Create x
  x &lt;- matrix(NA, nrow = 0, ncol = 1)
  for (i in c(0,1:Partitions)){ x &lt;- rbind(x, c(i/Partitions))}

  # Create variable for the Rsquared values
  Rsquared &lt;- Y$Rsquared
  RsquaredSD &lt;- Y$RsquaredSD
  RMSE &lt;- Y$RMSE
  RMSESD &lt;- Y$RMSESD

  png(filename = &quot;$(Routput17file)&quot;, width = $(RPlotWidth), height = 400)
  $(RParScript)

  # Set margins
  par(mar = c(5,4,4,5))
    
  # First plot
  plot(c(min(x), max(x)), c(0, max(Rsquared)), type=&quot;n&quot;, main=&quot;Y-scrambling&quot;, cex = 1.3, xlab=&quot;fraction scrambled (%)&quot;, ylab=&quot;Rsquared&quot;,
       xlim=c(0, max(x)), ylim=c(0, max(Rsquared)))
  points(x, Rsquared, col=&quot;red&quot;, pch = 21)
  arrows(x, Rsquared-RsquaredSD, x, Rsquared+RsquaredSD, length=0.05, angle=90, code=3)
	
  # Second axis plot
  par(new = T)
  plot(c(min(x), max(x)), c(0, max(RMSE)), type=&quot;n&quot;, axes=F, xlab=NA, ylab=NA, cex=1.2, ylim=c(0, max(RMSE)))
  points(x, RMSE, col=&quot;blue&quot;, pch=21)
  axis(side = 4)
  mtext(side = 4, line = 3, &apos;RMSE&apos;)
  arrows(x, RMSE-RMSESD, x, RMSE+RMSESD, length=0.05, angle=90, code=3)
	
  # Add a legend 
  #legend(1.1, (0.95*max(RMSE)), c(&quot;Rsquared&quot;,&quot;RMSE&quot;), cex=0.8, col=c(&quot;red&quot;,&quot;blue&quot;), pch=21)
  dev.off()
}


# Write predictions (don&apos;t know why..) (for learn additional options)
preds &lt;- data.frame(StackBuild[[length(StackBuild)]]$StackPred)[,1]
write.table(preds, file=&quot;$(Routput7file)&quot;, sep=&quot;\t&quot;, col.names=T, row.names=F, quote=F, append=FALSE)

# Define xlevels to save with model (randomForest model does not have xlevels attribute)
xlevels &lt;- lapply(xy[-1], levels)
xlevels &lt;- xlevels[!sapply(xlevels, is.null)]

# Define preprocess used to save with model
PerformPreprocess &lt;- ModelBuild[[1]]$Details$StackPerformPreprocess
Process &lt;- ModelBuild[[1]]$Details$StackProcess

# Set &quot;model&quot; to something to supress error message in model component
model &lt;- &quot;This is to trick you&quot;
goodnames &lt;- xnames

if (SaveToSpecificFile){
  # Save model as an R object to a specific file
  save(model, Stacks, ModelBuild, PerformPreprocess, Process, xnames, goodnames, IsClassification, xlevels, file = SpecificFile)
}

# save model as an R object to a file
save(model, Stacks, ModelBuild, PerformPreprocess, Process, xnames, goodnames, IsClassification, xlevels, file = &quot;$(Rmodelfile)&quot;)</sci:value>
					</sci:arg>
					<sci:arg name="RFunctionsScript" type="TextType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>RFunctionsScript</sci:value>
								<sci:value>RFunctionsScript</sci:value>
								<sci:value>RFunctionsScript</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:value>###--Functions--
# Import Data
readAllData &lt;- function(yfile, xfile, outfile, IsClassification, doImputation = FALSE, MakeYFactor, 
                        YMustBeNumber, XMustBeNumber, omitNA = TRUE, removeZeroVar = TRUE, removeNearZeroVar = FALSE, 
                        nzvCutoff = NULL, RemoveCorrelated, CorCutoff, removeColinear = FALSE, colinearCutoff = 1){
  if (!is.null(yfile)){
    #read in y
    y &lt;- read.csv(yfile, comment.char=&quot;&quot;, blank.lines.skip=FALSE, na.strings=&quot;&quot;)
    
    #check if y has data
    if (length(y) == 0){
      stop(&quot;Error reading y data input file&quot;)
    }
    
    #convert from factor to numerical 
    if (is.factor(y[[1]]) &amp;&amp; !MakeYFactor){
      y[[1]] &lt;- FactorOrNumber(y[[1]])
      if (is.factor(y[[1]])) ylevels &lt;- levels(y[[1]])
    }
    
    #convert from numerical to factor
    if (YMustBeNumber &amp;&amp; !is.numeric(y[,1])){
      stop(&quot;The response property must be numeric.&quot;)
    }
    
    #calculate levels if needed
    if (MakeYFactor){
      y[[1]] &lt;- factor(y[[1]])
      ylevels &lt;- levels(y[[1]])
    } else{
      ylevels &lt;- NULL
    }
  }
  
  if (!is.null(xfile)){
    #read in x
    x &lt;- read.csv(xfile, comment.char=&quot;&quot;, blank.lines.skip=FALSE, na.strings=&quot;&quot;)
    x &lt;- as.data.frame(x)
    
    #list of all names to later compare with the names kept
    xbadnames &lt;- colnames(x)
    
    #check if x has data
    if (length(x) == 0)  {
      stop(&quot;Error reading x data input file&quot;)
    }
    
    #convert all factors to numbers if it should be numeric
    for (i in 1:ncol(x))
    {	
      if (is.factor(x[i]))
        x[i] &lt;- FactorOrNumber(x[i])
    }
    
    # remove parameters based on variance
    if(removeZeroVar){ 
      #remove zero variance parameters
      x &lt;- x[,!nearZeroVar(x, saveMetrics = TRUE)$zeroVar]
    } else if (removeNearZeroVar){
      #remove near zero variance parameters
      x &lt;- x[,!nearZeroVar(x, freqCut = nzvCutoff, saveMetrics = TRUE)$nzv]
    }
    
    #remove correlated columns
    if(RemoveCorrelated){
      #remove highly correlated features
      Correlated &lt;- findCorrelation(cor(x), cutoff = CorCutoff)
      if (length(Correlated) != 0) {
        x &lt;- x[Correlated]
      }
    }
    
    #remove all columns that are not numerical
    if (XMustBeNumber){
      numcols &lt;- sapply(x, is.numeric)
      x &lt;- x[, numcols, drop=FALSE]
    }
    
    
    # Remove any properties that are colinear with others
    if (removeColinear) {
      mycor &lt;- cor(apply(x, 2, as.numeric), check.names=FALSE, use=&quot;pairwise.complete.obs&quot;)
      diag(mycor) &lt;- 0
      mycor[lower.tri(mycor)] &lt;- 0
      
      x &lt;- x[!apply(abs(mycor) &gt;= colinearCutoff, 2, any)]
    }
    
    # get rid of any factors with &gt;= 32 levels
    x &lt;- x[as.vector(sapply(x, function(x) length(levels(x)))) &lt;= 31]
    
    #put the names of all removed columns here
    xbadnames &lt;- xbadnames[!(xbadnames %in% colnames(x))]
  }
  
  if (doImputation &amp;&amp; &quot;$(Imputation Method)&quot; == &quot;Model Imputation&quot; &amp;&amp; &quot;$(Imputation Model)&quot; == &quot;randomForest&quot;){
    isFactor &lt;- sapply(x, is.factor)
    colHasNA &lt;- which(sapply(x, function(x) any(is.na(x))))
    
    for (j in colHasNA) 
    {
      if (isFactor[j]) 
      {
        numvals &lt;- sum(is.na(xImp[[j]]))
        freq &lt;- table(xImp[[j]])
        
        # In case of tie for mode, randomly sample all tying values
        modevals &lt;- names(freq)[which(freq == max(freq))]
        if (length(modevals) &gt; 1)
          modevals &lt;- sample(modevals, numvals, replace=TRUE)
        
        xImp[[j]][is.na(xImp[[j]])] &lt;- modevals
      } else {
        med &lt;- median(xImp[[j]], na.rm = TRUE)
        xImp[[j]][is.na(xImp[[j]])] &lt;- med
      }
    }
    
    # Re-imputation using RF results
    # Uses same scheme as rfImpute function, which is not available in R 1.9.1
    iter &lt;- $(Imputation Iterations)
    for (i in 1:iter) 
    {
      impModel &lt;- randomForest(xImp, y, ntree=200, proximity=TRUE)
      prox &lt;- impModel$proximity
      
      for (j in colHasNA) {
        miss &lt;- which(is.na(x[, j]))
        
        if (isFactor[j]) {
          lvl &lt;- levels(x[[j]])
          catprox &lt;- apply(prox[-miss, miss, drop = FALSE], 2, function(v) lvl[which.max(tapply(v, x[[j]][-miss], mean))])
          xImp[miss, j] &lt;- catprox
        }
        else {
          sumprox &lt;- colSums(prox[-miss, miss, drop = FALSE])
          xImp[miss, j] &lt;- (prox[miss, -miss, drop = FALSE] %*% xImp[, j][-miss])/sumprox
        }
      }
    }
    x &lt;- xImp
  } else if(doImputation){
    stop(&quot;Selected Imputation Method is not yet implemented&quot;)
  }
  
  if (is.null(yfile)) {
    xy &lt;- x
  } else {
    xy &lt;- cbind(y,x)
  }
  
  if (!doImputation){
    # Omit records with NAs
    keep &lt;- complete.cases(xy)
    badrecords &lt;- (1:length(xy[[1]]))[!keep]
    if (length(badrecords) == 0) badrecords &lt;- &quot;none&quot;
    
    # Eliminate cases from xy and y where x or y is NA
    xy &lt;- xy[keep, , drop=FALSE]
    y &lt;- y[keep, , drop=FALSE]
    
    # Remove any factor levels that completely went away due to 
    # dropped cases; foo &lt;- factor(foo) has this effect
    for (ii in 1:ncol(xy)) 
    {
      if (is.factor(xy[[ii]])) xy[[ii]] &lt;- factor(xy[[ii]])
    }
    if (is.factor(y)) y &lt;- factor(y)
    
  } else {
    badrecords &lt;- &quot;none&quot;
  }
  
  if (!is.null(outfile))
  {
    # Write R version, x variables retained, and (non-varying) x variables excluded
    # into output file.
    ver &lt;- paste(version$major, &quot;.&quot;, version$minor, sep=&quot;&quot;)
    
    goodnames &lt;- names(x)
    badnames &lt;- xbadnames
    
    if (length(goodnames) == 0) goodnames &lt;- &quot; &quot;
    if (length(badnames) == 0) badnames &lt;- &quot; &quot;
    
    write(ver, file=outfile, ncolumns=length(ver), append = FALSE)
    write(goodnames, file=outfile, ncolumns=length(goodnames), append = TRUE)
    write(badnames, file=outfile, ncolumns=length(badnames), append = TRUE)
	write(badrecords, file=outfile, ncolumns=length(badrecords), append = TRUE)	
  }
  
  # alldata has $xy (the data), $ynames (y names), $xnames (x names) and $y (y values).
  AllData &lt;- list(xy=xy, y=y[[1]], ylevels=ylevels, ynames=names(y), xnames=colnames(x))
  return(AllData)
}


# Gets parameter value out of a matrix with two columns
# one column has the name of the global where it ends on a string
# the other has the value
GetParam &lt;- function(Globals, endOfString){
  endOfString &lt;- paste(&apos;.*&apos;, endOfString, &apos;$&apos;, sep = &apos;&apos;)
  param &lt;- Globals[grep(endOfString, Globals[,1]), 2]
  return(param)
}

# Get column names with the corresponding featureList bitstring
ClassToFeature &lt;- function(xnames, string, featureList, featureMask){	
  features &lt;- xnames[featureMask %in% featureList[string == 1]]
  return(features)
}

# Build Model
buildModel &lt;- function(xy, xnames, ModelList, IsClassification, overrideArgs = FALSE){
  # Update data
  xy &lt;- cbind(xy[1], xy[-1][xnames])

  TypeOfModel &lt;- ModelList$TypeOfModel
  model.args &lt;- ModelList$args

  #update mtry due to new set of descriptors
  if (overrideArgs &amp;&amp; (TypeOfModel == &quot;randomForest&quot; || TypeOfModel == &quot;ranger&quot; || TypeOfModel == &quot;extraTrees&quot;)){
	model.args$mtry &lt;- floor(sqrt(length(xnames)))
    if (ModelList$extraInf$mtrySet == &quot;Log2(D)&quot;) {
	  model.args$mtry &lt;- ceiling(log2(length(xnames)))
    } else if (ModelList$extraInf$mtrySet == &quot;Specified Fraction&quot;) {
	  model.args$mtry &lt;- ceiling(ModelList$extraInf$mtryFrac * length(xnames))
    }
  }

  if (overrideArgs &amp;&amp; TypeOfModel == &quot;pls&quot;){
	model.args$ncomp &lt;- min(model.args$ncomp, nrow(xy[-1]) - 1, ncol(xy[-1]))
  }



  # Add formula and data to arguments
  if(TypeOfModel == &quot;randomForest&quot; || TypeOfModel == &quot;ranger&quot; || TypeOfModel == &quot;pls&quot;){
    model.args &lt;- c(list(formula = as.matrix(xy[1]) ~ ., data = xy[-1]), model.args)
  } else if (TypeOfModel == &quot;extraTrees&quot;){
    model.args &lt;- c(list(x = xy[-1], y = as.matrix(xy[1])), model.args)
  } else if (TypeOfModel == &quot;xgboost&quot;){
    xy &lt;- as.data.frame(xy)
    model.args &lt;- c(list(data = xgb.DMatrix(data = as.matrix(xy[-1]), label = as.matrix(xy[1]))), model.args)
  }
  
  # Build model
  model &lt;- NULL

  if(TypeOfModel == &quot;randomForest&quot;){
    # Build the model
    model &lt;- do.call(randomForest, args = model.args)
  } else if (TypeOfModel == &quot;ranger&quot;){
    # Build the model
    model &lt;- do.call(ranger, args = model.args)
  } else if (TypeOfModel == &quot;extraTrees&quot;){
    # Build the model
    model &lt;- do.call(extraTrees, args = model.args)
  } else if (TypeOfModel == &quot;xgboost&quot;){
    #Build the model
    model &lt;- do.call(xgb.train, args = model.args)
  } else if (TypeOfModel == &quot;pls&quot;){
    if (IsClassification){
      #TODO
    } else {
      model &lt;- do.call(plsr, args = model.args)
	}
  }
  
  if (length(model) == 0){
    stop(&quot;Error fitting model&quot;)
    geterrmessage()
  }
  
  if(TypeOfModel == &quot;pls&quot;){
    #delete some stuff from the model before saving it; this will significantly reduce the size of the binary file
    model$training$Ypred&lt;-NULL #dependent on number of trainings samples
    model$training$Xscores&lt;-NULL #relatively big
    model$training$Xload&lt;-NULL #dependent on number of variables
    model$training$Yscores&lt;-NULL #dependent on number of trainings samples
    model$training$Yload&lt;-NULL #not a big one at all
    model$validat$Ypred&lt;-NULL #dependent on number of trainings samples
  
    # New style models
    model$scores &lt;- NULL
    model$loadings &lt;- NULL
    model$projection &lt;- NULL
    model$loading.weights &lt;- NULL
    model$fitted.values &lt;- NULL
  } else if (TypeOfModel == &quot;extraTrees&quot;){
    prepareForSave(model)
  } else if (TypeOfModel == &quot;xgboost&quot;){
    model &lt;- xgb.save.raw(model)
  }
  return(model)
}

# Get a prediction for the build model
PredictForModel &lt;- function(x, xnames, model, TypeOfModel, IsClassification){
  if (TypeOfModel == &quot;xgboost&quot;){
    modelForPred &lt;- xgb.load(model)
  }

  # Init
  pred &lt;- NULL
  x &lt;- x[,xnames, drop = F]
  x &lt;- as.matrix(x, drop = F)
  
  # Predict for model
  if (TypeOfModel == &quot;randomForest&quot;){
    pred &lt;- predict(model, x, type=&quot;response&quot;)
    predall &lt;- predict(model, x, type=&quot;response&quot;, predict.all=TRUE)$individual
    
    if (IsClassification) {
      predprob &lt;- predict(model, x, type=&quot;prob&quot;)
      ginis &lt;- apply(predall, 1, function(x) {tab &lt;- table(x); 1 - sum((tab / sum(tab))^2);})
    } else {
      stddevs &lt;- apply(predall, 1, sd)
    }
  } else if (TypeOfModel == &quot;ranger&quot;){
    pred &lt;- predict(model, x, type=&quot;response&quot;)$predictions
    predall &lt;- predict(model, x, type=&quot;response&quot;, predict.all=TRUE)$predictions
    if (IsClassification) {
      predprob &lt;- predict(model, x, type=&quot;prob&quot;)
      ginis &lt;- apply(predall, 1, function(x) {tab &lt;- table(x); 1 - sum((tab / sum(tab))^2);})
    } else {
      stddevs &lt;- apply(predall, 1, sd)
    }
  } else if (TypeOfModel == &quot;extraTrees&quot;){
    pred &lt;- predict(model, x)
    predall &lt;- predict(model, x, allValues=TRUE)
    if (IsClassification) {
      predprob &lt;- predict(model, x, probability = TRUE)
      ginis &lt;- apply(predall, 1, function(x) {tab &lt;- table(x); 1 - sum((tab / sum(tab))^2);})
    } else {
      stddevs &lt;- apply(predall, 1, sd)
    }
  } else if (TypeOfModel == &quot;pls&quot;){
    #attach the model to the path so we can look at the number of components ncomp
    NumberOfVariables &lt;- model$ncomp
    
    pred &lt;- predict(model, x, NumberOfVariables)  # NumberOfVariables defined in boilerplate script
  } else if (TypeOfModel == &quot;xgboost&quot;){
    pred &lt;- predict(object=modelForPred, newdata=x)
    if (IsClassification){
      predprobs &lt;- matrix(X, nrow=nrow(x), byrow=TRUE)
      ginis &lt;- apply(predall, 1, function(x) {tab &lt;- table(x); 1 - sum((tab / sum(tab))^2);})
      predclass &lt;- ylevels[max.col(probs)]
      
      colnames(probs) &lt;- ylevels
    }
  }

  if (length(pred) == 0)
  {
    stop(&quot;Error predicting with R model&quot;)
    geterrmessage()
  }
  
  if (TypeOfModel == &quot;randomForest&quot; || TypeOfModel == &quot;ranger&quot; || TypeOfModel == &quot;extraTrees&quot; || TypeOfModel == &quot;xgboost&quot;){
    # output prediction results to a file
    
    if (IsClassification) {
      overrideCutoff &lt;- FALSE
      cutoff &lt;- 0.0
      prefClass &lt;- &quot;&quot;
      
      $(STRProtectedSection)
      
      if (overrideCutoff) {
        if (!any(tolower(model$classes) == prefClass)) stop(paste(&quot;Preferred class \&quot;&quot;, prefClass, &quot;\&quot; not found.&quot;, sep=&quot;&quot;))
        prefIndex &lt;- which(tolower(model$classes) == prefClass)
        
        prefWinner &lt;- predprob[,prefIndex] &gt;= cutoff
        prefLoser &lt;- predprob[,prefIndex] &lt; cutoff
        pred[prefWinner] &lt;- model$classes[prefIndex] # use this rather than preClass to retain case
        
        if (any(pred[prefLoser] == prefClass)) {
          tmpprob &lt;- predprob
          tmpprob[,prefIndex] &lt;- -9e99
          winners &lt;- apply(tmpprob, 1, which.max)
          pred[prefLoser] &lt;- model$classes[winners[prefLoser]]
        }
      }
      
      pred &lt;- data.frame(X=pred, Gini=ginis, predprob, check.names=FALSE)
    } else {
      if (!(TypeOfModel == &quot;xgboost&quot;)){
        pred &lt;- data.frame(X=pred, StdDev=stddevs)
      } else {
        pred &lt;- data.frame(X=pred)
      }
    }
  } else if (TypeOfModel == &quot;pls&quot;){ 
    predNames &lt;- &quot;X&quot;
    if (length(NumberOfVariables) &gt; 1) 
      predNames &lt;- paste(&quot;X&quot;, 1:length(NumberOfVariables), sep=&quot;&quot;)
    
    pred &lt;- data.frame(matrix(pred[,1,], ncol=length(NumberOfVariables)))
    names(pred) &lt;- predNames
  }
  
  return(pred)
}

# Create Prediction objects to be used for single prediction analysis
CreatePredictor &lt;- function(Model, xy, xnames, TypeOfModel, IsClassification = FALSE){
  x &lt;- xy[-1]
  y &lt;- xy[1]
  x &lt;- x[,xnames, drop = F]
  x &lt;- as.data.frame(x, drop = F)

  if (TypeOfModel == &quot;randomForest&quot;){
    if (IsClassification){
      pred &lt;- function(model, newdata){
      results &lt;- as.data.frame(predict(model, newdata, type=&quot;prob&quot;))
      return(results)
      }
    } else {
      pred &lt;- function(model, newdata){
      results &lt;- as.data.frame(predict(model, newdata, type=&quot;response&quot;))
      return(results)
      }
    }
  } else if (TypeOfModel == &quot;ranger&quot;){
    if (IsClassification){
      pred &lt;- function(model, newdata){
      results &lt;- as.data.frame(predict(model, newdata, type=&quot;prob&quot;)$predictions)
      return(results)
      }
    } else {
      pred &lt;- function(model, newdata){
      results &lt;- as.data.frame(predict(model, newdata, type=&quot;response&quot;)$predictions)
      return(results)
      }
    }
  } else if (TypeOfModel == &quot;extraTrees&quot;){
    pred &lt;- function(model, newdata){
    results &lt;- as.data.frame(predict(model, newdata))
    return(results)
    }
  } else if (TypeOfModel == &quot;pls&quot;){ 
    pred &lt;- function(model, newdata){
    NumberOfVariables &lt;- model$ncomp
    results &lt;- as.data.frame(predict(model, newdata, NumberOfVariables))
    return(results)
    }
  } else if (TypeOfModel == &quot;xgboost&quot;){
    pred &lt;- function(model, newdata){
    model &lt;- xgb.load(model)
    results &lt;- as.data.frame(predict(object=model, newdata=as.matrix(newdata)))
    return(results)
    }
  }

  predictor &lt;- Predictor$new(
  model = Model,
  data = as.data.frame(x),
  y = y, #as.numeric(y),
  predict.fun = pred,
  class = if(IsClassification){&quot;classification&quot;}else{&quot;regression&quot;}
  )
  
  return(predictor)
}

# Build Stack
buildStack &lt;- function(xy, xnames, StackList, IsClassification, PreBuildStack = NULL){ 
  # Update data
  xy &lt;- cbind(xy[1], xy[-1][xnames])
  # init
  toremove &lt;- &quot;&quot;
  BuildStacks &lt;- list(NULL)

  # For each fold
  for (i in 1:length(StackList)){
    BuildStacks[[i]] &lt;- list()
    names(BuildStacks)[length(BuildStacks)] &lt;- paste(&quot;Stack&quot;, i, sep = &quot;&quot;)
    
	# Check if prebuildStack includes current stack
    if(!is.null(PreBuildStack)){
	  if (length(PreBuildStack) &lt; i){
		PreBuildStack &lt;- NULL
	  }
	}

	#For each model
    if (StackList[[i]]$Details$Goal == &quot;Ensemble Stack&quot; || StackList[[i]]$Details$Goal == &quot;Keep All Predictions&quot;){
      for (j in 2:length(StackList[[i]])){
		# Check if model was already created
		if (is.null(PreBuildStack)){
          BuildStacks[[i]] &lt;- append(BuildStacks[[i]], list(list(Model = buildModel(xy, StackList[[i]][[j]]$Features, ModelList = StackList[[i]][[j]], IsClassification), 
                                                               TypeOfModel = StackList[[i]][[j]]$TypeOfModel, Features = StackList[[i]][[j]]$Features)))
		} else {
		  BuildStacks[[i]] &lt;- append(BuildStacks[[i]], list(list(Model = PreBuildStack[[i]][[j-1]]$Model, TypeOfModel = PreBuildStack[[i]][[j-1]]$TypeOfModel, Features = PreBuildStack[[i]][[j-1]]$Features)))
		}
        names(BuildStacks[[i]])[length(BuildStacks[[i]])] &lt;- paste(&quot;Model&quot;, j-1, sep = &quot;&quot;)
        BuildStacks[[i]][[j-1]] &lt;- append(BuildStacks[[i]][[j-1]], list(Predictions = as.matrix(PredictForModel(xy, BuildStacks[[i]][[j-1]]$Features, model = BuildStacks[[i]][[j-1]]$Model, 
																												TypeOfModel = BuildStacks[[i]][[j-1]]$TypeOfModel, 
																												IsClassification))))
		if (&quot;Single Prediction Analysis&quot; %in% unlist(c(strsplit(&quot;$(Learn Options)&quot;, &quot;,&quot;)))){
          BuildStacks[[i]][[j-1]] &lt;- append(BuildStacks[[i]][[j-1]], list(Predictor = CreatePredictor(BuildStacks[[i]][[j-1]]$Model, xy, BuildStacks[[i]][[j-1]]$Features, 
																									  TypeOfModel = BuildStacks[[i]][[j-1]]$TypeOfModel, IsClassification = IsClassification)))
		}
      }
	
	  if (StackList[[i]]$Details$Goal == &quot;Keep All Predictions&quot;){
	    # Get all made predictions and keep them to be used as features in the following stack
	    StackPredictions &lt;- lapply(BuildStacks[[i]], function(x) {
													 if (!is.null(names(x)) &amp;&amp; !is.na(names(x)) &amp;&amp; length(grep(&apos;.*Predictions$&apos;, names(x))) &gt; 0 ){x[[grep(&apos;.*Predictions$&apos;, names(x))]]}})
	    SavedColNames &lt;- paste(&quot;Stack&quot;, i, rep(names(StackPredictions), unlist(lapply(StackPredictions, function(x) length(x[1,])))), unlist(lapply(StackPredictions, function(x) colnames(x))), sep = &quot;&quot;)
	    StackPredictions &lt;- matrix(unlist(StackPredictions), nrow = length(xy[,1]))
	    colnames(StackPredictions) &lt;- SavedColNames
		BuildStacks[[i]] &lt;- append(BuildStacks[[i]], list(StackPred = StackPredictions))
	  } else if (StackList[[i]]$Details$Goal == &quot;Ensemble Stack&quot;){
	    # Get all made predictions and take the mean and sd for the ensembled stack predictions
	    StackPredictions &lt;- lapply(BuildStacks[[i]], function(x) {
							                         if (!is.null(names(x)) &amp;&amp; !is.na(names(x)) &amp;&amp; length(grep(&apos;.*Predictions$&apos;, names(x))) &gt; 0 ){x[[grep(&apos;.*Predictions$&apos;, names(x))]][,1]}})
	    StackPredictions &lt;- matrix(unlist(StackPredictions), ncol = length(grep(&apos;.*Model.*&apos;, names(BuildStacks[[i]]))))
        StackPred &lt;- cbind(apply(StackPredictions, 1, function(x) mean(x)), apply(StackPredictions, 1, function(x) sd(x)))
	    colnames(StackPred) &lt;- c(paste(&quot;stack&quot;, i, &quot;Pred&quot;, sep  = &quot;&quot;), paste(&quot;stack&quot;, i, &quot;StdDev&quot;, sep  = &quot;&quot;))
	    BuildStacks[[i]] &lt;- append(BuildStacks[[i]], list(StackPred = StackPred))
	  }
    } else if (StackList[[i]]$Details$Goal == &quot;Keep Best Model&quot;){
	  # Check if best model was already determined, otherwise give error
	  if (length(StackList[[i]]) &gt; 2 &amp;&amp; is.null(StackList[[i]]$Details$BestModel)){
		stop(&quot;Best Model has not been determined yet&quot;)
	  } else if (length(StackList[[i]]) == 2){
		StackList[[i]]$Details$BestModel &lt;- 2
	  }
	  if (is.null(PreBuildStack)){
		BuildStacks[[i]] &lt;- list(list(Model = buildModel(xy, StackList[[i]][[StackList[[i]]$Details$BestModel]]$Features, ModelList = StackList[[i]][[StackList[[i]]$Details$BestModel]], IsClassification), 
                                      TypeOfModel = StackList[[i]][[StackList[[i]]$Details$BestModel]]$TypeOfModel, Features = StackList[[i]][[StackList[[i]]$Details$BestModel]]$Features))
        names(BuildStacks[[i]])[length(BuildStacks[[i]])] &lt;- &quot;BestModel&quot;
	  } else {
		BuildStacks[[i]] &lt;- append(BuildStacks[[i]], list(list(Model = PreBuildStack[[i]][[1]]$Model, TypeOfModel = PreBuildStack[[i]][[1]]$TypeOfModel, Features = PreBuildStack[[i]][[1]]$Features)))
		names(BuildStacks[[i]])[length(BuildStacks[[i]])] &lt;- &quot;BestModel&quot;
	  }
      names(BuildStacks[[i]])[length(BuildStacks[[i]])] &lt;- &quot;BestModel&quot;
      BuildStacks[[i]][[1]] &lt;- append(BuildStacks[[i]][[1]], list(Predictions = as.matrix(PredictForModel(xy, BuildStacks[[i]][[1]]$Features, model = BuildStacks[[i]][[1]]$Model, 
																										  TypeOfModel = BuildStacks[[i]][[1]]$TypeOfModel, 
																										  IsClassification))))
	  if (&quot;Single Prediction Analysis&quot; %in% unlist(c(strsplit(&quot;$(Learn Options)&quot;, &quot;,&quot;)))){
        BuildStacks[[i]][[1]] &lt;- append(BuildStacks[[i]][[1]], list(Predictor = CreatePredictor(BuildStacks[[i]][[1]]$Model, xy, BuildStacks[[i]][[1]]$Features, 
																								TypeOfModel = BuildStacks[[i]][[1]]$TypeOfModel, IsClassification = IsClassification)))
	  }
	  StackPred &lt;- BuildStacks[[i]][[1]]$Predictions
	  colnames(StackPred) &lt;- paste(&quot;stack&quot;, i, colnames(BuildStacks[[i]][[1]]$Predictions), sep  = &quot;&quot;)
	  BuildStacks[[i]] &lt;- append(BuildStacks[[i]], list(StackPred = StackPred))
    }

	# Write predictions to xy and xnames for further stacks to use
	xy &lt;- cbind(xy[1], xy[-1][xnames[!(xnames %in% toremove)]], BuildStacks[[i]]$StackPred)
	xnames &lt;- c(xnames[!(xnames %in% toremove)], colnames(BuildStacks[[i]]$StackPred))
	toremove &lt;- colnames(BuildStacks[[i]]$StackPred)
  }

  return(BuildStacks)
}



# Caret R squared function (to keep it similar)
Rsq &lt;- function(pred, obs, formula = &quot;corr&quot;, na.rm = FALSE) {
    n &lt;- sum(complete.cases(pred))
    switch(formula,
           corr = cor(obs, pred, use = ifelse(na.rm, &quot;complete.obs&quot;, &quot;everything&quot;))^2,
           traditional = 1 - (sum((obs-pred)^2, na.rm = na.rm)/((n-1)*var(obs, na.rm = na.rm))))
  }

# Predict cross validation results
DoCV &lt;- function(xy, xnames, ModelList, PreCV = NULL, PreCVCases = NULL, AsPreCV = FALSE, 
                 savePredicted = FALSE, Folds = 10, Repeats = 1, overrideArgs = FALSE) {
  # To keep all subsequent CVs constant
  set.seed($(Seed))

  # Make cases per repeat or load them from the PreCVCases
  if (is.null(PreCVCases)){
	flds &lt;- createMultiFolds(xy[,1], k = Folds, times = Repeats)
  } else {
    flds &lt;- PreCVCases
  }

  # Reset seed so that after fold generation it will stay constant
  set.seed($(Seed))

  # Update data
  if (is.null(PreCV)){
	xy &lt;- cbind(xy[1], xy[-1][,xnames, drop = F])
  } else {
	xy &lt;- cbind(xy[1], xy[-1][,xnames[!(xnames %in% colnames(PreCV[[1]][[1]]))], drop = F])
  }

  # Init results
  results &lt;- list(method = paste(Folds, &quot;-Fold Cross Validation with &quot;, Repeats, &quot; repeat(s)&quot;, sep = &quot;&quot;), repeats = NULL, 
                  Observations = xy[1], Predictions = NULL, Rsquared = NULL, RMSE = NULL, MAE = NULL, RsquaredSD = NULL, 
                  RMSESD = NULL, MAESD = NULL)
  toremove &lt;- NULL
  predsCV &lt;- NULL

  # Write down observations
  obs &lt;- xy[1]

  for (i in 1:Repeats){
    # Init Predicted
    preds &lt;- matrix(NA, nrow = nrow(xy[,1,drop = F]), ncol = 1)

    # Add repeat index in list with name repeat i
    results$repeats[[i]] &lt;- list(folds = NULL, Predictions = NULL)
    names(results$repeats)[length(results$repeats)] &lt;- paste(&quot;Repeat&quot;, i, sep = &quot;&quot;)

    for (ii in 1:Folds){
      # Init Folds
      results$repeats[[i]]$folds[[ii]] &lt;- list(Rsquared = NULL, RMSE = NULL, MAE = NULL)
      names(results$repeats[[i]]$folds)[length(results$repeats[[i]]$folds)] &lt;- paste(&quot;fold&quot;, ii, sep = &quot;&quot;)
      
      model &lt;- NULL

	  if (!is.null(PreCV)){
	    if (Repeats &gt; length(PreCV)){
	  	  stop(&quot;Supplied PreCV predictions do not contain enough repeats for this CV&quot;)
	    } else if (Folds != length(PreCV[[1]])){
	  	  stop(&quot;Supplied PreCV predictions do not contain enough folds for this CV&quot;)
		}

		# Update data
		if (is.null(PreCV)){
		  xy &lt;- cbind(xy[1], xy[-1][,xnames[!(xnames %in% toremove)],drop = F], PreCV[[i]][[ii]])
		} else {
		  xy &lt;- cbind(xy[1], xy[-1][,!(xnames[!(xnames %in% colnames(PreCV[[1]][[1]]))] %in% toremove), drop = F], PreCV[[i]][[ii]])
		}
	    toremove &lt;- colnames(PreCV[[i]][[ii]])
	  } 

      # Determine all cases not in fold
	  cases &lt;- 1:length(xy[,1]) %in% flds[[ii+(i-1)*Folds]]

      # Build model on all cases
      model &lt;- buildModel(xy[cases,,drop = F], xnames = ModelList$Features, ModelList = ModelList, IsClassification = IsClassification, overrideArgs = overrideArgs)

      # Predict for all samples not in cases
	  if (!(AsPreCV)){
	    PredictedFold &lt;- PredictForModel(xy[!cases,-1, drop = F], ModelList$Features, model = model, TypeOfModel = ModelList$TypeOfModel, IsClassification)
	  } else {
		Predicted &lt;- PredictForModel(xy[,-1, drop = F], ModelList$Features, model = model, TypeOfModel = ModelList$TypeOfModel, IsClassification)
		predsCV[[i]] &lt;- append(predsCV[[i]], list(matrix(unlist(Predicted), nrow = length(xy[,1]))))
		colnames(predsCV[[i]][[ii]]) &lt;- colnames(Predicted)
		names(predsCV[[i]])[ii] &lt;- paste(&quot;fold&quot;, ii, sep = &quot;&quot;)
		PredictedFold &lt;- Predicted[!cases,,drop = F]
	  }

	  if(sum(is.na(preds)) == nrow(xy[,1,drop = F]) &amp;&amp; ncol(preds) == 1){
		if (ncol(PredictedFold) != 1){
		  preds &lt;- matrix(NA, nrow = nrow(xy[,1,drop = F]), ncol = ncol(PredictedFold))
		}
	  }

	  if (is.null(colnames(preds))){
		colnames(preds) &lt;- paste(&quot;Repeat&quot;, i, colnames(PredictedFold), sep = &quot;&quot;)
	  }
	  preds[!cases, ] &lt;- unlist(PredictedFold)

	  # Write results
	  results$repeats[[i]]$folds[[ii]]$Rsquared &lt;- Rsq(preds[!cases,1], obs[!cases,], formula = &quot;corr&quot;) #cor(preds[!cases,1], obs[!cases,], method=&quot;pearson&quot;)^2
	  results$repeats[[i]]$folds[[ii]]$RMSE &lt;- sqrt(mean((preds[!cases,1] - obs[!cases,])^2))
	  results$repeats[[i]]$folds[[ii]]$MAE &lt;- mean(abs(preds[!cases,1] - obs[!cases,]))
    }
    
	# Remember predictions of the non-cases
    if (savePredicted){
      results$repeats[[i]]$Predictions &lt;- preds
    }
	if (AsPreCV){
	  names(predsCV)[i] &lt;- paste(&quot;repeat&quot;, i, sep = &quot;&quot;)
	}
  }
  
  # Gather all statistics of all folds of every repeat
  AllRsquared &lt;- unlist(lapply(results$repeats, function(x) lapply(x, function(x) lapply(x, function(x) {
    if (!is.null(names(x)) &amp;&amp; !is.na(names(x)) &amp;&amp; grep(&apos;.*Rsquared$&apos;, names(x)) &gt; 0 ){x[[grep(&apos;.*Rsquared$&apos;, names(x))]]}}))))
  AllRMSE &lt;- unlist(lapply(results$repeats, function(x) lapply(x, function(x) lapply(x, function(x) {
    if (!is.null(names(x)) &amp;&amp; !is.na(names(x)) &amp;&amp; grep(&apos;.*RMSE$&apos;, names(x)) &gt; 0 ){x[[grep(&apos;.*RMSE$&apos;, names(x))]]}}))))
  AllMAE &lt;- unlist(lapply(results$repeats, function(x) lapply(x, function(x) lapply(x, function(x) {
    if (!is.null(names(x)) &amp;&amp; !is.na(names(x)) &amp;&amp; grep(&apos;.*MAE$&apos;, names(x)) &gt; 0 ){x[[grep(&apos;.*MAE$&apos;, names(x))]]}}))))

  # Write the predictions of each repeat into a matrix for later 
  if (savePredicted){
    preds &lt;- lapply(results$repeats, function(x){
      if (!is.null(names(x)) &amp;&amp; !is.na(names(x)) &amp;&amp; length(grep(&apos;.*Predictions$&apos;, names(x))) &gt; 0 ){x[[grep(&apos;.*Predictions$&apos;, names(x))]]}})
	preds &lt;- matrix(unlist(lapply(preds, function(x) x[,1])), ncol = Repeats)
    preds &lt;- apply(preds, 1, function(x) mean(x))
  } else {
    preds &lt;- NULL
  }

  if (!AsPreCV){
	flds &lt;- NULL
  }
  
  # Write out results
  results &lt;- list(method = results$method, PreCV = list(Predictions = predsCV, Cases = flds), repeats = results$repeats, 
				  Observations = xy[1], Predictions = preds, Rsquared = mean(AllRsquared), RMSE = mean(AllRMSE), MAE = mean(AllMAE), 
                  RsquaredSD = sd(AllRsquared), RMSESD = sd(AllRMSE), MAESD = sd(AllMAE))

  
  return(results)
}

# Build CV Stack
buildCVStack &lt;- function(xy, xnames, StackList, IsClassification, Folds = 10, Repeats = 1, PreBuildCVStack = NULL, overrideArgs = FALSE){
  # To keep all subsequent CVs constant
  set.seed($(Seed))

  # init
  toremove &lt;- &quot;&quot;
  CVStacks &lt;- list(NULL)
  preCV &lt;- NULL
  flds &lt;- createMultiFolds(xy[,1], k = Folds, times = Repeats)

  # Update data
  xy &lt;- cbind(xy[1], xy[-1][xnames])

  # For each Stack
  for (i in 1:length(StackList)){
    CVStacks[[i]] &lt;- list()
    names(CVStacks)[length(CVStacks)] &lt;- paste(&quot;Stack&quot;, i, sep = &quot;&quot;)

	# Check if prebuildStack includes current stack
    if(!is.null(PreBuildCVStack)){
	  if (length(PreBuildCVStack) &lt; i){
		PreBuildCVStack &lt;- NULL
	  }
	}

    if (StackList[[i]]$Details$Goal == &quot;Ensemble Stack&quot; || StackList[[i]]$Details$Goal == &quot;Keep All Predictions&quot;){
	  #For each model
      for (j in 2:length(StackList[[i]])){
		# Check if model was already created
		if (is.null(PreBuildCVStack)){
		  CVres &lt;- DoCV(xy, xnames = StackList[[i]][[j]]$Features, ModelList = StackList[[i]][[j]], PreCV = preCV, PreCVCases = flds, AsPreCV = TRUE, savePredicted = TRUE, 
						Folds = Folds, Repeats = Repeats, overrideArgs = overrideArgs)
          CVStacks[[i]] &lt;- append(CVStacks[[i]], list(list(Results = CVres[c(&quot;Rsquared&quot;, &quot;RMSE&quot;, &quot;MAE&quot;, &quot;RsquaredSD&quot;, &quot;RMSESD&quot;, &quot;MAESD&quot;)], preCV = CVres$PreCV$Predictions, 
																		  PredictionsFinal = CVres$Predictions)))
		} else {
		  CVStacks[[i]] &lt;- append(CVStacks[[i]], list(PreBuildCVStack[[i]][[j-1]]))
		}
        names(CVStacks[[i]])[length(CVStacks[[i]])] &lt;- paste(&quot;Model&quot;, j-1, sep = &quot;&quot;)
      }

	  if (StackList[[i]]$Details$Goal == &quot;Keep All Predictions&quot;){
	    # Get all made predictions and take the mean and sd for the ensembled stack predictions to use in further cross validations
	    StackpreCV &lt;- lapply(CVStacks[[i]], function(x) {
							  if (!is.null(names(x)) &amp;&amp; !is.na(names(x)) &amp;&amp; length(grep(&apos;.*preCV$&apos;, names(x))) &gt; 0 ){x[[grep(&apos;.*preCV$&apos;, names(x))]]}})
		SavedColNames &lt;- lapply(StackpreCV, function(x){colnames(x[[1]][[1]])})
		SavedColNames &lt;- paste(&quot;Stack&quot;, i, rep(names(SavedColNames), unlist(lapply(SavedColNames, function(x) length(x)))), unlist(SavedColNames), sep = &quot;&quot;)
	    for (kk in 1:length(StackpreCV[[1]])){
		  for (kkk in 1:length(StackpreCV[[1]][[kk]])){
		    comb &lt;- NULL
		    for (k in 1:length(StackpreCV)){
			  comb &lt;- cbind(comb, StackpreCV[[k]][[kk]][[kkk]])
		    }
		    StackpreCV[[1]][[kk]][[kkk]] &lt;- comb
	        colnames(StackpreCV[[1]][[kk]][[kkk]]) &lt;- SavedColNames
		  }
	    }
		StackpreCV &lt;- StackpreCV[[1]]
	    preCV &lt;- StackpreCV

	    # Save to list
	    CVStacks[[i]] &lt;- append(CVStacks[[i]], list(StackPreCV = preCV))

	  } else if (StackList[[i]]$Details$Goal == &quot;Ensemble Stack&quot;){
	    # Get all made predictions and take the mean and sd for the ensembled stack predictions to use in further cross validations
	    StackpreCV &lt;- lapply(CVStacks[[i]], function(x) {
							  if (!is.null(names(x)) &amp;&amp; !is.na(names(x)) &amp;&amp; length(grep(&apos;.*preCV$&apos;, names(x))) &gt; 0 ){x[[grep(&apos;.*preCV$&apos;, names(x))]]}})
	    StackpreCV &lt;- lapply(StackpreCV, function(x) lapply(x, function(x) lapply(x, function(x){x[,1,drop = F]})))

	    for (kk in 1:length(StackpreCV[[1]])){
		  for (kkk in 1:length(StackpreCV[[1]][[kk]])){
		    comb &lt;- NULL
		    for (k in 1:length(StackpreCV)){
			  comb &lt;- cbind(comb, StackpreCV[[k]][[kk]][[kkk]])
		    }
		    StackpreCV[[1]][[kk]][[kkk]] &lt;- cbind(apply(comb, 1, function(x) mean(x)), apply(comb, 1, function(x) sd(x)))
	        colnames(StackpreCV[[1]][[kk]][[kkk]]) &lt;- c(paste(&quot;stack&quot;, i, &quot;Pred&quot;, sep  = &quot;&quot;), paste(&quot;stack&quot;, i, &quot;StdDev&quot;, sep  = &quot;&quot;))
		  }
	    }
	    StackpreCV &lt;- StackpreCV[[1]]
	    preCV &lt;- StackpreCV

	    # Use preCV to calculate final stack Rsq, RMSE and MAE
	    foldpreds &lt;- lapply(preCV, function(x) lapply(x, function(x) {x[,1]}))
	    foldpreds &lt;- matrix(unlist(foldpreds), ncol = length(unlist(foldpreds, recursive = F)))
	    lapplyIndex &lt;- 0
	    StackResults &lt;- lapply(flds, function(x){lapplyIndex &lt;&lt;- lapplyIndex + 1
										    cases &lt;- !(1:length(xy[,1]) %in% x)
										    list(Rsquared = Rsq(foldpreds[cases,lapplyIndex], xy[cases,1], formula = &quot;corr&quot;),
											     RMSE = sqrt(mean((foldpreds[cases,lapplyIndex] - xy[cases,1])^2)),
											     MAE = mean(abs(foldpreds[cases,lapplyIndex] - xy[cases,1])))})

	    # Gather all statistics of all folds of every repeat
	    AllRsquared &lt;- unlist(lapply(StackResults, function(x) {
		  if (!is.null(names(x)) &amp;&amp; !is.na(names(x)) &amp;&amp; grep(&apos;.*Rsquared$&apos;, names(x)) &gt; 0 ){x[[grep(&apos;.*Rsquared$&apos;, names(x))]]}}))
	    AllRMSE &lt;- unlist(lapply(StackResults, function(x) {
		  if (!is.null(names(x)) &amp;&amp; !is.na(names(x)) &amp;&amp; grep(&apos;.*RMSE$&apos;, names(x)) &gt; 0 ){x[[grep(&apos;.*RMSE$&apos;, names(x))]]}}))
	    AllMAE &lt;- unlist(lapply(StackResults, function(x) {
		  if (!is.null(names(x)) &amp;&amp; !is.na(names(x)) &amp;&amp; grep(&apos;.*MAE$&apos;, names(x)) &gt; 0 ){x[[grep(&apos;.*MAE$&apos;, names(x))]]}}))
	  

	    # Get the average of the final predictions made
	    StackPredictions &lt;- lapply(CVStacks[[i]], function(x) {
							  if (!is.null(names(x)) &amp;&amp; !is.na(names(x)) &amp;&amp; length(grep(&apos;.*preCV$&apos;, names(x))) &gt; 0 ){x[[grep(&apos;.*PredictionsFinal$&apos;, names(x))]]}})
	    StackPredictions &lt;- matrix(unlist(StackPredictions), ncol =(length(StackList[[i]])-1))
	    StackPredictions &lt;- cbind(apply(StackPredictions, 1, function(x) mean(x)), apply(StackPredictions, 1, function(x) sd(x)))
	    colnames(StackPredictions) &lt;- c(paste(&quot;stack&quot;, i, &quot;Pred&quot;, sep  = &quot;&quot;), paste(&quot;stack&quot;, i, &quot;StdDev&quot;, sep  = &quot;&quot;))

	    # Save to list
	    CVStacks[[i]] &lt;- append(CVStacks[[i]], list(StackPreCV = preCV, StackPredictions = StackPredictions, StackResults = list(Rsquared = mean(AllRsquared), 
												    RMSE = mean(AllRMSE), MAE = mean(AllMAE), RsquaredSD = sd(AllRsquared), RMSESD = sd(AllRMSE), MAESD = sd(AllMAE))))
	  }
    } else if (StackList[[i]]$Details$Goal == &quot;Keep Best Model&quot;){
	  # Check if best model was already determined, otherwise give error
	  if (length(StackList[[i]]) &gt; 2 &amp;&amp; is.null(StackList[[i]]$Details$BestModel)){
		stop(&quot;Best Model has not been determined yet&quot;)
	  } else if (length(StackList[[i]]) == 2){
		StackList[[i]]$Details$BestModel &lt;- 2
	  }

	  # Check if model was already created
	  if (is.null(PreBuildCVStack)){
		CVres &lt;- DoCV(xy, xnames = StackList[[i]][[StackList[[i]]$Details$BestModel]]$Features, ModelList = StackList[[i]][[StackList[[i]]$Details$BestModel]], PreCV = preCV, 
					  Folds = Folds, Repeats = Repeats, PreCVCases = flds, AsPreCV = TRUE, savePredicted = TRUE, overrideArgs = overrideArgs)
		CVStacks[[i]] &lt;- append(CVStacks[[i]], list(list(Results = CVres[c(&quot;Rsquared&quot;, &quot;RMSE&quot;, &quot;MAE&quot;, &quot;RsquaredSD&quot;, &quot;RMSESD&quot;, &quot;MAESD&quot;)], preCV = CVres$PreCV, 
																		PredictionsFinal = matrix(CVres$Predictions, nrow = length(xy[,1])))))
	  } else {
		CVStacks[[i]] &lt;- append(CVStacks[[i]], list(PreBuildCVStack[[i]][[j-1]]))
	  }
      names(CVStacks[[i]])[length(CVStacks[[i]])] &lt;- &quot;BestModel&quot;

	  # Rename prediction names to stack - names
	  #colnames(CVStacks[[i]][[1]]$PredictionsFinal) &lt;- paste(&quot;stack&quot;, i, colnames(CVStacks[[i]][[1]]$PredictionsFinal), sep  = &quot;&quot;)

	  # Save preCV for next stack
	  preCV &lt;- lapply(CVStacks[[i]][[1]]$preCV$Predictions, function(x) lapply(x, function(x) {colnames(x) &lt;- paste(&quot;stack&quot;, i, colnames(x), sep  = &quot;&quot;)
																							   x}))

	  # Save to list
	  CVStacks[[i]] &lt;- append(CVStacks[[i]], list(StackPreCV = preCV, StackPredictions = CVStacks[[i]][[1]]$PredictionsFinal, StackResults = CVStacks[[i]][[1]]$Results))
    }
	# Write predictions to xy and xnames for further stacks to use
	xnames &lt;- c(xnames[!(xnames %in% toremove)], colnames(CVStacks[[i]][[1]]$Predictions))
	toremove &lt;- colnames(CVStacks[[i]]$StackPred)
  }

  return(CVStacks)
}

Yscramble &lt;- function(xy, xnames, StackList, IsClassification, Partitions = 10, Folds = 10, Repeats = 1)
{	
  #init
  Rsquared &lt;- matrix(NA, nrow = 0, ncol = 1)
  RMSE &lt;- matrix(NA, nrow = 0, ncol = 1)
  Y &lt;- list(Rsquared = NULL, RsquaredSD = NULL, RMSE = NULL, RMSESD = NULL)

  #for every partition (= percentage) the Rsquared and RMSE are gathered
  for (i in c(0,1:Partitions)){
    #create scrambled xy
    Partition1 &lt;- createDataPartition(xy[,1], times = 1, p = i/n, list = FALSE)
    xyscram &lt;- xy
    xyscram[,1][Partition1] &lt;- xy[,1][Partition1][sample(nrow(as.matrix(xy[,1][Partition1])))]
    
    #evaluate
	eval &lt;- buildCVStack(xyscram, xnames, StackList, IsClassification, Folds = Folds, Repeats = Repeats)
    Y$Rsquared &lt;- rbind(Y$Rsquared, eval[[length(eval)]]$StackResults$Rsquared)
    Y$RsquaredSD &lt;- rbind(Y$RsquaredSD, eval[[length(eval)]]$StackResults$RsquaredSD)
    Y$RMSE &lt;- rbind(Y$RMSE, eval[[length(eval)]]$StackResults$RMSE)
    Y$RMSESD &lt;- rbind(Y$RMSESD, eval[[length(eval)]]$StackResults$RMSESD)
  }
  return(Y)
}




###--Feature Selection--
GA &lt;- function(xy, xnames, featureList, featureMask, ModelList, elitism = 3, pmutation = 0.03, popsize = 10, stopiter = 5, maxiter = 12, plot = TRUE, CVFolds = 5, CVReps = 1, preCV = NULL) 
{
  #init
  stop = 0
  iter = 0
  nnames &lt;- length(featureList)
  tested &lt;- matrix(NA, nrow = 0, ncol = (nnames + 2))
  colnames(tested) &lt;- c(featureList, &quot;Rsquared&quot;, &quot;RMSE&quot;)
  iterRsquared &lt;- matrix(NA, nrow = popsize, ncol = 0)
  iterRMSE &lt;- matrix(NA, nrow = popsize, ncol = 0)
  
  #random population
  pop &lt;- matrix(round(runif(nnames*popsize)), nrow = popsize, ncol = nnames)
  
  while (iter &lt; maxiter &amp;&amp; stop &lt; stopiter ){
    #make sure there are no zero rows
    while(sum(apply(pop, 1, function(x) sum(x)) == 0)){
      pop &lt;- pop[!apply(pop, 1, function(x) sum(x)) == 0,]
      while(length(pop[,1]) != popsize){
        pop &lt;- rbind(pop, round(runif(nnames)))
      }
    }

    Rsquared &lt;- matrix(NA, nrow = popsize, ncol = 1)
    RMSE &lt;- matrix(NA, nrow = popsize, ncol = 1)

    for (i in 1:length(pop[,1])){
	  #if not yet tested
      if (!sum(apply(as.matrix(tested[,1:nnames]), 1, function(x) sum(x == pop[i,])==nnames))){
		ModelList$Features &lt;- ClassToFeature(xnames, pop[i,], featureList, featureMask)
		eval &lt;- DoCV(xy, xnames, ModelList, PreCV = preCV, PreCVCases = NULL, Folds = CVFolds, Repeats = CVReps, overrideArgs = TRUE)
        Rsquared[i,] &lt;- eval$Rsquared
        RMSE[i,] &lt;- eval$RMSE
		tested &lt;- rbind(tested, c(pop[i,], Rsquared[i,], RMSE[i,]))
	  }else{ #else if already tested
		Rsquared[i,] &lt;- tested[apply(tested[,1:nnames], 1, function(x) sum(x == pop[i,])==nnames)][nnames + 1]
		RMSE[i,] &lt;- tested[apply(tested[,1:nnames], 1, function(x) sum(x == pop[i,])==nnames)][nnames + 2]
	  }
    }
	
    #update
    iter = iter + 1
    iterRsquared &lt;- cbind(iterRsquared, Rsquared)
    iterRMSE &lt;- cbind(iterRMSE, RMSE)

    if (iter &gt; 1){
	  if (max(iterRsquared[,iter]) &gt; max(tested[,nnames+1])){
	  	stop = 0
	  }else {
		stop = stop + 1
	  }
	}

	#update seed because seed resets every time one calls Cross Validation
	#seed indexed by iter because then the population will change no matter what 
	#as iter will be different every time the seed resets
	set.seed(.Random.seed[iter])


    #create new population
    elits &lt;- pop[Rsquared %in% sort(Rsquared, decreasing = TRUE)[1:elitism],]
    newpop &lt;- elits
	
	#crossover
	if(&quot;$(Mutation)&quot; != &quot;Mutation&quot;){
	  #init
	  while(length(newpop[,1]) &lt; popsize){
		if(&quot;$(Mutation)&quot; == &quot;2-point Crossover with Mutation&quot;){
		  k &lt;- 2
		}else{
		  k &lt;- round(runif(1, 1, nnames))
		}

		Parents &lt;- elits[sample(array(1:elitism), 2),]
		Child1 &lt;- Child2 &lt;- array(data = NA, dim = nnames)
		
		#method 1 #biased without the removal of the last index 
		#         #so no longer biased
		if(&quot;$(Mutation)&quot; != &quot;Uniform k-point Crossover with Mutation&quot;){
		  cross &lt;- sort(sample(array(1:nnames), k))
		  
		  ind1 &lt;- c()
		  for(j in seq(1, length(cross), 2)){
			if(!is.na(cross[j+1])){ind1 &lt;- c(ind1, cross[j]:(cross[j+1]-1))}
			else{ind1 &lt;- c(ind1, cross[j])}
		  }
		  ind2 &lt;- c(1:nnames)[!(c(1:nnames) %in% ind1)]
		}
		#method 2
		#uniformly distribute then randomly extend or decrease the indeces
		else{
		  #TODO uniform crossover
		  



		}
		
		#conceive Children
		Child1[ind1] &lt;- Parents[1, ind1]
		Child1[ind2] &lt;- Parents[2, ind2]
		Child2[ind1] &lt;- Parents[2, ind1]
		Child2[ind2] &lt;- Parents[1, ind2]
		
		#mutate Children &amp; make sure they are not a zero row
		if(length(newpop[,1]) &lt; popsize &amp;&amp; sum(Child1) != 0){newpop &lt;- rbind(newpop, abs(Child1 - (runif(nnames) &gt;= pmutation)))}
		if(length(newpop[,1]) &lt; popsize &amp;&amp; sum(Child2) != 0){newpop &lt;- rbind(newpop, abs(Child2 - (runif(nnames) &gt;= pmutation)))}
	  }
	}else{    
	  #only random point mutation
	  while(length(newpop) &lt; popsize){
		mutant &lt;- abs(elits[sample(array(1:elitism), 1),] - (runif(nnames) &gt;= pmutation))
		if(sum(mutant) != 0){newpop &lt;- rbind(newpop, mutant)}
	  }
	}

    pop &lt;- newpop
  }

  if (tolower(&quot;$(GiveGASummary)&quot;) == &quot;true&quot;){
    # write out fit results
	sink(file = &quot;$(Routput14file)&quot;)
	cat(&quot;\nGA Tested:\n&quot;)
	
	for (i in 1:length(tested[,1])){
	  cat(tested[i,])
	  cat(&quot;\n&quot;)
	}

	sink()
  }


  if(plot){
	x &lt;- c(1:iter)
	means &lt;- vector()
	best &lt;- vector()
	for (i in 1:iter){
	  means &lt;- c(means, mean(iterRsquared[,i]))
	  best &lt;- c(best, max(iterRsquared[,i]))
	}
	png(filename = &quot;$(Routput12file)&quot;, width = $(RPlotWidth), height = $(RPlotHeight))
	$(RParScript)
	plot(c(1, iter), c(min(means,best), max(means,best)), type=&quot;n&quot;, xlab=&quot;iterations&quot;, ylab=&quot;Rsquared&quot; ) 
	points(x, best, col=&quot;red&quot;, type=&quot;b&quot;)
	points(x, means, col=&quot;blue&quot;, type=&quot;b&quot;)

	# add a title and subtitle 
	title(&quot;Genetic Algorithm&quot;)

	# add a legend 
	legend(1, 0.95*max(means,best), c(&quot;Best in Iteration&quot;,&quot;Means per Iteration&quot;), cex=0.8, col=c(&quot;red&quot;,&quot;blue&quot;), pch=21)
	dev.off()
  }

  #displayed in case something goes wrong
  tested

  return(tested[order(tested[,nnames+1], decreasing = TRUE),][1,-(nnames+1):-(nnames+2)])
}

stepwise &lt;- function(xy, xnames, featureList, featureMask, ModelList, plot = TRUE, stopiter = 8, maxiter = 12, CVFolds = 5, CVReps = 1, Metric = &quot;Rsquared&quot;, preCV = NULL)
{
  #init
  iter &lt;- 0
  NEiter &lt;- 0
  nonImprove &lt;- 0
  nnames &lt;- length(featureList)
  tested &lt;- matrix(NA, nrow = 0, ncol = (nnames + 2))
  colnames(tested) &lt;- c(featureList, &quot;Rsquared&quot;, &quot;RMSE&quot;)
  iterRsquared &lt;- matrix(NA, nrow = nnames, ncol = 0)
  iterRMSE &lt;- matrix(NA, nrow = nnames, ncol = 0)
  removeRsquared &lt;- matrix(NA, nrow = nnames, ncol = 0)
  removeRMSE &lt;- matrix(NA, nrow = nnames, ncol = 0)
  Continue &lt;- TRUE
  best &lt;- rep(0, nnames)
  
  while (Continue == TRUE) {
	#update
	iter &lt;- iter + 1

	#generate combinations
    combs &lt;- diag(nnames)
    combs[,best == 1] &lt;- 1
    combs &lt;- unique(combs)
	
	#remove where number of 1s != iter - NEiter
	combs &lt;- combs[!(apply(combs, 1, function(x) sum(x)) != (iter-NEiter)),,drop = F]
	
    #print for if something goes wrong
	print(combs)
	print(length(combs[,1]))

	#Test combinations
	Rsquared &lt;- matrix(NA, nrow = nnames, ncol = 1)
    RMSE &lt;- matrix(NA, nrow = nnames, ncol = 1)
    for (i in 1:length(combs[,1])){
	  #if not yet tested
      if (!sum(apply(as.matrix(tested[,1:nnames]), 1, function(x) sum(x == as.matrix(combs)[i, ])==nnames))){
		ModelList$Features &lt;- ClassToFeature(xnames, combs[i,], featureList, featureMask)
		eval &lt;- DoCV(xy, xnames, ModelList, PreCV = preCV, PreCVCases = NULL, Folds = CVFolds, Repeats = CVReps, overrideArgs = TRUE)
        Rsquared[i,1] &lt;- eval$Rsquared
        RMSE[i,1] &lt;- eval$RMSE
		tested &lt;- rbind(tested, c(combs[i, ], Rsquared[i,1], RMSE[i,1]))
	  }else{ #else if already tested
		Rsquared[i,1] &lt;- tested[apply(tested[,1:nnames], 1, function(x) sum(x == combs[i, ])==nnames)][nnames + 1]
		RMSE[i,1] &lt;- tested[apply(tested[,1:nnames], 1, function(x) sum(x == combs[i, ])==nnames)][nnames + 2]
	  }
    }
	
	#update iteration stats
	iterRsquared &lt;- cbind(iterRsquared, Rsquared)
    iterRMSE &lt;- cbind(iterRMSE, RMSE)
	combs &lt;- cbind(combs[,,drop = F], Rsquared[!is.na(Rsquared)], Rsquared[!is.na(Rsquared)])
	best &lt;- combs[order(combs[,nnames+1], decreasing = TRUE), , drop = F][1,-(nnames+1):-(nnames+2)]



	#create 1 removed combinations
	#TODO allow for multiple removals
    remove &lt;- matrix(NA, nrow = 0, ncol = nnames)
    for (i in 1:length(best)){
      if(best[i] == 1){
        entry &lt;- best
        entry[i] &lt;- 0
        if(sum(entry != 0)){
		  remove &lt;- rbind(remove, entry)
        }
      }
    }



    #Test removals
	Rsquared &lt;- matrix(NA, nrow = nnames, ncol = 1)
    RMSE &lt;- matrix(NA, nrow = nnames, ncol = 1)
	if(length(remove[,1]) != 0 ){
      for (i in 1:length(remove[,1])){
		#if not yet tested
		if (!sum(apply(as.matrix(tested[,1:nnames]), 1, function(x) sum(x == remove[i,])==nnames))){
		  ModelList$Features &lt;- ClassToFeature(xnames, remove[i,], featureList, featureMask)
		  eval &lt;- DoCV(xy, xnames, ModelList, PreCV = preCV, PreCVCases = NULL, Folds = CVFolds, Repeats = CVReps, overrideArgs = TRUE)
          Rsquared[i,1] &lt;- eval$Rsquared
          RMSE[i,1] &lt;- eval$RMSE
		  tested &lt;- rbind(tested, c(remove[i,], Rsquared[i,1], RMSE[i,1]))
	    }else{ #else if already tested
	      Rsquared[i,1] &lt;- tested[apply(tested[,1:nnames], 1, function(x) sum(x == remove[i,])==nnames)][nnames + 1]
		  RMSE[i,1] &lt;- tested[apply(tested[,1:nnames], 1, function(x) sum(x == remove[i,])==nnames)][nnames + 2]
	    }
      }
    }

	
	#update iteration stats
  	removeRsquared &lt;- cbind(removeRsquared, Rsquared)
    removeRMSE &lt;- cbind(removeRMSE, RMSE)
	remove &lt;- cbind(remove, Rsquared[!is.na(Rsquared)], Rsquared[!is.na(Rsquared)])
	
	#output when something goes wrong
	print(&quot;-tested-&quot;)
	print(tested)

	#continue?
    if (ncol(iterRsquared) &gt;= 2 &amp;&amp; max(iterRsquared[,iter], na.rm = TRUE) &lt;= max(iterRsquared[,iter-1], na.rm = TRUE)){
	  nonImprove &lt;- nonImprove + 1
    } else if (max(iterRsquared[,iter], na.rm = TRUE) &lt; max(removeRsquared[,iter], na.rm = TRUE)){
	  best &lt;- remove[order(remove[,nnames+1], decreasing = TRUE),][1,-(nnames+1):-(nnames+2)]
	  NEiter &lt;- NEiter + 1 #value to subtract from the iter (Not Equal to iter) when removing combs for doubles
    }
	
	if (nonImprove &gt;= stopiter){
        Continue &lt;- FALSE
	} else if (iter == (nnames)){
	  Continue &lt;- FALSE
	} else if(iter &gt;= maxiter){
	  Continue &lt;- FALSE
	}
  }

  if (tolower(&quot;$(GiveStepSummary)&quot;) == &quot;true&quot;){
    # write out fit results
	sink(file = &quot;$(Routput15file)&quot;)
	cat(&quot;\nStepwise Tested:\n&quot;)
	
	for (i in 1:length(tested[,1])){
	  cat(tested[i,])
	  cat(&quot;\n&quot;)
	}

	sink()
  }

  if(plot){
	x &lt;- c(1:iter)
	x2 &lt;- c(2:iter)
	removed &lt;- vector()
	best &lt;- vector()
	for (i in 1:iter){
	  if (i &gt;= 2){
		removed &lt;- c(removed, mean(removeRsquared[,i], na.rm = TRUE))
	  }
	  best &lt;- c(best, max(iterRsquared[,i], na.rm = TRUE))
	}
	png(filename = &quot;$(Routput13file)&quot;, width = $(RPlotWidth), height = $(RPlotHeight))
	$(RParScript)
	plot(c(1, iter), c(min(removed,best), max(removed,best)), type=&quot;n&quot;, xlab=&quot;iterations&quot;, ylab=&quot;Rsquared&quot; ) 
	points(x, best, col=&quot;red&quot;, type=&quot;b&quot;)
	points(x2, removed, col=&quot;blue&quot;, type=&quot;b&quot;)

	# add a title and subtitle 
	title(&quot;Step-Wise Feature Selection&quot;)

	# add a legend 
	legend(1, max(removed,best), c(&quot;Best in Iteration&quot;,&quot;Best in Removed&quot;), cex=0.8, col=c(&quot;red&quot;,&quot;blue&quot;), pch=21)
	dev.off()
  }

  print(tested)

  Best &lt;- tested[which(max(tested[,c(Metric)]) == tested[,c(Metric)]), -(nnames+1):-(nnames+2)]

  return(Best)
}

###--Parameter Optimization--
GridSearch &lt;- function(xy, xnames, ModelList, Grid, Summary = FALSE, Metric = &quot;Rsquared&quot;, POpreCV = NULL, CVFolds = 5, CVreps = 1)
{
  # Create matrix with all testable parameters
  Grid &lt;- lapply(Grid, function(x) paste(x))
  Grid &lt;- lapply(Grid, function(x) unlist(strsplit(x, split = &quot;,&quot;)))
  
  # Convert all feature dependent parameters to actual values
  if (ModelList$TypeOfModel == &quot;randomForest&quot; || ModelList$TypeOfModel == &quot;ranger&quot; || ModelList$TypeOfModel == &quot;extraTrees&quot;) {
	mtry &lt;- Grid$mtry
	mtry[&quot;Sqrt(D)&quot; == mtry] &lt;- floor(sqrt(length(xnames)))
	mtry[&quot;Log2(D)&quot; == mtry] &lt;- ceiling(log2(length(xnames)))
	mtry[&quot;Fraction 10%&quot; == mtry] &lt;- ceiling(0.1 * length(xnames))
	mtry[&quot;Fraction 20%&quot; == mtry] &lt;- ceiling(0.2 * length(xnames))
	mtry[&quot;Fraction 30%&quot; == mtry] &lt;- ceiling(0.3 * length(xnames))
	mtry[&quot;Fraction 40%&quot; == mtry] &lt;- ceiling(0.4 * length(xnames))
	mtry[&quot;Fraction 50%&quot; == mtry] &lt;- ceiling(0.5 * length(xnames))
	mtry[&quot;Fraction 60%&quot; == mtry] &lt;- ceiling(0.6 * length(xnames))
	mtry[&quot;Fraction 70%&quot; == mtry] &lt;- ceiling(0.7 * length(xnames))
	mtry[&quot;Fraction 80%&quot; == mtry] &lt;- ceiling(0.8 * length(xnames))
	mtry[&quot;Fraction 90%&quot; == mtry] &lt;- ceiling(0.9 * length(xnames))
	mtry[&quot;Fraction 100%&quot; == mtry] &lt;- ceiling(1.0 * length(xnames))
	Grid$mtry &lt;- mtry
  } else if (ModelList$TypeOfModel == &quot;pls&quot;){
	ncomp &lt;- as.numeric(Grid$ncomp)
    # Avoid error due to more components than data can support
	ncomp[(ncomp &gt; min(nrow(xy[-1]) - 1, length(xnames)))] &lt;- min(nrow(xy[-1]) - 1, length(xnames))
	ncomp &lt;- unique(ncomp)
	Grid$ncomp &lt;- ncomp
  }

  # Model Grid Options
  Grid &lt;- c(lapply(Grid[unlist(lapply(names(Grid), function(x) {x != &quot;objective&quot; &amp;&amp; x != &quot;booster&quot;}))], function(x) as.numeric(x)), 
			Grid[unlist(lapply(names(Grid), function(x) {x == &quot;objective&quot; || x == &quot;booster&quot;}))])
  Parameters &lt;- expand.grid(Grid)
  if (ModelList$TypeOfModel == &quot;xgboost&quot;){
	Parameters[Parameters[c(&quot;booster&quot;)] == &quot;gbtree&quot;, c(&quot;rate_drop&quot;, &quot;skip_drop&quot;)] &lt;- 0
	Parameters &lt;- unique(Parameters)
  }
  ParameterGrid &lt;- as.list(data.frame(Parameters))
  tested &lt;- matrix(NA, nrow = 0, ncol = length(Parameters[1,]) + 2)

  #analyse models
  for (i in 1:length(as.matrix(Parameters)[,1])){
	args &lt;- lapply(ParameterGrid, `[[`, i)
	ModelList$args &lt;- lapply(args, function(x) if(is.na(x)){x = NULL}else{x})
	eval &lt;- DoCV(xy, xnames, ModelList = ModelList, PreCV = POpreCV, Folds = CVFolds, Repeats = CVreps, overrideArgs = TRUE)
    tested &lt;- rbind(tested, c(as.matrix(Parameters[i,]), eval$Rsquared, eval$RMSE))
  }
  colnames(tested) &lt;- c(colnames(Parameters), &quot;Rsquared&quot;, &quot;RMSE&quot;)

  if (Summary){
    # write out fit results
	sink(file = &quot;$(Routput18file)&quot;)
	cat(&quot;\nParams Tested:\n&quot;)
	cat(colnames(tested))
	for (i in 1:length(tested[,1])){
	  cat(tested[i,])
	  cat(&quot;\n&quot;)
	}

	sink()
  }

  print(&quot;--tested--&quot;)
  print(tested)

  BestArgs &lt;- lapply(ParameterGrid, `[[`, which(max(tested[,c(Metric)]) == tested[,c(Metric)])[1])
  BestArgs &lt;- lapply(BestArgs, function(x) if(is.na(x)){x = NULL}else{x})

  print(BestArgs)

  return(BestArgs)
}

RandomSearch &lt;- function(xy, xnames, args, stategy = &quot;FSSRS&quot;, GridType = &quot;discrete&quot;, distribution = &quot;Gaussian&quot;, HyperplaneRange = 0.4, 
						 maxiter = 100, stopiter = 5, tolerance = 0.001, Summary = FALSE)
{
  #init
  iter = 0
  nonImprove = 0

  stop(&quot;not yet implemented&quot;)
  return(BestArgs)
}

# Create a Caret crossvalidation model
# DEPRECATED
CrossValidation &lt;- function(xy, xnames, args, arg.override = FALSE, savePredicted = FALSE, Folds = 10, Repeats = 1, NumberOfDescriptors = &quot;sqrt(D)&quot;, Fraction = 0.2){
  #to keep all subsequent CVs constant
  set.seed($(Seed))
  
  #update data
  xy &lt;- cbind(xy[1], xy[-1][xnames])
 
  #update mtry due to new set of descriptors
  if (arg.override &amp;&amp; (TypeOfModel == &quot;randomForest&quot; || TypeOfModel == &quot;ranger&quot; || TypeOfModel == &quot;extraTrees&quot;)){
	args$mtry &lt;- floor(sqrt(length(xnames)))
    if (NumberOfDescriptors == &quot;Log2(D)&quot;) {
	  args$mtry &lt;- ceiling(log2(length(xnames)))
    } else if (NumberOfDescriptors == &quot;Specified Fraction&quot;) {
	  args$mtry &lt;- ceiling(Fraction * length(xnames))
    }
  }

  if (arg.override &amp;&amp; TypeOfModel == &quot;pls&quot;){
	args$ncomp &lt;- min(args$ncomp, nrow(xy[-1]) - 1, ncol(xy[-1]))
  }

  #caret requires some model parameters in tuneGrid
  if(TypeOfModel == &quot;randomForest&quot;){
	args &lt;- c(args, list(tuneGrid = expand.grid(.mtry=args$mtry)))
	args$mtry &lt;- NULL
  } else if (TypeOfModel == &quot;ranger&quot;){
	args &lt;- c(args, list(tuneGrid = expand.grid(.mtry=args$mtry, .splitrule = if (IsClassification){&quot;gini&quot;}else{&quot;variance&quot;},
												.min.node.size = args$min.node.size)))
	args$mtry &lt;- NULL
	args$min.node.size &lt;- NULL
  } else if (TypeOfModel == &quot;extraTrees&quot;){
	args &lt;- c(args, list(tuneGrid = expand.grid(.mtry = args$mtry, .numRandomCuts = args$numRandomCuts)))
	args$mtry &lt;- NULL
	args$numRandomCuts &lt;- NULL
  } else if (TypeOfModel == &quot;xgboost&quot;){
	if (args$method == &quot;xgbTree&quot;){
	  args &lt;- c(args, list(tuneGrid =expand.grid(.nrounds = args$nrounds, .eta = args$eta, .gamma = args$gamma, .max_depth = args$max.depth,
												 .subsample = args$subsample, .colsample_bytree = args$colsample_bytree, .min_child_weight = 1)))
	  args$eta &lt;- args$gamma &lt;- args$max.depth &lt;- args$subsample &lt;- args$nrounds &lt;- args$booster &lt;- args$colsample_bytree &lt;- NULL
	} else {
	  args &lt;- c(args, list(tuneGrid =expand.grid(.nrounds = args$nrounds, .eta = args$eta, .gamma = args$gamma, .max_depth = args$max.depth,
												 .subsample = args$subsample, .colsample_bytree = args$colsample_bytree, .min_child_weight = 1, 
												 .rate_drop = args$rate_drop, .skip_drop = args$skip_drop)))
	  args$eta &lt;- args$gamma &lt;- args$max.depth &lt;- args$subsample &lt;- args$nrounds &lt;- args$booster &lt;- args$colsample_bytree &lt;- args$rate_drop &lt;- args$skip_drop &lt;- NULL
	}
  } else if (TypeOfModel == &quot;pls&quot;) {
	args &lt;- c(args, list(tuneGrid = expand.grid(.ncomp = args$ncomp)))
	args$ncomp &lt;- NULL
  }

  # prepare training scheme
  if (!savePredicted){
    control &lt;- trainControl(method=&quot;repeatedcv&quot;, number= Folds, repeats= Repeats)
  } else {
	control &lt;- trainControl(method=&quot;repeatedcv&quot;, number= Folds, repeats= Repeats, savePredictions = &apos;final&apos;)
  }

  #run Cross Validation
  if (!(TypeOfModel == &quot;xgboost&quot;)){
    CVmodel &lt;- do.call(train, args = c(list(form = $(Name)~., data = xy, trControl=control, preProcess = c(PrepParams)), args))
  } else {
	CVmodel &lt;- do.call(train, args = c(list(x = xy[-1], y = $(Name), trControl=control, preProcess = c(PrepParams)), args))
  }
  
  return(CVmodel)
}

</sci:value>
					</sci:arg>
					<sci:arg name="RModelScript" type="TextType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>RModelScript</sci:value>
								<sci:value>RModelScript</sci:value>
								<sci:value>RModelScript</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Body of R script for running the built model.  Boilerplate script will be prepended and appended for reading input data and writing results.  Input data will be placed in a variable named x, and output results should be placed in a variable named pred.</sci:help>
						<sci:value>#--Libraries--
library(randomForest)
library(ranger)
library(extraTrees)
library(xgboost)
library(pls)
library(caret)
library(ggplot2)
library(iml)

#--Globals--
# Convert all indexes to strings (otherwise they are likely factors..)
Files &lt;- data.frame(lapply(Files, as.character), stringsAsFactors=FALSE)
Files &lt;- Files[-1,] 
FileIndex &lt;- 1


#--Functions--

# Get a prediction for the build model
PredictForModel &lt;- function(x, xnames, model, TypeOfModel, IsClassification){
  if (TypeOfModel == &quot;xgboost&quot;){
    modelForPred &lt;- xgb.load(model)
  }

  # Init
  pred &lt;- NULL
  x &lt;- x[,xnames, drop = F]
  x &lt;- as.matrix(x, drop = F)
  
  # Predict for model
  if (TypeOfModel == &quot;randomForest&quot;){
    pred &lt;- predict(model, x, type=&quot;response&quot;)
    predall &lt;- predict(model, x, type=&quot;response&quot;, predict.all=TRUE)$individual
    
    if (IsClassification) {
      predprob &lt;- predict(model, x, type=&quot;prob&quot;)
      ginis &lt;- apply(predall, 1, function(x) {tab &lt;- table(x); 1 - sum((tab / sum(tab))^2);})
    } else {
      stddevs &lt;- apply(predall, 1, sd)
    }
  } else if (TypeOfModel == &quot;ranger&quot;){
    pred &lt;- predict(model, x, type=&quot;response&quot;)$predictions
    predall &lt;- predict(model, x, type=&quot;response&quot;, predict.all=TRUE)$predictions
    if (IsClassification) {
      predprob &lt;- predict(model, x, type=&quot;prob&quot;)
      ginis &lt;- apply(predall, 1, function(x) {tab &lt;- table(x); 1 - sum((tab / sum(tab))^2);})
    } else {
      stddevs &lt;- apply(predall, 1, sd)
    }
  } else if (TypeOfModel == &quot;extraTrees&quot;){
    pred &lt;- predict(model, x)
    predall &lt;- predict(model, x, allValues=TRUE)
    if (IsClassification) {
      predprob &lt;- predict(model, x, probability = TRUE)
      ginis &lt;- apply(predall, 1, function(x) {tab &lt;- table(x); 1 - sum((tab / sum(tab))^2);})
    } else {
      stddevs &lt;- apply(predall, 1, sd)
    }
  } else if (TypeOfModel == &quot;pls&quot;){
    #attach the model to the path so we can look at the number of components ncomp
    NumberOfVariables &lt;- model$ncomp
    
    pred &lt;- predict(model, x, NumberOfVariables)  # NumberOfVariables defined in boilerplate script
  } else if (TypeOfModel == &quot;xgboost&quot;){
    pred &lt;- predict(object=modelForPred, newdata=x)
    if (IsClassification){
      predprobs &lt;- matrix(X, nrow=nrow(x), byrow=TRUE)
      ginis &lt;- apply(predall, 1, function(x) {tab &lt;- table(x); 1 - sum((tab / sum(tab))^2);})
      predclass &lt;- ylevels[max.col(probs)]
      
      colnames(probs) &lt;- ylevels
    }
  }

  if (length(pred) == 0)
  {
    stop(&quot;Error predicting with R model&quot;)
    geterrmessage()
  }
  
  if (TypeOfModel == &quot;randomForest&quot; || TypeOfModel == &quot;ranger&quot; || TypeOfModel == &quot;extraTrees&quot; || TypeOfModel == &quot;xgboost&quot;){
    # output prediction results to a file
    
    if (IsClassification) {
      overrideCutoff &lt;- FALSE
      cutoff &lt;- 0.0
      prefClass &lt;- &quot;&quot;
      
      $(STRProtectedSection)
      
      if (overrideCutoff) {
        if (!any(tolower(model$classes) == prefClass)) stop(paste(&quot;Preferred class \&quot;&quot;, prefClass, &quot;\&quot; not found.&quot;, sep=&quot;&quot;))
        prefIndex &lt;- which(tolower(model$classes) == prefClass)
        
        prefWinner &lt;- predprob[,prefIndex] &gt;= cutoff
        prefLoser &lt;- predprob[,prefIndex] &lt; cutoff
        pred[prefWinner] &lt;- model$classes[prefIndex] # use this rather than preClass to retain case
        
        if (any(pred[prefLoser] == prefClass)) {
          tmpprob &lt;- predprob
          tmpprob[,prefIndex] &lt;- -9e99
          winners &lt;- apply(tmpprob, 1, which.max)
          pred[prefLoser] &lt;- model$classes[winners[prefLoser]]
        }
      }
      
      pred &lt;- data.frame(X=pred, Gini=ginis, predprob, check.names=FALSE)
    } else {
      if (!(TypeOfModel == &quot;xgboost&quot;)){
        pred &lt;- data.frame(X=pred, StdDev=stddevs)
      } else {
        pred &lt;- data.frame(X=pred)
      }
    }
  } else if (TypeOfModel == &quot;pls&quot;){ 
    predNames &lt;- &quot;X&quot;
    if (length(NumberOfVariables) &gt; 1) 
      predNames &lt;- paste(&quot;X&quot;, 1:length(NumberOfVariables), sep=&quot;&quot;)
    
    pred &lt;- data.frame(matrix(pred[,1,], ncol=length(NumberOfVariables)))
    names(pred) &lt;- predNames
  }
  
  return(pred)
}


# Build Stack
buildStack &lt;- function(xy, xnames, StackList, IsClassification, PreBuildStack = NULL){ 
  # Update data
  xy &lt;- cbind(xy[xnames])
  # init
  toremove &lt;- &quot;&quot;
  BuildStacks &lt;- list(NULL)

  # For each fold
  for (i in 1:length(StackList)){
    BuildStacks[[i]] &lt;- list()
    names(BuildStacks)[length(BuildStacks)] &lt;- paste(&quot;Stack&quot;, i, sep = &quot;&quot;)
    
	# Check if prebuildStack includes current stack
    if(!is.null(PreBuildStack)){
	  if (length(PreBuildStack) &lt; i){
		PreBuildStack &lt;- NULL
	  }
	}

	#For each model
    if (StackList[[i]]$Details$Goal == &quot;Ensemble Stack&quot; || StackList[[i]]$Details$Goal == &quot;Keep All Predictions&quot;){
      for (j in 2:length(StackList[[i]])){
		# Check if model was already created
		BuildStacks[[i]] &lt;- append(BuildStacks[[i]], list(list(Model = PreBuildStack[[i]][[j-1]]$Model, TypeOfModel = PreBuildStack[[i]][[j-1]]$TypeOfModel, Features = PreBuildStack[[i]][[j-1]]$Features)))
        names(BuildStacks[[i]])[length(BuildStacks[[i]])] &lt;- paste(&quot;Model&quot;, j-1, sep = &quot;&quot;)
        BuildStacks[[i]][[j-1]] &lt;- append(BuildStacks[[i]][[j-1]], list(Predictions = as.matrix(PredictForModel(xy, BuildStacks[[i]][[j-1]]$Features, model = BuildStacks[[i]][[j-1]]$Model, 
																												TypeOfModel = BuildStacks[[i]][[j-1]]$TypeOfModel, 
																												IsClassification))))
	    # Single Prediction determination and plot
		if (paste(&quot;$(LearnedPropertyName)&quot;, &quot;_ExplainPredictions&quot;, sep = &quot;&quot;) %in% unlist(c(strsplit(&quot;$(Model Output)&quot;, &quot;,&quot;)))){
		  predictor &lt;- PreBuildStack[[i]][[j-1]]$Predictor
		  X &lt;- xy[,BuildStacks[[i]][[j-1]]$Features, drop = F]
		  if (&quot;$(AnalysisMethod)&quot; == &quot;Shapley&quot;){
			shapley = Shapley$new(predictor, x.interest = X)
			# Plot Shapley Analysis
			png(filename = Files[Files[,1] == paste(&quot;RPredictionsAnalysisFile&quot;, FileIndex, sep = &quot;&quot;),2], width = 600, height = 10*length(X))
			$(RParScript)
	
			par(pty=&quot;s&quot;)

			print(shapley$plot())

			dev.off()
			FileIndex &lt;- FileIndex + 1
		  } else{
			lime.explain = LocalModel$new(predictor, k = length(X), x.interest = X)

			# Plot LocalModel Analysis
			png(filename = Files[Files[,1] == paste(&quot;RPredictionsAnalysisFile&quot;, FileIndex, sep = &quot;&quot;),2], width = 800, height = 900)
			$(RParScript)
	
			par(pty=&quot;s&quot;)

			print(plot(lime.explain))

			dev.off()
			FileIndex &lt;- FileIndex + 1
		  }
		}
      }

	  if (StackList[[i]]$Details$Goal == &quot;Keep All Predictions&quot;){
	    # Get all made predictions and keep them to be used as features in the following stack
	    StackPredictions &lt;- lapply(BuildStacks[[i]], function(x) {
													 if (!is.null(names(x)) &amp;&amp; !is.na(names(x)) &amp;&amp; length(grep(&apos;.*Predictions$&apos;, names(x))) &gt; 0 ){x[[grep(&apos;.*Predictions$&apos;, names(x))]]}})
		print(StackPredictions)
	    SavedColNames &lt;- paste(&quot;Stack&quot;, i, rep(names(StackPredictions), unlist(lapply(StackPredictions, function(x) length(x[1,])))), unlist(lapply(StackPredictions, function(x) colnames(x))), sep = &quot;&quot;)
	    StackPredictions &lt;- matrix(unlist(StackPredictions), nrow = length(xy[,1]))
	    colnames(StackPredictions) &lt;- SavedColNames
		print(StackPredictions)
		#asdfasdf
		BuildStacks[[i]] &lt;- append(BuildStacks[[i]], list(StackPred = StackPredictions))


	  } else if (StackList[[i]]$Details$Goal == &quot;Ensemble Stack&quot;){
	    # Get all made predictions and take the mean and sd for the ensembled stack predictions
	    StackPredictions &lt;- lapply(BuildStacks[[i]], function(x) {
							                         if (!is.null(names(x)) &amp;&amp; !is.na(names(x)) &amp;&amp; length(grep(&apos;.*Predictions$&apos;, names(x))) &gt; 0 ){x[[grep(&apos;.*Predictions$&apos;, names(x))]][,1]}})
	    StackPredictions &lt;- matrix(unlist(StackPredictions), ncol = length(grep(&apos;.*Model.*&apos;, names(BuildStacks[[i]]))))
		StackPred &lt;- cbind(apply(StackPredictions, 1, function(x) mean(x)), apply(StackPredictions, 1, function(x) sd(x)))
	    colnames(StackPred) &lt;- c(paste(&quot;stack&quot;, i, &quot;Pred&quot;, sep  = &quot;&quot;), paste(&quot;stack&quot;, i, &quot;StdDev&quot;, sep  = &quot;&quot;))
	    BuildStacks[[i]] &lt;- append(BuildStacks[[i]], list(StackPred = StackPred))
	  }
    } else if (StackList[[i]]$Details$Goal == &quot;Keep Best Model&quot;){
	  # Check if best model was already determined, otherwise give error
	  if (length(StackList[[i]]) &gt; 2 &amp;&amp; is.null(StackList[[i]]$Details$BestModel)){
		stop(&quot;Best Model has not been determined yet&quot;)
	  } else if (length(StackList[[i]]) == 2){
		StackList[[i]]$Details$BestModel &lt;- 2
	  }
	  BuildStacks[[i]] &lt;- append(BuildStacks[[i]], list(list(Model = PreBuildStack[[i]][[1]]$Model, TypeOfModel = PreBuildStack[[i]][[1]]$TypeOfModel, Features = PreBuildStack[[i]][[1]]$Features)))
	  names(BuildStacks[[i]])[length(BuildStacks[[i]])] &lt;- &quot;BestModel&quot;
      BuildStacks[[i]][[1]] &lt;- append(BuildStacks[[i]][[1]], list(Predictions = as.matrix(PredictForModel(xy, BuildStacks[[i]][[1]]$Features, model = BuildStacks[[i]][[1]]$Model, 
																										  TypeOfModel = BuildStacks[[i]][[1]]$TypeOfModel, 
																										  IsClassification))))
	 
	  # Single Prediction determination and plot
	  if (paste(&quot;$(LearnedPropertyName)&quot;, &quot;_ExplainPredictions&quot;, sep = &quot;&quot;) %in% unlist(c(strsplit(&quot;$(Model Output)&quot;, &quot;,&quot;)))){
		predictor &lt;- PreBuildStack[[i]][[1]]$Predictor
		X &lt;- xy[,BuildStacks[[i]][[1]]$Features, drop = F]
		if (&quot;$(AnalysisMethod)&quot; == &quot;Shapley&quot;){
		  shapley = Shapley$new(predictor, x.interest = X)
		  # Plot Shapley Analysis
		  png(filename = Files[Files[,1] == paste(&quot;RPredictionsAnalysisFile&quot;, FileIndex, sep = &quot;&quot;),2], width = 600, height = 10*length(X))
		  $(RParScript)
	
		  par(pty=&quot;s&quot;)

		  print(shapley$plot())

		  dev.off()
		  FileIndex &lt;- FileIndex + 1
		} else{
		  lime.explain = LocalModel$new(predictor, k = length(X), x.interest = X)

		  # Plot LocalModel Analysis
		  png(filename = Files[Files[,1] == paste(&quot;RPredictionsAnalysisFile&quot;, FileIndex, sep = &quot;&quot;),2], width = 800, height = 900)
		  $(RParScript)
	
		  par(pty=&quot;s&quot;)

		  print(plot(lime.explain))

		  dev.off()
		  FileIndex &lt;- FileIndex + 1
		}
	  }

	  StackPred &lt;- BuildStacks[[i]][[1]]$Predictions
	  colnames(StackPred) &lt;- paste(&quot;stack&quot;, i, colnames(BuildStacks[[i]][[1]]$Predictions), sep  = &quot;&quot;)
	  BuildStacks[[i]] &lt;- append(BuildStacks[[i]], list(StackPred = StackPred))
    }

	# Write predictions to xy and xnames for further stacks to use
	xy &lt;- cbind(xy[xnames[!(xnames %in% toremove)]], BuildStacks[[i]]$StackPred)
	xnames &lt;- c(xnames[!(xnames %in% toremove)], colnames(BuildStacks[[i]]$StackPred))
	toremove &lt;- colnames(BuildStacks[[i]]$StackPred)
  }

  return(BuildStacks)
}


x &lt;- x[xnames]
#x &lt;- as.matrix(x)

if (PerformPreprocess) {
  x &lt;- predict(Process, x)
}

predicted &lt;- buildStack(x, xnames, StackList = ModelBuild, IsClassification, PreBuildStack = Stacks)

pred &lt;- as.data.frame(predicted[[length(predicted)]]$StackPred[,1])
colnames(pred) &lt;- &quot;X&quot;
pred</sci:value>
					</sci:arg>
					<sci:arg name="Validation Parameters" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:member>Cross Validation Folds</sci:member>
						<sci:member>Partitions</sci:member>
						<sci:member>Cross Validation Repeats</sci:member>
						<sci:value>Cross Validation</sci:value>
					</sci:arg>
					<sci:arg name="Cross Validation Repeats" type="DoubleType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Validation to anything but None&apos;);
Parameter(&apos;Validation&apos;) ne &apos;None&apos; and Parameter(&apos;Validation&apos;) ne &apos;Percentage Split Validation&apos; and Parameter(&apos;Consistent Iterations&apos;) eq true</sci:enabledscript>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Cross Validation Folds" type="DoubleType" required="true" visibility="visible" multi="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Validation to Cross Validation&apos;);
//Parameter(&apos;Validation&apos;) eq &apos;Cross Validation&apos;</sci:enabledscript>
						<sci:value>10</sci:value>
					</sci:arg>
					<sci:arg name="Partitions" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>for the Y-scrambling parameter</sci:help>
						<sci:value>10</sci:value>
					</sci:arg>
					<sci:arg name="Learn Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>Specifies additional preferences affecting the building of the model and information saved with the model. Options are:
&lt;ul&gt;

&lt;li&gt;Save Training Properties: Saves the properties of the training data in the model component for later use. This allows you to use &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt; to rebuild the model with new data added to the original data. In addition, you can determine the distance of a sample to the closest training samples when making predictions with the model. (Use &lt;i&gt;Numeric Distance Function&lt;/i&gt; to specify the distance measure to use.) For identifying training samples, the model uses the &lt;b&gt;Name&lt;/b&gt; property. If no such property exists in your training data, the names &lt;b&gt;Train1&lt;/b&gt;, &lt;b&gt;Train2&lt;/b&gt;, etc. are used. The &quot;Save Training Properties&quot; option increases the on-disk size of the model component in proportion to the quantity of training data.

&lt;li&gt;Track Property Ranges: Tracks the ranges of property values seen in the input data in order to alert you to any out-of-range values found when you make predictions with the model. This helps indicate the model&apos;s domain of applicability and the degree to which you can trust the predicted values. If you choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions, you are warned when the value of any property is outside the range of that property&apos;s values in the training data. If you wish to also track structural features of the data, use &lt;i&gt;Model Domain Fingerprint&lt;/i&gt; to specify the molecular fingerprint to use for feature tracking.

&lt;li&gt;Perform OPS Analysis: Performs a principal components analysis to determine the optimum prediction space (OPS) of the model as an indicator of the model&apos;s applicability when making predictions. The OPS approach typically results in tighter boundaries around the training data than does simply tracking the property ranges. If you choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions with the model on new data, the model output indicates whether each new sample lies within or outside the training data range for each principal component. If you wish to also track structural features of the data, use &lt;i&gt;Model Domain Fingerprint&lt;/i&gt; to specify the molecular fingerprint to use for feature tracking. If you select this option, you do not need to select &quot;Track Property Ranges&quot;; the property range tracking is done as part of the OPS analysis.

&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the optimum prediction space approach, see U.S. Patent 6,036,349, &quot;Method and apparatus for validation of model-based predictions.&quot; You can find it at &lt;a href=&quot;javascript:DoLink(&apos;http://patft.uspto.gov/netahtml/PTO/srchnum.htm&apos;)&quot;&gt;the US Patent Number Search site.&lt;/a&gt;
&lt;/ul&gt;
</sci:help>
						<sci:member>Model Domain Fingerprint</sci:member>
						<sci:member>Explaining Single Predictions Method</sci:member>
						<sci:member>Additional Properties</sci:member>
						<sci:member>Numeric Distance Function</sci:member>
						<sci:member>Fingerprint Distance Function</sci:member>
						<sci:legalval>Save Training Properties</sci:legalval>
						<sci:legalval>Track Property Ranges</sci:legalval>
						<sci:legalval>Perform OPS Analysis</sci:legalval>
						<sci:legalval>Single Prediction Analysis</sci:legalval>
					</sci:arg>
					<sci:arg name="Numeric Distance Function" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>For numeric properties and categorical properties other than fingerprints, specifies the function to use for computing the distance between two data records. This distance is used by the built model to determine the closest training samples when you specify that the model should output the closest samples.

&lt;p&gt;The expressions for the following distance functions assume that each record has numerical properties x&lt;sub&gt;1&lt;/sub&gt;, x&lt;sub&gt;2&lt;/sub&gt;,&amp;hellip;, with x&lt;sub&gt;1A&lt;/sub&gt;, x&lt;sub&gt;2A&lt;/sub&gt;,&amp;hellip; the values for record A and x&lt;sub&gt;1B&lt;/sub&gt;, x&lt;sub&gt;2B&lt;/sub&gt;,&amp;hellip; the values for record B. 
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Euclidean: Distance (D) is the square-root of the sum of squared differences between corresponding property values: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 upward.
&lt;li&gt;Manhattan: Distance is the sum of the absolute value of the differences between corresponding property values: D = &amp;sum;&amp;nbsp;|x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;|. Possible values range from 0 upward.
&lt;li&gt;Mahalanobis: A generalization of the Euclidean distance that accounts for correlations between different properties. The distance is defined as: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)(&lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt;)&lt;sub&gt;ij&lt;/sub&gt;(x&lt;sub&gt;jA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;jB&lt;/sub&gt;)]&lt;sup&gt;1/2&lt;/sup&gt;, where &lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt; is the inverse of the covariance matrix for the entire data set. Possible values range from 0 upward.
&lt;li&gt;One Minus Correlation: Distance is 1 minus the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Correlation&apos;)&quot;&gt;Pearson correlation coefficient&lt;/a&gt; between the vectors of property values for the two records. Possible values range from 0 to 2. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;One Minus Squared Correlation: Distance is 1 minus the square of the Pearson correlation coefficient between the vectors of property values for the two records. Use this function if you wish both strong correlation and strong anti-correlation to indicate that two records are &quot;near&quot;. Possible values range from 0 to 1. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;Cosine: Distance is 1 minus the cosine of the angle between the vectors defined by the properties of the two records: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;&amp;nbsp;&amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 2.
&lt;li&gt;Dice: Distance is a generalization to continuous properties of the Dice distance for binary fingerprints: D = 1 &amp;minus; 2 &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]. Possible values range from 0 to 2.
&lt;li&gt;Tanimoto: Distance is a generalization to continuous properties of the Tanimoto distance for binary fingerprints: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt;]. Possible values range from 0 to 1.3333.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For Euclidean, Manhattan, and Mahalanobis distances, the difference between two string (categorical) values is considered 0 if the strings are identical, or 1 if they are not.  For Cosine, Dice, and Tanimoto distances, the product of two string values is considered 1 if the strings are identical, or 0 if they are not. String properties are ignored for both correlation options.
&lt;li&gt;If a property is an array, then differences or products are taken element-by-element for the entire array. If the array on one record is shorter than on the other, unmatched elements of the longer array are ignored.
&lt;li&gt;For the Mahalanobis option, if the data are so highly-correlated that the covariance matrix is singular or nearly so, then the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Moore-Penrose_pseudoinverse&apos;)&quot;&gt;Moore-Penrose pseudoinverse&lt;/a&gt; is used instead of the inverse. If even the pseudoinverse cannot be computed (due to &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Singular_value_decomposition&apos;)&quot;&gt;SVD&lt;/a&gt; non-convergence), an error occurs. In this case, you must use an alternative distance function.
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on several of the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;.
&lt;li&gt;For more on the Mahalanobis distance, see &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Mahalanobis_distance&apos;)&quot;&gt;here&lt;/a&gt;.
&lt;/ul&gt;</sci:help>
						<sci:member>Numeric Scaling</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, select &quot;Save Training Properties&quot; as one of the Learn Options&apos;);

contains(Parameter(&apos;Learn Options&apos;), &apos;Save Training Properties&apos;);</sci:enabledscript>
						<sci:legalval>Euclidean</sci:legalval>
						<sci:legalval>Manhattan</sci:legalval>
						<sci:legalval selected="true">Mahalanobis</sci:legalval>
						<sci:legalval>One Minus Correlation</sci:legalval>
						<sci:legalval>One Minus Squared Correlation</sci:legalval>
						<sci:legalval>Cosine</sci:legalval>
						<sci:legalval>Dice</sci:legalval>
						<sci:legalval>Tanimoto</sci:legalval>
					</sci:arg>
					<sci:arg name="Numeric Scaling" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>Settings controlling the scaling of numeric data when computing distances.  Options are:
&lt;ul&gt;
&lt;li&gt;Mean-Center and Scale: Shifts and scales each property to have a mean of 0 and standard deviation of 1.  For Euclidean, Manhattan, Cosine, Dice, and Tanimoto distances, this is a recommended option, as it puts all numeric properties on equal footing.  Without such scaling, properties with a large typical magnitude (e.g., 1000) dominate the calculated distance, while properties with a small typical magnitude (e.g., 1) have minimal effect. (For Mahalanobis and correlation distances, this option has no effect on the calculated distance.)
&lt;li&gt;Scale by Number of Dimensions: For Euclidean, Manhattan, and Mahalanobis distances only, divides the computed distance by P (Manhattan) or P&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean and Mahalanobis), where P is the number of properties (or total number of elements if some properties are arrays). This ensures that the typical magnitude of computed distances remains unchanged as you vary the number of properties in the calculation.
&lt;li&gt;Correct for Missing Values: For Euclidean and Manhattan distances only, multiplies the computed distance by P&lt;sub&gt;exp&lt;/sub&gt;/P (Manhattan) or (P&lt;sub&gt;exp&lt;/sub&gt;/P)&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where P&lt;sub&gt;exp&lt;/sub&gt; is the expected number of properties (or expected total number of elements if some properties are arrays) in the absence of missing values. This ensures that the typical magnitude of computed distances remains unchanged when some properties are missing. Specifically, it ensures that distances to data records with missing properties are not unusually small as an artifact of the missing data. This option does not apply if &quot;Scale by Number of Dimensions&quot; is selected, as that option already corrects for missing properties implicitly.
&lt;/ul&gt;
If none of the above options are selected, no rescaling is applied to the data. This is appropriate if all numeric properties already have the same characteristic scale or represent components of a vector in the same space (e.g., spatial x, y, z coordinates), and no properties are missing from any of the data records.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you specify more than one fingerprint property to use in the distance calculation, then the &quot;Scale by Number of Dimensions&quot; and &quot;Correct for Missing Values&quot; options apply to the fingerprint component of distance as well as to the numeric component. Specifically, Pfp and Pfp&lt;sub&gt;exp&lt;/sub&gt; are used in the scaling of the summed fingerprint distances, where Pfp is the number of fingerprint properties and Pfp&lt;sub&gt;exp&lt;/sub&gt; is the expected number.
&lt;li&gt;&quot;Scale by Number of Dimensions&quot; also applies to fingerprint distances when you specify Euclidean or Manhattan as the &lt;i&gt;Fingerprint Distance Function&lt;/i&gt;. In this case, the distance for each fingerprint property is divided by C (Manhattan) or C&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where C is the total count of features over both data records (i.e., the &quot;or&quot; bit count).
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Mean-Center and Scale</sci:legalval>
						<sci:legalval selected="true">Scale by Number of Dimensions</sci:legalval>
						<sci:legalval>Correct for Missing Values</sci:legalval>
					</sci:arg>
					<sci:arg name="Fingerprint Distance Function" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>For fingerprint properties, specifies the function to use for computing the distance between two data records. This distance is used by the built model to determine the closest training samples when you specify that the model should output the closest samples.

&lt;p&gt;The expressions for the following distance functions assume that each record has a single fingerprint property, with quantities SA, SB, and SC defined as follows:
&lt;p&gt;
SA: Number of fingerprint features common to both records. (Number of &quot;and&quot; bits.)&lt;br&gt;
SB: Number of features present in the first record but absent from the second.&lt;br&gt;
SC: Number of features present in the second record but absent from the first.
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Cosine: Distance (D) is 1 minus the cosine of the angle between the two fingerprints when treated as binary vectors (vectors whose elements must be 0 or 1): D = 1 &amp;minus; SA / [(SA + SB)(SA + SC)]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 1.
&lt;li&gt;Dice: Distance is 1 minus the number of &quot;and&quot; bits scaled by the mean number of &quot;on&quot; bits for both records: D = 1 &amp;minus; 2 SA / (2SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Tanimoto: Distance is 1 minus the number of &quot;and&quot; bits scaled by the number of &quot;or&quot; bits: D = 1 &amp;minus; SA / (SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Euclidean: Distance is the square-root of the number of &quot;on&quot; bits in the squared difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = (SB + SC)&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;li&gt;Manhattan: Distance is the number of &quot;on&quot; bits in the absolute difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = SB + SC. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When more than one fingerprint property is present, a separate distance value is computed for each, and the results are summed or averaged (depending on the &lt;i&gt;Numeric Scaling&lt;/i&gt; options).
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;. Also see: J.C. Gower, &quot;Measures of Similarity, Dissimilarity, and Distance,&quot; in &lt;i&gt;Encyclopedia of Statistical Sciences&lt;/i&gt;, S. Kotz, N.L. Johnson, Read C.B., eds., Vol. 5, p. 397 (1985).
&lt;/ul&gt;
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, select &quot;Save Training Properties&quot; as one of the Learn Options&apos;);

contains(Parameter(&apos;Learn Options&apos;), &apos;Save Training Properties&apos;);</sci:enabledscript>
						<sci:legalval>Cosine</sci:legalval>
						<sci:legalval>Dice</sci:legalval>
						<sci:legalval selected="true">Tanimoto</sci:legalval>
						<sci:legalval>Euclidean</sci:legalval>
						<sci:legalval>Manhattan</sci:legalval>
					</sci:arg>
					<sci:arg name="Model Domain Fingerprint" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Name of fingerprint property to use in order to determine whether a test sample is within the applicability domain of the learned model. Any features seen in a test sample but not in any training sample will be noted in the &lt;i&gt;ModelName&lt;/i&gt;_Applicability property when making predictions with the model.
&lt;p&gt;
Select None if you do not wish to track fingerprint features.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, select &quot;Track Property Ranges&quot; or &quot;Perform OPS Analysis&quot; as one of the Learn Options&apos;);

contains(Parameter(&apos;Learn Options&apos;), &apos;Track Property Ranges&apos;) or contains(Parameter(&apos;Learn Options&apos;), &apos;Perform OPS Analysis&apos;)</sci:enabledscript>
						<sci:legalval>None</sci:legalval>
						<sci:legalval>FCFP_0</sci:legalval>
						<sci:legalval>FCFP_2</sci:legalval>
						<sci:legalval>FCFP_4</sci:legalval>
						<sci:legalval selected="true">FCFP_6</sci:legalval>
						<sci:legalval>ECFP_0</sci:legalval>
						<sci:legalval>ECFP_2</sci:legalval>
						<sci:legalval>ECFP_4</sci:legalval>
						<sci:legalval>ECFP_6</sci:legalval>
						<sci:legalval>FCFP6</sci:legalval>
					</sci:arg>
					<sci:arg name="Explaining Single Predictions Method" type="StringType" required="false" visibility="visible" multi="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, select &quot;Single Prediction Analysis&quot; as one of the Learn Options&apos;);

contains(Parameter(&apos;Learn Options&apos;), &apos;Single Prediction Analysis&apos;)</sci:enabledscript>
						<sci:legalval>LocalModel</sci:legalval>
						<sci:legalval selected="true">Shapley</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Properties" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Comma-separated list of properties to be saved with the model when &quot;Save Training Properties&quot; is selected as one of the &lt;i&gt;Learn Options&lt;/i&gt;. These properties are in addition to those used to build the model, as specified by &lt;i&gt;UseProperties&lt;/i&gt;. When making predictions with the model, the values of the &lt;i&gt;Additional Properties&lt;/i&gt; are shown for the closest training samples when you select the &quot;_ClosestSample&quot; option from the list of available outputs on the model component.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;In the model output with the &quot;_ClosestSample&quot; option, each property in &lt;i&gt;Additional Properties&lt;/i&gt; is renamed to &lt;i&gt;ModelName&lt;/i&gt;_Closest_&lt;i&gt;PropertyName&lt;/i&gt; where &lt;i&gt;PropertyName&lt;/i&gt; is the original name of the property. 
&lt;li&gt;If you set &lt;i&gt;Number of Closest&lt;/i&gt; on the model component to a value greater than 1, the additional property values are appended to form arrays if possible. If this is not possible (e.g., for a binary image property), only the property value for the single closest sample is output.
&lt;/ul&gt;
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, select &quot;Save Training Properties&quot; as one of the Learn Options&apos;);

contains(Parameter(&apos;Learn Options&apos;), &apos;Save Training Properties&apos;)</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Additional Options</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>ShowRInputOutput</sci:member>
						<sci:member>PlotWidth</sci:member>
						<sci:member>PlotHeight</sci:member>
						<sci:member>Seed</sci:member>
						<sci:member>SaveRObject</sci:member>
						<sci:member>RParallel</sci:member>
						<sci:member>Convert Fingerprints To</sci:member>
					</sci:arg>
					<sci:arg name="Seed" type="LongType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Seed</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Seed for random number generator</sci:help>
						<sci:value>12345</sci:value>
					</sci:arg>
					<sci:arg name="SaveRObject" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:member>FilenameRObject</sci:member>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="FilenameRObject" type="DestinationURLType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:value>$(UserDir)/PP/For open Prediction/TemporalSplitIon2009</sci:value>
					</sci:arg>
					<sci:arg name="RParallel" type="BoolType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>RParallel</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Only works for the models ranger and xgboost</sci:help>
						<sci:member>Num Threads</sci:member>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Num Threads" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Num Threads</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Number of CPU threads to use when building model. A value equal to the number of cores on the machine gives the best results.</sci:help>
						<sci:value>32</sci:value>
					</sci:arg>
					<sci:arg name="Convert Fingerprints To" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Convert Fingerprints To</sci:value>
								<sci:value>Convert Fingerprints To</sci:value>
								<sci:value>Convert Fingerprints To</sci:value>
								<sci:value>Convert Fingerprints To</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>This option controls the automatic conversion of fingerprint properties into different format</sci:help>
						<sci:member>Fixed Length</sci:member>
						<sci:legalval>Leave As-Is</sci:legalval>
						<sci:legalval>Fixed-Length Array of Bits</sci:legalval>
						<sci:legalval selected="true">Fixed-Length Array of Counts</sci:legalval>
					</sci:arg>
					<sci:arg name="Fixed Length" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Fixed Length</sci:value>
								<sci:value>Fixed Length</sci:value>
								<sci:value>Fixed Length</sci:value>
								<sci:value>Fixed Length</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>If Convert Fingerprints To is given a fixed-length type, then this is the fixed-length.  Bits larger than this length are folded into this range using a mod operation.</sci:help>
						<sci:value>1024</sci:value>
					</sci:arg>
					<sci:arg name="PlotWidth" type="LongType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>PlotWidth</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Width in pixels of any plots produced by this component.  Use the Set R Default Options component for additional plot settings.</sci:help>
						<sci:value>600</sci:value>
					</sci:arg>
					<sci:arg name="PlotHeight" type="LongType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>PlotHeight</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Height in pixels of any plots produced by this component.  Use the Set R Default Options component for additional plot settings.</sci:help>
						<sci:value>600</sci:value>
					</sci:arg>
					<sci:arg name="ShowRInputOutput" type="StringType" required="false" visibility="visible" multi="true" expanded="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>ShowRInputOutput</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Specifies R input or output to display in Notepad. Options are:
&lt;ul&gt;
&lt;li&gt;Script: Displays the R script generated by this component for execution in R.
&lt;li&gt;StdOutput: Displays the &quot;standard output&quot; from R. This includes the script as executed in R and any output or errors from R.
&lt;/ul&gt;
</sci:help>
						<sci:legalval>Script</sci:legalval>
						<sci:legalval>StdOutput</sci:legalval>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="TextType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:value>ExtraModelParameters,RExitStatus,PlotName,RFunctionsFile,pass,ShowRScript,ShowRStdOutput,s,calcProps,FitSummary,RModelBin,DoPlot,DoSummary,PointInfoText,CalculatedProperties,RParScript,RPlotWidth,RPlotHeight,DoImportance,DoImportancePlots,RFfpname,proptokens,ii,STRProtectedSection</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:value>$(R_Run_Remote)</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:value>10000</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:value>$(R_Server)</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Stack Methods Stack 1" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:legalval selected="true">Keep All Predictions</sci:legalval>
						<sci:legalval>Keep Best Model</sci:legalval>
						<sci:legalval>Ensemble Stack</sci:legalval>
					</sci:arg>
					<sci:arg name="Stack Methods Stack 2" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:legalval>Keep All Predictions</sci:legalval>
						<sci:legalval selected="true">Keep Best Model</sci:legalval>
						<sci:legalval>Ensemble Stack</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1" type="GroupType" required="false" visibility="visible" multi="true" legalvalsenforced="false" uimpl="false">
						<sci:member>ModelBuild Stack 1 Model 1</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2</sci:member>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Feature Selection</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 UseProperties</sci:member>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 UseProperties" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>The properties to learn from.  Options are:
&lt;ul&gt;
&lt;li&gt;AllPropertiesOnFirstData: Uses all properties that are found on the first data record.
&lt;li&gt;CalculablePropertiesOnFirstData: Uses all calculable properties found on the first data record.
&lt;li&gt;PredefinedSet: Uses the properties specified by &lt;i&gt;PredefinedSet&lt;/i&gt;.
&lt;li&gt;UserSet: Uses the properties specified by &lt;i&gt;UserSet&lt;/i&gt;.  Property ranges can be given by providing the first and last property in the range separated by a hyphen. Properties can be referred to by index using the word &quot;Column&quot; followed by the index, such as &quot;Column3-Column10&quot;.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For any array property used in model building, each array member is treated as a separate variable.
&lt;/ul&gt;</sci:help>
						<sci:member>ModelBuild Stack 1 Model 1 UseProperties PredefinedSet</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 UseProperties UserSet</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 UseProperties IgnoreProperties</sci:member>
						<sci:legalval>PreviouslyDefinedSet</sci:legalval>
						<sci:legalval>PreviousStackPredictionsOnly</sci:legalval>
						<sci:legalval selected="true">PredefinedSet</sci:legalval>
						<sci:legalval>UserSet</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 UseProperties PredefinedSet" type="StringType" required="false" visibility="visible" multi="true" expanded="true" uimpl="false">
						<sci:help>A list of molecular properties to use in building the model when &lt;i&gt;UseProperties&lt;/i&gt; is set to PredefinedSet</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to PredefinedSet&apos;);
Parameter(&apos;ModelBuild Stack 1 Model 1 UseProperties&apos;) eq &apos;PredefinedSet&apos;</sci:enabledscript>
						<sci:legalval>ALogP</sci:legalval>
						<sci:legalval>Molecular_Weight</sci:legalval>
						<sci:legalval>Num_H_Donors</sci:legalval>
						<sci:legalval>Num_H_Acceptors</sci:legalval>
						<sci:legalval selected="true">Num_RotatableBonds</sci:legalval>
						<sci:legalval selected="true">Num_BridgeBonds</sci:legalval>
						<sci:legalval selected="true">Num_Atoms</sci:legalval>
						<sci:legalval selected="true">Num_Rings</sci:legalval>
						<sci:legalval>Num_AromaticRings</sci:legalval>
						<sci:legalval>Num_Fragments</sci:legalval>
						<sci:legalval>NPlusO_Count</sci:legalval>
						<sci:legalval selected="true">Molecular_Solubility</sci:legalval>
						<sci:legalval selected="true">Molecular_SurfaceArea</sci:legalval>
						<sci:legalval>Molecular_PolarSurfaceArea</sci:legalval>
						<sci:legalval>Molecular_PolarSASA</sci:legalval>
						<sci:legalval>Estate_Keys</sci:legalval>
						<sci:legalval>Estate_Counts</sci:legalval>
						<sci:legalval>MDLPublicKeys</sci:legalval>
						<sci:legalval>MDL2DKeys960</sci:legalval>
						<sci:legalval>MDL2DKeys166</sci:legalval>
						<sci:legalval>PHFP2</sci:legalval>
						<sci:legalval>PHFP3</sci:legalval>
						<sci:legalval>PHFP4</sci:legalval>
						<sci:legalval selected="true">PHRFP2</sci:legalval>
						<sci:legalval>PHRFP3</sci:legalval>
						<sci:legalval>PHRFP4</sci:legalval>
						<sci:legalval>PHPFP2</sci:legalval>
						<sci:legalval>PHPFP3</sci:legalval>
						<sci:legalval>PHPFP4</sci:legalval>
						<sci:legalval>PHFC2</sci:legalval>
						<sci:legalval>PHFC3</sci:legalval>
						<sci:legalval>PHFC4</sci:legalval>
						<sci:legalval selected="true">PHPFC2</sci:legalval>
						<sci:legalval>PHPFC3</sci:legalval>
						<sci:legalval>PHPFC4</sci:legalval>
						<sci:legalval>PHRFC2</sci:legalval>
						<sci:legalval>PHRFC3</sci:legalval>
						<sci:legalval>PHRFC4</sci:legalval>
						<sci:legalval>FCFC6</sci:legalval>
						<sci:legalval>ECFC6</sci:legalval>
						<sci:legalval>LCFC6</sci:legalval>
						<sci:legalval selected="true">SCFC6</sci:legalval>
						<sci:legalval>FPFC6</sci:legalval>
						<sci:legalval>EPFC6</sci:legalval>
						<sci:legalval>LPFC6</sci:legalval>
						<sci:legalval>SPFC6</sci:legalval>
						<sci:legalval>FEFC6</sci:legalval>
						<sci:legalval>EEFC6</sci:legalval>
						<sci:legalval>LEFC6</sci:legalval>
						<sci:legalval>SEFC6</sci:legalval>
						<sci:legalval>FHFC6</sci:legalval>
						<sci:legalval>EHFC6</sci:legalval>
						<sci:legalval>LHFC6</sci:legalval>
						<sci:legalval>SHFC6</sci:legalval>
						<sci:legalval>FCFP6</sci:legalval>
						<sci:legalval>ECFP6</sci:legalval>
						<sci:legalval>LCFP6</sci:legalval>
						<sci:legalval>SCFP6</sci:legalval>
						<sci:legalval>FPFP6</sci:legalval>
						<sci:legalval>EPFP6</sci:legalval>
						<sci:legalval>LPFP6</sci:legalval>
						<sci:legalval>SPFP6</sci:legalval>
						<sci:legalval>FEFP6</sci:legalval>
						<sci:legalval>EEFP6</sci:legalval>
						<sci:legalval>LEFP6</sci:legalval>
						<sci:legalval>SEFP6</sci:legalval>
						<sci:legalval>FHFP6</sci:legalval>
						<sci:legalval>EHFP6</sci:legalval>
						<sci:legalval>LHFP6</sci:legalval>
						<sci:legalval>SHFP6</sci:legalval>
						<sci:legalval/>
						<sci:legalval>G1AminoAcidComposition</sci:legalval>
						<sci:legalval>G2DipeptideComposition</sci:legalval>
						<sci:legalval>G3AutoCorrelationDescriptors</sci:legalval>
						<sci:legalval>G4CompositionTransitionDistribution</sci:legalval>
						<sci:legalval>G5QuasiSequenceOrderDescriptors</sci:legalval>
						<sci:legalval>G6PseudoAminoAcidComposition</sci:legalval>
						<sci:legalval>G7AmphiphilicPseudoAminoAcidComposition</sci:legalval>
						<sci:legalval selected="true">G9TotalAminoAcidProperties</sci:legalval>
						<sci:legalval>Aligned_Zscales_Hellberg</sci:legalval>
						<sci:legalval>Aligned_Zscales_Jonsson</sci:legalval>
						<sci:legalval>Aligned_Zscales_Sandberg</sci:legalval>
						<sci:legalval>Aligned_Zscales_binary</sci:legalval>
						<sci:legalval>Aligned_Tscales</sci:legalval>
						<sci:legalval>Aligned_STscales</sci:legalval>
						<sci:legalval>Aligned_VHSE</sci:legalval>
						<sci:legalval>Aligned_ISA_ECI</sci:legalval>
						<sci:legalval>Aligned_GRID_tscore</sci:legalval>
						<sci:legalval>Aligned_VSTV</sci:legalval>
						<sci:legalval>Aligned_MSWHIM</sci:legalval>
						<sci:legalval>Aligned_FASGAI</sci:legalval>
						<sci:legalval>Aligned_BLOSUM</sci:legalval>
						<sci:legalval>Aligned_VARIMAX</sci:legalval>
						<sci:legalval>Aligned_ProtFP_numerical</sci:legalval>
						<sci:legalval>Aligned_ProtFP_hash</sci:legalval>
						<sci:legalval>Aligned_Norinder</sci:legalval>
						<sci:legalval>Aligned_cscales</sci:legalval>
						<sci:legalval>Aligned_DPPS</sci:legalval>
						<sci:legalval>Aligned_Escales</sci:legalval>
						<sci:legalval>Aligned_Gscales</sci:legalval>
						<sci:legalval>Aligned_HESH</sci:legalval>
						<sci:legalval>Aligned_HSEHPCSV</sci:legalval>
						<sci:legalval>Aligned_Kidera</sci:legalval>
						<sci:legalval>Aligned_Pscales</sci:legalval>
						<sci:legalval>Aligned_QCP</sci:legalval>
						<sci:legalval>Aligned_Sneath</sci:legalval>
						<sci:legalval>Aligned_SVEEVA</sci:legalval>
						<sci:legalval>Aligned_SVHEHS</sci:legalval>
						<sci:legalval>Aligned_SVRDF</sci:legalval>
						<sci:legalval>Aligned_SVRG</sci:legalval>
						<sci:legalval>Aligned_SVWG</sci:legalval>
						<sci:legalval>Aligned_Vscales</sci:legalval>
						<sci:legalval>Aligned_VSGETAWAY</sci:legalval>
						<sci:legalval>Aligned_VSTPV</sci:legalval>
						<sci:legalval>Aligned_VSW</sci:legalval>
						<sci:legalval>Aligned_VTSA</sci:legalval>
						<sci:legalval>Aligned_SVGER</sci:legalval>
						<sci:legalval>Aligned_PSM</sci:legalval>
						<sci:legalval>Aligned_SSIA_AM1</sci:legalval>
						<sci:legalval>Aligned_SSIA_PM3</sci:legalval>
						<sci:legalval>Aligned_SSIA_HF</sci:legalval>
						<sci:legalval>Aligned_SSIA_DFT</sci:legalval>
						<sci:legalval>ACC_Zscales_Hellberg</sci:legalval>
						<sci:legalval>ACC_Zscales_Jonsson</sci:legalval>
						<sci:legalval>ACC_Zscales_Sandberg</sci:legalval>
						<sci:legalval>ACC_Zscales_binary</sci:legalval>
						<sci:legalval>ACC_Tscales</sci:legalval>
						<sci:legalval>ACC_STscales</sci:legalval>
						<sci:legalval>ACC_VHSE</sci:legalval>
						<sci:legalval selected="true">ACC_ISA_ECI</sci:legalval>
						<sci:legalval>ACC_GRID_tscore</sci:legalval>
						<sci:legalval>ACC_VSTV</sci:legalval>
						<sci:legalval>ACC_MSWHIM</sci:legalval>
						<sci:legalval>ACC_FASGAI</sci:legalval>
						<sci:legalval>ACC_BLOSUM</sci:legalval>
						<sci:legalval>ACC_VARIMAX</sci:legalval>
						<sci:legalval>ACC_ProtFP_numerical</sci:legalval>
						<sci:legalval selected="true">ACC_ProtFP_hash</sci:legalval>
						<sci:legalval>ACC_Norinder</sci:legalval>
						<sci:legalval>ACC_cscales</sci:legalval>
						<sci:legalval>ACC_DPPS</sci:legalval>
						<sci:legalval>ACC_Escales</sci:legalval>
						<sci:legalval>ACC_Gscales</sci:legalval>
						<sci:legalval>ACC_HESH</sci:legalval>
						<sci:legalval>ACC_HSEHPCSV</sci:legalval>
						<sci:legalval>ACC_Kidera</sci:legalval>
						<sci:legalval>ACC_Pscales</sci:legalval>
						<sci:legalval>ACC_QCP</sci:legalval>
						<sci:legalval>ACC_Sneath</sci:legalval>
						<sci:legalval>ACC_SVEEVA</sci:legalval>
						<sci:legalval>ACC_SVHEHS</sci:legalval>
						<sci:legalval>ACC_SVRDF</sci:legalval>
						<sci:legalval>ACC_SVRG</sci:legalval>
						<sci:legalval>ACC_SVWG</sci:legalval>
						<sci:legalval>ACC_Vscales</sci:legalval>
						<sci:legalval>ACC_VSGETAWAY</sci:legalval>
						<sci:legalval>ACC_VSTPV</sci:legalval>
						<sci:legalval>ACC_VSW</sci:legalval>
						<sci:legalval>ACC_VTSA</sci:legalval>
						<sci:legalval>ACC_SVGER</sci:legalval>
						<sci:legalval>ACC_PSM</sci:legalval>
						<sci:legalval>ACC_SSIA_AM1</sci:legalval>
						<sci:legalval>ACC_SSIA_PM3</sci:legalval>
						<sci:legalval>ACC_SSIA_HF</sci:legalval>
						<sci:legalval>ACC_SSIA_DFT</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 UseProperties UserSet" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>A comma-separated list of properties to use for learning. 
&lt;p&gt;If an item on the list contains a hyphen (e.g., &quot;X1-X5&quot;), and the properties on either side of the hyphen (e.g., &quot;X1&quot;, &quot;X5&quot;) are defined on the first data record, then all properties in that range are included. Note that the properties within the specified range are determined by the order of properties in the property list. Thus, if properties in the property list are in the following order: X1, X2, X5, X3, X4, X6, then the range &quot;X1-X5&quot; will only include properties X1, X2, and X5.&lt;/p&gt;
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;ModelBuild Stack 1 Model 1 UseProperties&apos;) eq &apos;UserSet&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 UseProperties IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>A comma-separated list of properties to exclude.  This can be used, for example, if &lt;i&gt;UseProperties&lt;/i&gt; is &lt;i&gt;AllPropertiesOnFirstData&lt;/i&gt;, but there is a small subset of properties you wish not to use in  building the model.</sci:help>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel Forest Options</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel Partial Least Squares Options</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options</sci:member>
						<sci:legalval>randomForest</sci:legalval>
						<sci:legalval selected="true">ranger</sci:legalval>
						<sci:legalval>extraTrees</sci:legalval>
						<sci:legalval>xgboost</sci:legalval>
						<sci:legalval>pls</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel Forest Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Options governing the forest of trees as a whole</sci:help>
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel Forest Options Number Of Trees</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel Forest Options Number Of Descriptors</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel Forest Options Equalize Class Sizes</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel Forest Options Node Size</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel Forest Options Number of Random Cuts</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to randomForest, ranger or extraTrees&apos;);
Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;randomForest&apos; OR Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;ranger&apos; OR Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;extraTrees&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel Forest Options Number Of Trees" type="LongType" required="true" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Number of trees to build in the ensemble</sci:help>
						<sci:value>1000</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel Forest Options Number Of Descriptors" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>Number of descriptors to use for each tree in the forest.  Options are:
&lt;ul&gt;
&lt;li&gt;Sqrt(D): Square-root of the total number of descriptors.
&lt;li&gt;Log2(D): Base-2 logarithm of the total number of descriptors.
&lt;li&gt;Specified Fraction: The value of &lt;i&gt;Specified Fraction&lt;/i&gt; multiplied by the total number of descriptors.
&lt;/ul&gt;</sci:help>
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel Forest Options Number Of Descriptors Specified Fraction</sci:member>
						<sci:legalval selected="true">Sqrt(D)</sci:legalval>
						<sci:legalval>Log2(D)</sci:legalval>
						<sci:legalval>Specified Fraction</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel Forest Options Number Of Descriptors Specified Fraction" type="DoubleType" required="true" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Fraction of descriptors to use for each tree in the forest.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Number Of Descriptors to Specified Fraction&apos;);
Parameter(&apos;Model Stack 1 Model 1 TypeOfModel Forest Options Number Of Descriptors&apos;) eq &apos;Specified Fraction&apos;</sci:enabledscript>
						<sci:value>0.3</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel Forest Options Equalize Class Sizes" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies whether to create a random data set containing an approximately equal number of members of each class for each tree in the forest.  This is recommended for unbalanced input data -- i.e., data for which the number of data records belonging to each class greatly differs. For such data, this option reduces bias and can increase both the accuracy of predictions and the speed of learning.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel Forest Options Node Size" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the &quot;nodesize&quot; argument for the R randomForest function. Any tree node containing more than nodesize samples is considered for splitting. Nodes containing this number or fewer samples are not split.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Leave blank to use R&apos;s default value (1 for classification, 5 for regression).
&lt;li&gt;The R randomForest documentation erroneously refers to nodesize as &quot;Minimum size of terminal nodes&quot;. This is not accurate in that a when a node containing greater than nodesize samples is split, one of its child nodes may contain as few as 1 sample.
&lt;/ul&gt;</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel Forest Options Number of Random Cuts" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to extraTrees&apos;);
Parameter(&apos;TypeOfModel&apos;) eq &apos;extraTrees&apos;</sci:enabledscript>
						<sci:value>8</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel Partial Least Squares Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel Partial Least Squares Options ModelType</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel Partial Least Squares Options NumberOfVariables</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to pls&apos;);
Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;pls&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel Partial Least Squares Options ModelType" type="StringType" required="true" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>ModelType</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>The type of PLS method to use. Two methods are supported: kernel-PLS and SIMPLS. See the R pls.pcr package documentation for more information.
</sci:help>
						<sci:legalval selected="true">kernel</sci:legalval>
						<sci:legalval>SIMPLS</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel Partial Least Squares Options NumberOfVariables" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>NumberOfVariables</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Maximum number of latent variables (LV) to be used for building the model. Multiple PLS models will be built containing from 1 to this number of latent variables. If not specified, the range from 1 to the number of X variables or to the number of samples, whichever is less, is used.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For compatibility with older versions of R, you may specify a range in R syntax (e.g., 5:10) rather than a single value (e.g., 10). For newer versions of R (2.0.1 and above), the lower bound of the range is ignored (1 is assumed).
&lt;li&gt;If &lt;i&gt;NumberOfVariables&lt;/i&gt; exceeds the maximum number of LV supported by the data, then the latter value is used instead.
&lt;/ul&gt;</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Options governing the structure and training of the XGBoost model</sci:help>
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options Max Depth</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options Data Fraction</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options Descriptor Fraction</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options Weighting Method</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options Booster</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options Learning Rate</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options Gamma</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options Max Trees</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to xgboost&apos;);
Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;xgboost&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options Max Trees" type="LongType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Maximum number of trees in model. When using cross-validation, the final model may have fewer trees due to optimization of the model size.</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options Learning Rate" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>The contribution of each new tree is scaled by this factor. Used to help prevent overfitting. Typically must be tuned in order to get the best model. Lower values for &lt;i&gt;Learning Rate&lt;/i&gt; require a larger value for &lt;i&gt;Number of Trees&lt;/i&gt;. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.

(Also known as &quot;eta&quot; parameter.) 

Range: (0, 1]</sci:help>
						<sci:value>0.3</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options Gamma" type="DoubleType" required="false" visibility="visible" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options Max Depth" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Maximum depth of each tree in model. Typically must be tuned in order to get the best model. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.
</sci:help>
						<sci:value>7</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options Data Fraction" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Random fraction of data to use when building each tree in model. Typically must be tuned in order to get the best model. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.

Range: (0, 1].</sci:help>
						<sci:value>1.0</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options Descriptor Fraction" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Random fraction of descriptors to consider when building each tree in model. Typically must be tuned in order to get the best model. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.

Range: (0, 1].</sci:help>
						<sci:value>0.7</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options Weighting Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>For classification models only, specifies the scheme to use in order to determine the relative importance of a sample.  Options are:
&lt;ul&gt;
&lt;li&gt;Uniform: Each sample is weighted equally.
&lt;li&gt;By Class: Each sample is weighted in inverse proportion to the number of samples in its class. Thus, minority classes are up-weighted in imbalanced data sets.
&lt;li&gt;By Class Sqrt: Uses the square-root of the By Class weighting. Provides a less extreme up-weighting of minority classes that appears to work better in some cases.
&lt;/ul&gt;</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter can be enabled by setting TypeOfPropertyToLearn to Categorical&quot;);
parameter(&quot;TypeOfPropertyToLearn&quot;) eq &quot;Categorical&quot;</sci:enabledscript>
						<sci:legalval>Uniform</sci:legalval>
						<sci:legalval selected="true">By Class</sci:legalval>
						<sci:legalval>By Class Sqrt</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options Booster" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the boosting algorithm to use. Options are:
&lt;ul&gt;
&lt;li&gt;gbtree: conventional gradient-boosting tree approach.
&lt;li&gt;dart: gradient-boosting trees with random dropout. This approach, along with a &lt;i&gt;Dropout Fraction&lt;/i&gt; greater than zero, may reduce overfitting.
&lt;/ul&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The &quot;dart&quot; option is only available in version 0.60 and above of the &quot;xgboost&quot; R package. If your R installation has an earlier version, &quot;gbtree&quot; is used irrespective of the value of &lt;i&gt;Booster&lt;/i&gt;.
&lt;/ul&gt;
</sci:help>
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options Booster Dropout Fraction</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options Booster Dropout Skip Probability</sci:member>
						<sci:legalval selected="true">gbtree</sci:legalval>
						<sci:legalval>dart</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options Booster Dropout Fraction" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>For the dart &lt;i&gt;Booster&lt;/i&gt;, specifies the random fraction of trees to ignore at each training iteration.</sci:help>
						<sci:enabledscript>parameter(&apos;Booster&apos;) eq &apos;dart&apos;</sci:enabledscript>
						<sci:value>0.2</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 TypeOfModel XGBoost Options Booster Dropout Skip Probability" type="DoubleType" required="false" visibility="visible" multi="false">
						<sci:enabledscript>parameter(&apos;Booster&apos;) eq &apos;dart&apos;</sci:enabledscript>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Feature Selection" type="StringType" required="false" visibility="visible" multi="true">
						<sci:member>ModelBuild Stack 1 Model 1 Feature Selection Genetic Algorithm Parameters</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Feature Selection Keep Best</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Feature Selection Maximum Iterations</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Feature Selection Maximum non-Improving Iterations</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Feature Selection Selection Metric</sci:member>
						<sci:legalval>Genetic Feature Selection</sci:legalval>
						<sci:legalval>Stepwise Feature Selection</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Feature Selection Selection Metric" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:member>ModelBuild Stack 1 Model 1 Feature Selection Selection Metric Selection Folds</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Feature Selection Selection Metric Selection Repeats</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Feature Selection to Stepwise or Genetic feature selection&apos;);
Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Stepwise Feature Selection&apos; OR Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Genetic Feature Selection&apos;</sci:enabledscript>
						<sci:legalval selected="true">Rsquared</sci:legalval>
						<sci:legalval>RMSE</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Feature Selection Selection Metric Selection Folds" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Feature Selection Selection Metric Selection Repeats" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Feature Selection Keep Best" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Feature Selection to Stepwise or Genetic feature selection&apos;);
Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Stepwise Feature Selection&apos; OR Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Genetic Feature Selection&apos;</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Feature Selection Maximum Iterations" type="LongType" required="false" visibility="visible" multi="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Feature Selection to Stepwise or Genetic feature selection&apos;);
Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Stepwise Feature Selection&apos; OR Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Genetic Feature Selection&apos;</sci:enabledscript>
						<sci:value>12</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Feature Selection Maximum non-Improving Iterations" type="LongType" required="false" visibility="visible" multi="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Feature Selection to Stepwise or Genetic feature selection&apos;);
Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Stepwise Feature Selection&apos; OR Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Genetic Feature Selection&apos;</sci:enabledscript>
						<sci:value>6</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Feature Selection Genetic Algorithm Parameters" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:member>ModelBuild Stack 1 Model 1 Feature Selection Genetic Algorithm Parameters Mutation</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Feature Selection Genetic Algorithm Parameters Elitism</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Feature Selection Genetic Algorithm Parameters Population Size</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Feature Selection to Stepwise or Genetic feature selection&apos;);
Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Genetic Feature Selection&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Feature Selection Genetic Algorithm Parameters Mutation" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:legalval>Mutation</sci:legalval>
						<sci:legalval>2-point Crossover with Mutation</sci:legalval>
						<sci:legalval selected="true">k-point Crossover with Mutation</sci:legalval>
						<sci:legalval>Uniform k-point Crossover with Mutation</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Feature Selection Genetic Algorithm Parameters Elitism" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Feature Selection Genetic Algorithm Parameters Population Size" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>20</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Partial Least Squares Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization XGBoost Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Forest Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Tuning Metric</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED</sci:member>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Grid Search</sci:legalval>
						<sci:legalval>Random Search</sci:legalval>
						<sci:legalval>Advanced Random Search *not implemented*</sci:legalval>
						<sci:legalval>Bayesian Optimization *not implemented*</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Tuning Metric" type="StringType" required="false" visibility="visible" multi="false">
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Tuning Metric CV Tuning Repeats</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Tuning Metric CV Tuning Folds</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Tuning Metric Max Tune Steps</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, do not set Parameter Optimization to None&apos;);
Parameter(&apos;Model Stack 1 Model 1 Parameter Optimization&apos;) ne &apos;None&apos;</sci:enabledscript>
						<sci:legalval selected="true">Rsquared</sci:legalval>
						<sci:legalval>RMSE</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Tuning Metric Max Tune Steps" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>Used by Random Search optimization to determine the maximum number of samples tried.
</sci:help>
						<sci:value>250</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Tuning Metric CV Tuning Folds" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Tuning Metric CV Tuning Repeats" type="StringType" required="false" visibility="visible" multi="false">
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Strategy</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Grid Type</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Distribution</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Hyperplane Range</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Maximum Tuning Iteration</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Maximum non-Improving Tuning Iterations</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Tolerance</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Parameter Optimization to Random Search&apos;);
Parameter(&apos;Model Stack 1 Model 1 Parameter Optimization&apos;) eq &apos;Random Search&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Strategy" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Strategy for the Random Search Parameter optimizations
&lt;BR&gt; Fixed Step Size Random Search (FSSRS) keeps the hyperplane range constant between steps and runs until the stop criterium is reached
&lt;BR&gt; Adaptive Step Size Random Search (ASSRS) changes the hyperplane range based on the model statistics drawn from either a larger range or the current range. If neither improves the model significantly in X steps, the range decreases. If the larger range improves the model, the range increases. </sci:help>
						<sci:legalval selected="true">FSSRS</sci:legalval>
						<sci:legalval>ASSRS</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Grid Type" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Determines whether parameters are projected to the discrete range (100, 125, 150) or more continuous (103, 164, 189) range.</sci:help>
						<sci:legalval selected="true">Discrete</sci:legalval>
						<sci:legalval>Continuous</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Distribution" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The distribution of the hyperspace range from which new parameters are chosen in of which the best parameter found so far is the center.</sci:help>
						<sci:legalval selected="true">Gaussian</sci:legalval>
						<sci:legalval>Laplace</sci:legalval>
						<sci:legalval>Quantile</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Hyperplane Range" type="DoubleType" required="false" visibility="visible" multi="false">
						<sci:help>Percentage of maximum range of each property from which the initial hyperplane ranges.</sci:help>
						<sci:value>0.5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Maximum Tuning Iteration" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Maximum non-Improving Tuning Iterations" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Tolerance" type="DoubleType" required="false" visibility="visible" multi="false">
						<sci:help>Determines the amount of improvement is needed to reset the maximum non-improving tuning iteration.</sci:help>
						<sci:value>0.001</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Forest Grid" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Options governing the forest of trees as a whole</sci:help>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Forest Grid Number Of Trees Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Forest Grid Number Of Descriptors Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Forest Grid Node Size Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Forest Grid Maximum Number of Nodes Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Forest Grid Maximum Depth Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Forest Grid Number of Random Cuts Grid</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to randomForest, ranger or extraTrees and Parameter Optimization to Grid Search&apos;);
(Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;randomForest&apos; OR Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;ranger&apos; OR 
  Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;extraTrees&apos;) AND Parameter(&apos;Model Stack 1 Model 1 Parameter Optimization&apos;) eq &apos;Grid Search&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Forest Grid Number Of Trees Grid" type="StringType" required="true" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Number of trees to build in the ensemble</sci:help>
						<sci:value>100, 250, 500,1000</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Forest Grid Number Of Descriptors Grid" type="StringType" required="true" visibility="visible" multi="true" expanded="true" uimpl="false">
						<sci:help>Number of descriptors to use for each tree in the forest.  Options are:
&lt;ul&gt;
&lt;li&gt;Sqrt(D): Square-root of the total number of descriptors.
&lt;li&gt;Log2(D): Base-2 logarithm of the total number of descriptors.
&lt;li&gt;Specified Fraction: The value of &lt;i&gt;Specified Fraction&lt;/i&gt; multiplied by the total number of descriptors.
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Sqrt(D)</sci:legalval>
						<sci:legalval selected="true">Log2(D)</sci:legalval>
						<sci:legalval selected="true">Fraction 10%</sci:legalval>
						<sci:legalval>Fraction 20%</sci:legalval>
						<sci:legalval>Fraction 30%</sci:legalval>
						<sci:legalval>Fraction 40%</sci:legalval>
						<sci:legalval selected="true">Fraction 50%</sci:legalval>
						<sci:legalval>Fraction 60%</sci:legalval>
						<sci:legalval>Fraction 70%</sci:legalval>
						<sci:legalval>Fraction 80%</sci:legalval>
						<sci:legalval selected="true">Fraction 90%</sci:legalval>
						<sci:legalval>Fraction 100%</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Forest Grid Node Size Grid" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the &quot;nodesize&quot; argument for the R randomForest function. Any tree node containing more than nodesize samples is considered for splitting. Nodes containing this number or fewer samples are not split.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Leave blank to use R&apos;s default value (1 for classification, 5 for regression).
&lt;li&gt;The R randomForest documentation erroneously refers to nodesize as &quot;Minimum size of terminal nodes&quot;. This is not accurate in that a when a node containing greater than nodesize samples is split, one of its child nodes may contain as few as 1 sample.
&lt;/ul&gt;</sci:help>
						<sci:value>1, 5, 7</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Forest Grid Maximum Number of Nodes Grid" type="StringType" required="false" visibility="visible" multi="false">
						<sci:value>NA,5, 7</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Forest Grid Maximum Depth Grid" type="StringType" required="false" visibility="visible" multi="false">
						<sci:value>NA, 5, 7</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Forest Grid Number of Random Cuts Grid" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to extraTrees&apos;);
Parameter(&apos;TypeOfModel&apos;) eq &apos;extraTrees&apos;</sci:enabledscript>
						<sci:value>3, 7, 10</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Partial Least Squares Grid" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization Partial Least Squares Grid Number Of Variables Grid</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to pls and Parameter Optimization to Grid Search&apos;);
Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;pls&apos; AND Parameter(&apos;Model Stack 1 Model 1 Parameter Optimization&apos;) eq &apos;Grid Search&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization Partial Least Squares Grid Number Of Variables Grid" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>NumberOfVariables</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Maximum number of latent variables (LV) to be used for building the model. Multiple PLS models will be built containing from 1 to this number of latent variables. If not specified, the range from 1 to the number of X variables or to the number of samples, whichever is less, is used.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For compatibility with older versions of R, you may specify a range in R syntax (e.g., 5:10) rather than a single value (e.g., 10). For newer versions of R (2.0.1 and above), the lower bound of the range is ignored (1 is assumed).
&lt;li&gt;If &lt;i&gt;NumberOfVariables&lt;/i&gt; exceeds the maximum number of LV supported by the data, then the latter value is used instead.
&lt;/ul&gt;</sci:help>
						<sci:value>100, 200, 300</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization XGBoost Grid" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Options governing the structure and training of the XGBoost model</sci:help>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization XGBoost Grid Max Depth Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization XGBoost Grid Data Fraction Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization XGBoost Grid Descriptor Fraction Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization XGBoost Grid Booster Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization XGBoost Grid Dropout Fraction Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization XGBoost Grid Dropout Skip Probability Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization XGBoost Grid Learning Rate Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization XGBoost Grid Gamma Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 1 Parameter Optimization XGBoost Grid Max Trees Grid</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to xgboost and Parameter Optimization to Grid Search&apos;);
Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;xgboost&apos; AND Parameter(&apos;Model Stack 1 Model 1 Parameter Optimization&apos;) eq &apos;Grid Search&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization XGBoost Grid Max Trees Grid" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Maximum number of trees in model. When using cross-validation, the final model may have fewer trees due to optimization of the model size.</sci:help>
						<sci:value>100, 250, 500,1000</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization XGBoost Grid Learning Rate Grid" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>The contribution of each new tree is scaled by this factor. Used to help prevent overfitting. Typically must be tuned in order to get the best model. Lower values for &lt;i&gt;Learning Rate&lt;/i&gt; require a larger value for &lt;i&gt;Number of Trees&lt;/i&gt;. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.

(Also known as &quot;eta&quot; parameter.) 

Range: (0, 1]</sci:help>
						<sci:value>0.1, 0.3, 0.5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization XGBoost Grid Gamma Grid" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:value>0, 0.3, 0.5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization XGBoost Grid Max Depth Grid" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Maximum depth of each tree in model. Typically must be tuned in order to get the best model. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.
</sci:help>
						<sci:value>5, 7</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization XGBoost Grid Data Fraction Grid" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Random fraction of data to use when building each tree in model. Typically must be tuned in order to get the best model. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.

Range: (0, 1].</sci:help>
						<sci:value>0.1, 0.5, 1.0</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization XGBoost Grid Descriptor Fraction Grid" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Random fraction of descriptors to consider when building each tree in model. Typically must be tuned in order to get the best model. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.

Range: (0, 1].</sci:help>
						<sci:value>0.5, 0.7</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization XGBoost Grid Booster Grid" type="StringType" required="false" visibility="visible" multi="true">
						<sci:legalval selected="true">gbtree</sci:legalval>
						<sci:legalval>dart</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization XGBoost Grid Dropout Fraction Grid" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>For the dart &lt;i&gt;Booster&lt;/i&gt;, specifies the random fraction of trees to ignore at each training iteration.</sci:help>
						<sci:enabledscript>parameter(&apos;Booster&apos;) eq &apos;dart&apos;</sci:enabledscript>
						<sci:value>0, 0.1, 0.2, 0.5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 1 Parameter Optimization XGBoost Grid Dropout Skip Probability Grid" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:enabledscript>parameter(&apos;Booster&apos;) eq &apos;dart&apos;</sci:enabledscript>
						<sci:value>0, 0.05, 0.1, 0.2</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Feature Selection</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 UseProperties</sci:member>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 UseProperties" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>The properties to learn from.  Options are:
&lt;ul&gt;
&lt;li&gt;AllPropertiesOnFirstData: Uses all properties that are found on the first data record.
&lt;li&gt;CalculablePropertiesOnFirstData: Uses all calculable properties found on the first data record.
&lt;li&gt;PredefinedSet: Uses the properties specified by &lt;i&gt;PredefinedSet&lt;/i&gt;.
&lt;li&gt;UserSet: Uses the properties specified by &lt;i&gt;UserSet&lt;/i&gt;.  Property ranges can be given by providing the first and last property in the range separated by a hyphen. Properties can be referred to by index using the word &quot;Column&quot; followed by the index, such as &quot;Column3-Column10&quot;.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For any array property used in model building, each array member is treated as a separate variable.
&lt;/ul&gt;</sci:help>
						<sci:member>ModelBuild Stack 1 Model 2 UseProperties PredefinedSet</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 UseProperties UserSet</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 UseProperties IgnoreProperties</sci:member>
						<sci:legalval>PreviouslyDefinedSet</sci:legalval>
						<sci:legalval>PreviousStackPredictionsOnly</sci:legalval>
						<sci:legalval selected="true">PredefinedSet</sci:legalval>
						<sci:legalval>UserSet</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 UseProperties PredefinedSet" type="StringType" required="false" visibility="visible" multi="true" expanded="true" uimpl="false">
						<sci:help>A list of molecular properties to use in building the model when &lt;i&gt;UseProperties&lt;/i&gt; is set to PredefinedSet</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to PredefinedSet&apos;);
Parameter(&apos;ModelBuild Stack 1 Model 1 UseProperties&apos;) eq &apos;PredefinedSet&apos;</sci:enabledscript>
						<sci:legalval>ALogP</sci:legalval>
						<sci:legalval>Molecular_Weight</sci:legalval>
						<sci:legalval>Num_H_Donors</sci:legalval>
						<sci:legalval>Num_H_Acceptors</sci:legalval>
						<sci:legalval>Num_RotatableBonds</sci:legalval>
						<sci:legalval>Num_BridgeBonds</sci:legalval>
						<sci:legalval>Num_Atoms</sci:legalval>
						<sci:legalval selected="true">Num_Rings</sci:legalval>
						<sci:legalval>Num_AromaticRings</sci:legalval>
						<sci:legalval>Num_Fragments</sci:legalval>
						<sci:legalval>NPlusO_Count</sci:legalval>
						<sci:legalval>Molecular_Solubility</sci:legalval>
						<sci:legalval>Molecular_SurfaceArea</sci:legalval>
						<sci:legalval>Molecular_PolarSurfaceArea</sci:legalval>
						<sci:legalval>Molecular_PolarSASA</sci:legalval>
						<sci:legalval>Estate_Keys</sci:legalval>
						<sci:legalval>Estate_Counts</sci:legalval>
						<sci:legalval selected="true">MDLPublicKeys</sci:legalval>
						<sci:legalval selected="true">MDL2DKeys960</sci:legalval>
						<sci:legalval>MDL2DKeys166</sci:legalval>
						<sci:legalval>PHFP2</sci:legalval>
						<sci:legalval>PHFP3</sci:legalval>
						<sci:legalval>PHFP4</sci:legalval>
						<sci:legalval>PHRFP2</sci:legalval>
						<sci:legalval>PHRFP3</sci:legalval>
						<sci:legalval>PHRFP4</sci:legalval>
						<sci:legalval>PHPFP2</sci:legalval>
						<sci:legalval>PHPFP3</sci:legalval>
						<sci:legalval>PHPFP4</sci:legalval>
						<sci:legalval>PHFC2</sci:legalval>
						<sci:legalval>PHFC3</sci:legalval>
						<sci:legalval>PHFC4</sci:legalval>
						<sci:legalval>PHPFC2</sci:legalval>
						<sci:legalval>PHPFC3</sci:legalval>
						<sci:legalval>PHPFC4</sci:legalval>
						<sci:legalval>PHRFC2</sci:legalval>
						<sci:legalval>PHRFC3</sci:legalval>
						<sci:legalval>PHRFC4</sci:legalval>
						<sci:legalval>FCFC6</sci:legalval>
						<sci:legalval>ECFC6</sci:legalval>
						<sci:legalval>LCFC6</sci:legalval>
						<sci:legalval>SCFC6</sci:legalval>
						<sci:legalval>FPFC6</sci:legalval>
						<sci:legalval>EPFC6</sci:legalval>
						<sci:legalval>LPFC6</sci:legalval>
						<sci:legalval>SPFC6</sci:legalval>
						<sci:legalval>FEFC6</sci:legalval>
						<sci:legalval>EEFC6</sci:legalval>
						<sci:legalval>LEFC6</sci:legalval>
						<sci:legalval>SEFC6</sci:legalval>
						<sci:legalval>FHFC6</sci:legalval>
						<sci:legalval>EHFC6</sci:legalval>
						<sci:legalval>LHFC6</sci:legalval>
						<sci:legalval>SHFC6</sci:legalval>
						<sci:legalval>FCFP6</sci:legalval>
						<sci:legalval>ECFP6</sci:legalval>
						<sci:legalval>LCFP6</sci:legalval>
						<sci:legalval>SCFP6</sci:legalval>
						<sci:legalval>FPFP6</sci:legalval>
						<sci:legalval>EPFP6</sci:legalval>
						<sci:legalval>LPFP6</sci:legalval>
						<sci:legalval>SPFP6</sci:legalval>
						<sci:legalval>FEFP6</sci:legalval>
						<sci:legalval>EEFP6</sci:legalval>
						<sci:legalval>LEFP6</sci:legalval>
						<sci:legalval>SEFP6</sci:legalval>
						<sci:legalval>FHFP6</sci:legalval>
						<sci:legalval>EHFP6</sci:legalval>
						<sci:legalval>LHFP6</sci:legalval>
						<sci:legalval>SHFP6</sci:legalval>
						<sci:legalval/>
						<sci:legalval>G1AminoAcidComposition</sci:legalval>
						<sci:legalval>G2DipeptideComposition</sci:legalval>
						<sci:legalval>G3AutoCorrelationDescriptors</sci:legalval>
						<sci:legalval selected="true">G4CompositionTransitionDistribution</sci:legalval>
						<sci:legalval>G5QuasiSequenceOrderDescriptors</sci:legalval>
						<sci:legalval>G6PseudoAminoAcidComposition</sci:legalval>
						<sci:legalval>G7AmphiphilicPseudoAminoAcidComposition</sci:legalval>
						<sci:legalval>G9TotalAminoAcidProperties</sci:legalval>
						<sci:legalval>Aligned_Zscales_Hellberg</sci:legalval>
						<sci:legalval>Aligned_Zscales_Jonsson</sci:legalval>
						<sci:legalval>Aligned_Zscales_Sandberg</sci:legalval>
						<sci:legalval>Aligned_Zscales_binary</sci:legalval>
						<sci:legalval>Aligned_Tscales</sci:legalval>
						<sci:legalval>Aligned_STscales</sci:legalval>
						<sci:legalval>Aligned_VHSE</sci:legalval>
						<sci:legalval>Aligned_ISA_ECI</sci:legalval>
						<sci:legalval>Aligned_GRID_tscore</sci:legalval>
						<sci:legalval>Aligned_VSTV</sci:legalval>
						<sci:legalval>Aligned_MSWHIM</sci:legalval>
						<sci:legalval>Aligned_FASGAI</sci:legalval>
						<sci:legalval>Aligned_BLOSUM</sci:legalval>
						<sci:legalval>Aligned_VARIMAX</sci:legalval>
						<sci:legalval>Aligned_ProtFP_numerical</sci:legalval>
						<sci:legalval>Aligned_ProtFP_hash</sci:legalval>
						<sci:legalval>Aligned_Norinder</sci:legalval>
						<sci:legalval>Aligned_cscales</sci:legalval>
						<sci:legalval>Aligned_DPPS</sci:legalval>
						<sci:legalval>Aligned_Escales</sci:legalval>
						<sci:legalval>Aligned_Gscales</sci:legalval>
						<sci:legalval>Aligned_HESH</sci:legalval>
						<sci:legalval>Aligned_HSEHPCSV</sci:legalval>
						<sci:legalval>Aligned_Kidera</sci:legalval>
						<sci:legalval>Aligned_Pscales</sci:legalval>
						<sci:legalval>Aligned_QCP</sci:legalval>
						<sci:legalval>Aligned_Sneath</sci:legalval>
						<sci:legalval>Aligned_SVEEVA</sci:legalval>
						<sci:legalval>Aligned_SVHEHS</sci:legalval>
						<sci:legalval>Aligned_SVRDF</sci:legalval>
						<sci:legalval>Aligned_SVRG</sci:legalval>
						<sci:legalval>Aligned_SVWG</sci:legalval>
						<sci:legalval>Aligned_Vscales</sci:legalval>
						<sci:legalval>Aligned_VSGETAWAY</sci:legalval>
						<sci:legalval>Aligned_VSTPV</sci:legalval>
						<sci:legalval>Aligned_VSW</sci:legalval>
						<sci:legalval>Aligned_VTSA</sci:legalval>
						<sci:legalval>Aligned_SVGER</sci:legalval>
						<sci:legalval>Aligned_PSM</sci:legalval>
						<sci:legalval>Aligned_SSIA_AM1</sci:legalval>
						<sci:legalval>Aligned_SSIA_PM3</sci:legalval>
						<sci:legalval>Aligned_SSIA_HF</sci:legalval>
						<sci:legalval>Aligned_SSIA_DFT</sci:legalval>
						<sci:legalval selected="true">ACC_Zscales_Hellberg</sci:legalval>
						<sci:legalval>ACC_Zscales_Jonsson</sci:legalval>
						<sci:legalval>ACC_Zscales_Sandberg</sci:legalval>
						<sci:legalval>ACC_Zscales_binary</sci:legalval>
						<sci:legalval>ACC_Tscales</sci:legalval>
						<sci:legalval>ACC_STscales</sci:legalval>
						<sci:legalval>ACC_VHSE</sci:legalval>
						<sci:legalval>ACC_ISA_ECI</sci:legalval>
						<sci:legalval>ACC_GRID_tscore</sci:legalval>
						<sci:legalval>ACC_VSTV</sci:legalval>
						<sci:legalval>ACC_MSWHIM</sci:legalval>
						<sci:legalval>ACC_FASGAI</sci:legalval>
						<sci:legalval>ACC_BLOSUM</sci:legalval>
						<sci:legalval>ACC_VARIMAX</sci:legalval>
						<sci:legalval>ACC_ProtFP_numerical</sci:legalval>
						<sci:legalval>ACC_ProtFP_hash</sci:legalval>
						<sci:legalval>ACC_Norinder</sci:legalval>
						<sci:legalval>ACC_cscales</sci:legalval>
						<sci:legalval>ACC_DPPS</sci:legalval>
						<sci:legalval>ACC_Escales</sci:legalval>
						<sci:legalval>ACC_Gscales</sci:legalval>
						<sci:legalval>ACC_HESH</sci:legalval>
						<sci:legalval selected="true">ACC_HSEHPCSV</sci:legalval>
						<sci:legalval>ACC_Kidera</sci:legalval>
						<sci:legalval>ACC_Pscales</sci:legalval>
						<sci:legalval>ACC_QCP</sci:legalval>
						<sci:legalval>ACC_Sneath</sci:legalval>
						<sci:legalval selected="true">ACC_SVEEVA</sci:legalval>
						<sci:legalval>ACC_SVHEHS</sci:legalval>
						<sci:legalval>ACC_SVRDF</sci:legalval>
						<sci:legalval>ACC_SVRG</sci:legalval>
						<sci:legalval>ACC_SVWG</sci:legalval>
						<sci:legalval>ACC_Vscales</sci:legalval>
						<sci:legalval>ACC_VSGETAWAY</sci:legalval>
						<sci:legalval>ACC_VSTPV</sci:legalval>
						<sci:legalval>ACC_VSW</sci:legalval>
						<sci:legalval>ACC_VTSA</sci:legalval>
						<sci:legalval>ACC_SVGER</sci:legalval>
						<sci:legalval selected="true">ACC_PSM</sci:legalval>
						<sci:legalval>ACC_SSIA_AM1</sci:legalval>
						<sci:legalval>ACC_SSIA_PM3</sci:legalval>
						<sci:legalval>ACC_SSIA_HF</sci:legalval>
						<sci:legalval>ACC_SSIA_DFT</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 UseProperties UserSet" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>A comma-separated list of properties to use for learning. 
&lt;p&gt;If an item on the list contains a hyphen (e.g., &quot;X1-X5&quot;), and the properties on either side of the hyphen (e.g., &quot;X1&quot;, &quot;X5&quot;) are defined on the first data record, then all properties in that range are included. Note that the properties within the specified range are determined by the order of properties in the property list. Thus, if properties in the property list are in the following order: X1, X2, X5, X3, X4, X6, then the range &quot;X1-X5&quot; will only include properties X1, X2, and X5.&lt;/p&gt;
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;ModelBuild Stack 1 Model 1 UseProperties&apos;) eq &apos;UserSet&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 UseProperties IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>A comma-separated list of properties to exclude.  This can be used, for example, if &lt;i&gt;UseProperties&lt;/i&gt; is &lt;i&gt;AllPropertiesOnFirstData&lt;/i&gt;, but there is a small subset of properties you wish not to use in  building the model.</sci:help>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel Forest Options</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel Partial Least Squares Options</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options</sci:member>
						<sci:legalval>randomForest</sci:legalval>
						<sci:legalval>ranger</sci:legalval>
						<sci:legalval>extraTrees</sci:legalval>
						<sci:legalval selected="true">xgboost</sci:legalval>
						<sci:legalval>pls</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel Forest Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Options governing the forest of trees as a whole</sci:help>
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel Forest Options Number Of Trees</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel Forest Options Number Of Descriptors</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel Forest Options Equalize Class Sizes</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel Forest Options Node Size</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel Forest Options Number of Random Cuts</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to randomForest, ranger or extraTrees&apos;);
Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;randomForest&apos; OR Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;ranger&apos; OR Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;extraTrees&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel Forest Options Number Of Trees" type="LongType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Number of trees to build in the ensemble</sci:help>
						<sci:value>500</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel Forest Options Number Of Descriptors" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Number of descriptors to use for each tree in the forest.  Options are:
&lt;ul&gt;
&lt;li&gt;Sqrt(D): Square-root of the total number of descriptors.
&lt;li&gt;Log2(D): Base-2 logarithm of the total number of descriptors.
&lt;li&gt;Specified Fraction: The value of &lt;i&gt;Specified Fraction&lt;/i&gt; multiplied by the total number of descriptors.
&lt;/ul&gt;</sci:help>
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel Forest Options Number Of Descriptors Specified Fraction</sci:member>
						<sci:legalval selected="true">Sqrt(D)</sci:legalval>
						<sci:legalval>Log2(D)</sci:legalval>
						<sci:legalval>Specified Fraction</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel Forest Options Number Of Descriptors Specified Fraction" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Fraction of descriptors to use for each tree in the forest.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Number Of Descriptors to Specified Fraction&apos;);
Parameter(&apos;Model Stack 1 Model 1 TypeOfModel Forest Options Number Of Descriptors&apos;) eq &apos;Specified Fraction&apos;</sci:enabledscript>
						<sci:value>0.3</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel Forest Options Equalize Class Sizes" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies whether to create a random data set containing an approximately equal number of members of each class for each tree in the forest.  This is recommended for unbalanced input data -- i.e., data for which the number of data records belonging to each class greatly differs. For such data, this option reduces bias and can increase both the accuracy of predictions and the speed of learning.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel Forest Options Node Size" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the &quot;nodesize&quot; argument for the R randomForest function. Any tree node containing more than nodesize samples is considered for splitting. Nodes containing this number or fewer samples are not split.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Leave blank to use R&apos;s default value (1 for classification, 5 for regression).
&lt;li&gt;The R randomForest documentation erroneously refers to nodesize as &quot;Minimum size of terminal nodes&quot;. This is not accurate in that a when a node containing greater than nodesize samples is split, one of its child nodes may contain as few as 1 sample.
&lt;/ul&gt;</sci:help>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel Forest Options Number of Random Cuts" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to extraTrees&apos;);
Parameter(&apos;TypeOfModel&apos;) eq &apos;extraTrees&apos;</sci:enabledscript>
						<sci:value>8</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel Partial Least Squares Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel Partial Least Squares Options ModelType</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel Partial Least Squares Options NumberOfVariables</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to pls&apos;);
Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;pls&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel Partial Least Squares Options ModelType" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>ModelType</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>The type of PLS method to use. Two methods are supported: kernel-PLS and SIMPLS. See the R pls.pcr package documentation for more information.
</sci:help>
						<sci:legalval selected="true">kernel</sci:legalval>
						<sci:legalval>SIMPLS</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel Partial Least Squares Options NumberOfVariables" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>NumberOfVariables</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Maximum number of latent variables (LV) to be used for building the model. Multiple PLS models will be built containing from 1 to this number of latent variables. If not specified, the range from 1 to the number of X variables or to the number of samples, whichever is less, is used.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For compatibility with older versions of R, you may specify a range in R syntax (e.g., 5:10) rather than a single value (e.g., 10). For newer versions of R (2.0.1 and above), the lower bound of the range is ignored (1 is assumed).
&lt;li&gt;If &lt;i&gt;NumberOfVariables&lt;/i&gt; exceeds the maximum number of LV supported by the data, then the latter value is used instead.
&lt;/ul&gt;</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>Options governing the structure and training of the XGBoost model</sci:help>
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options Max Depth</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options Data Fraction</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options Descriptor Fraction</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options Weighting Method</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options Booster</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options Learning Rate</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options Gamma</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options Max Trees</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to xgboost&apos;);
Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;xgboost&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options Max Trees" type="LongType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Maximum number of trees in model. When using cross-validation, the final model may have fewer trees due to optimization of the model size.</sci:help>
						<sci:value>1000</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options Learning Rate" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>The contribution of each new tree is scaled by this factor. Used to help prevent overfitting. Typically must be tuned in order to get the best model. Lower values for &lt;i&gt;Learning Rate&lt;/i&gt; require a larger value for &lt;i&gt;Number of Trees&lt;/i&gt;. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.

(Also known as &quot;eta&quot; parameter.) 

Range: (0, 1]</sci:help>
						<sci:value>0.1</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options Gamma" type="DoubleType" required="false" visibility="visible" multi="false">
						<sci:value>0.5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options Max Depth" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Maximum depth of each tree in model. Typically must be tuned in order to get the best model. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.
</sci:help>
						<sci:value>7</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options Data Fraction" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Random fraction of data to use when building each tree in model. Typically must be tuned in order to get the best model. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.

Range: (0, 1].</sci:help>
						<sci:value>1.0</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options Descriptor Fraction" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Random fraction of descriptors to consider when building each tree in model. Typically must be tuned in order to get the best model. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.

Range: (0, 1].</sci:help>
						<sci:value>0.5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options Weighting Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>For classification models only, specifies the scheme to use in order to determine the relative importance of a sample.  Options are:
&lt;ul&gt;
&lt;li&gt;Uniform: Each sample is weighted equally.
&lt;li&gt;By Class: Each sample is weighted in inverse proportion to the number of samples in its class. Thus, minority classes are up-weighted in imbalanced data sets.
&lt;li&gt;By Class Sqrt: Uses the square-root of the By Class weighting. Provides a less extreme up-weighting of minority classes that appears to work better in some cases.
&lt;/ul&gt;</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter can be enabled by setting TypeOfPropertyToLearn to Categorical&quot;);
parameter(&quot;TypeOfPropertyToLearn&quot;) eq &quot;Categorical&quot;</sci:enabledscript>
						<sci:legalval>Uniform</sci:legalval>
						<sci:legalval selected="true">By Class</sci:legalval>
						<sci:legalval>By Class Sqrt</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options Booster" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the boosting algorithm to use. Options are:
&lt;ul&gt;
&lt;li&gt;gbtree: conventional gradient-boosting tree approach.
&lt;li&gt;dart: gradient-boosting trees with random dropout. This approach, along with a &lt;i&gt;Dropout Fraction&lt;/i&gt; greater than zero, may reduce overfitting.
&lt;/ul&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The &quot;dart&quot; option is only available in version 0.60 and above of the &quot;xgboost&quot; R package. If your R installation has an earlier version, &quot;gbtree&quot; is used irrespective of the value of &lt;i&gt;Booster&lt;/i&gt;.
&lt;/ul&gt;
</sci:help>
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options Booster Dropout Fraction</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options Booster Dropout Skip Probability</sci:member>
						<sci:legalval selected="true">gbtree</sci:legalval>
						<sci:legalval>dart</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options Booster Dropout Fraction" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>For the dart &lt;i&gt;Booster&lt;/i&gt;, specifies the random fraction of trees to ignore at each training iteration.</sci:help>
						<sci:enabledscript>parameter(&apos;Booster&apos;) eq &apos;dart&apos;</sci:enabledscript>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 TypeOfModel XGBoost Options Booster Dropout Skip Probability" type="DoubleType" required="false" visibility="visible" multi="false">
						<sci:enabledscript>parameter(&apos;Booster&apos;) eq &apos;dart&apos;</sci:enabledscript>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Feature Selection" type="StringType" required="false" visibility="visible" multi="true">
						<sci:member>ModelBuild Stack 1 Model 2 Feature Selection Genetic Algorithm Parameters</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Feature Selection Keep Best</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Feature Selection Maximum Iterations</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Feature Selection Maximum non-Improving Iterations</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Feature Selection Selection Metric</sci:member>
						<sci:legalval>Genetic Feature Selection</sci:legalval>
						<sci:legalval>Stepwise Feature Selection</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Feature Selection Selection Metric" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:member>ModelBuild Stack 1 Model 2 Feature Selection Selection Metric Selection Folds</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Feature Selection Selection Metric Selection Repeats</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Feature Selection to Stepwise or Genetic feature selection&apos;);
Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Stepwise Feature Selection&apos; OR Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Genetic Feature Selection&apos;</sci:enabledscript>
						<sci:legalval selected="true">Rsquared</sci:legalval>
						<sci:legalval>RMSE</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Feature Selection Selection Metric Selection Folds" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Feature Selection Selection Metric Selection Repeats" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Feature Selection Keep Best" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Feature Selection to Stepwise or Genetic feature selection&apos;);
Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Stepwise Feature Selection&apos; OR Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Genetic Feature Selection&apos;</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Feature Selection Maximum Iterations" type="LongType" required="false" visibility="visible" multi="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Feature Selection to Stepwise or Genetic feature selection&apos;);
Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Stepwise Feature Selection&apos; OR Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Genetic Feature Selection&apos;</sci:enabledscript>
						<sci:value>12</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Feature Selection Maximum non-Improving Iterations" type="LongType" required="false" visibility="visible" multi="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Feature Selection to Stepwise or Genetic feature selection&apos;);
Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Stepwise Feature Selection&apos; OR Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Genetic Feature Selection&apos;</sci:enabledscript>
						<sci:value>6</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Feature Selection Genetic Algorithm Parameters" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:member>ModelBuild Stack 1 Model 2 Feature Selection Genetic Algorithm Parameters Mutation</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Feature Selection Genetic Algorithm Parameters Elitism</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Feature Selection Genetic Algorithm Parameters Population Size</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Feature Selection to Stepwise or Genetic feature selection&apos;);
Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Genetic Feature Selection&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Feature Selection Genetic Algorithm Parameters Mutation" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:legalval>Mutation</sci:legalval>
						<sci:legalval>2-point Crossover with Mutation</sci:legalval>
						<sci:legalval selected="true">k-point Crossover with Mutation</sci:legalval>
						<sci:legalval>Uniform k-point Crossover with Mutation</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Feature Selection Genetic Algorithm Parameters Elitism" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Feature Selection Genetic Algorithm Parameters Population Size" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>20</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Partial Least Squares Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization XGBoost Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Forest Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Tuning Metric</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Random Search Parameters NOT IMPLEMENTED</sci:member>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Grid Search</sci:legalval>
						<sci:legalval>Random Search</sci:legalval>
						<sci:legalval>Advanced Random Search *not implemented*</sci:legalval>
						<sci:legalval>Bayesian Optimization *not implemented*</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Tuning Metric" type="StringType" required="false" visibility="visible" multi="false">
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Tuning Metric CV Tuning Repeats</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Tuning Metric CV Tuning Folds</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Tuning Metric Max Tune Steps</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, do not set Parameter Optimization to None&apos;);
Parameter(&apos;Model Stack 1 Model 1 Parameter Optimization&apos;) ne &apos;None&apos;</sci:enabledscript>
						<sci:legalval selected="true">Rsquared</sci:legalval>
						<sci:legalval>RMSE</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Tuning Metric Max Tune Steps" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>Used by Random Search optimization to determine the maximum number of samples tried.
</sci:help>
						<sci:value>250</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Tuning Metric CV Tuning Folds" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Tuning Metric CV Tuning Repeats" type="StringType" required="false" visibility="visible" multi="false">
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Random Search Parameters NOT IMPLEMENTED" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Strategy</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Grid Type</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Distribution</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Hyperplane Range</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Maximum Tuning Iteration</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Maximum non-Improving Tuning Iterations</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Tolerance</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Parameter Optimization to Random Search&apos;);
Parameter(&apos;Model Stack 1 Model 1 Parameter Optimization&apos;) eq &apos;Random Search&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Strategy" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Strategy for the Random Search Parameter optimizations
&lt;BR&gt; Fixed Step Size Random Search (FSSRS) keeps the hyperplane range constant between steps and runs until the stop criterium is reached
&lt;BR&gt; Adaptive Step Size Random Search (ASSRS) changes the hyperplane range based on the model statistics drawn from either a larger range or the current range. If neither improves the model significantly in X steps, the range decreases. If the larger range improves the model, the range increases. </sci:help>
						<sci:legalval selected="true">FSSRS</sci:legalval>
						<sci:legalval>ASSRS</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Grid Type" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Determines whether parameters are projected to the discrete range (100, 125, 150) or more continuous (103, 164, 189) range.</sci:help>
						<sci:legalval selected="true">Discrete</sci:legalval>
						<sci:legalval>Continuous</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Distribution" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The distribution of the hyperspace range from which new parameters are chosen in of which the best parameter found so far is the center.</sci:help>
						<sci:legalval selected="true">Gaussian</sci:legalval>
						<sci:legalval>Laplace</sci:legalval>
						<sci:legalval>Quantile</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Hyperplane Range" type="DoubleType" required="false" visibility="visible" multi="false">
						<sci:help>Percentage of maximum range of each property from which the initial hyperplane ranges.</sci:help>
						<sci:value>0.5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Maximum Tuning Iteration" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Maximum non-Improving Tuning Iterations" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Tolerance" type="DoubleType" required="false" visibility="visible" multi="false">
						<sci:help>Determines the amount of improvement is needed to reset the maximum non-improving tuning iteration.</sci:help>
						<sci:value>0.001</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Forest Grid" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Options governing the forest of trees as a whole</sci:help>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Forest Grid Number Of Trees Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Forest Grid Number Of Descriptors Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Forest Grid Node Size Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Forest Grid Maximum Number of Nodes Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Forest Grid Maximum Depth Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Forest Grid Number of Random Cuts Grid</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to randomForest, ranger or extraTrees and Parameter Optimization to Grid Search&apos;);
(Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;randomForest&apos; OR Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;ranger&apos; OR 
  Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;extraTrees&apos;) AND Parameter(&apos;Model Stack 1 Model 1 Parameter Optimization&apos;) eq &apos;Grid Search&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Forest Grid Number Of Trees Grid" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Number of trees to build in the ensemble</sci:help>
						<sci:value>100, 250, 500,1000</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Forest Grid Number Of Descriptors Grid" type="StringType" required="false" visibility="visible" multi="true" expanded="true" uimpl="false">
						<sci:help>Number of descriptors to use for each tree in the forest.  Options are:
&lt;ul&gt;
&lt;li&gt;Sqrt(D): Square-root of the total number of descriptors.
&lt;li&gt;Log2(D): Base-2 logarithm of the total number of descriptors.
&lt;li&gt;Specified Fraction: The value of &lt;i&gt;Specified Fraction&lt;/i&gt; multiplied by the total number of descriptors.
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Sqrt(D)</sci:legalval>
						<sci:legalval selected="true">Log2(D)</sci:legalval>
						<sci:legalval selected="true">Fraction 10%</sci:legalval>
						<sci:legalval>Fraction 20%</sci:legalval>
						<sci:legalval>Fraction 30%</sci:legalval>
						<sci:legalval>Fraction 40%</sci:legalval>
						<sci:legalval selected="true">Fraction 50%</sci:legalval>
						<sci:legalval>Fraction 60%</sci:legalval>
						<sci:legalval>Fraction 70%</sci:legalval>
						<sci:legalval>Fraction 80%</sci:legalval>
						<sci:legalval selected="true">Fraction 90%</sci:legalval>
						<sci:legalval>Fraction 100%</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Forest Grid Node Size Grid" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the &quot;nodesize&quot; argument for the R randomForest function. Any tree node containing more than nodesize samples is considered for splitting. Nodes containing this number or fewer samples are not split.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Leave blank to use R&apos;s default value (1 for classification, 5 for regression).
&lt;li&gt;The R randomForest documentation erroneously refers to nodesize as &quot;Minimum size of terminal nodes&quot;. This is not accurate in that a when a node containing greater than nodesize samples is split, one of its child nodes may contain as few as 1 sample.
&lt;/ul&gt;</sci:help>
						<sci:value>1, 5, 7</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Forest Grid Maximum Number of Nodes Grid" type="StringType" required="false" visibility="visible" multi="false">
						<sci:value>NA,5, 7</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Forest Grid Maximum Depth Grid" type="StringType" required="false" visibility="visible" multi="false">
						<sci:value>NA, 5, 7</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Forest Grid Number of Random Cuts Grid" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to extraTrees&apos;);
Parameter(&apos;TypeOfModel&apos;) eq &apos;extraTrees&apos;</sci:enabledscript>
						<sci:value>3, 7, 10</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Partial Least Squares Grid" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization Partial Least Squares Grid Number Of Variables Grid</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to pls and Parameter Optimization to Grid Search&apos;);
Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;pls&apos; AND Parameter(&apos;Model Stack 1 Model 1 Parameter Optimization&apos;) eq &apos;Grid Search&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization Partial Least Squares Grid Number Of Variables Grid" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>NumberOfVariables</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Maximum number of latent variables (LV) to be used for building the model. Multiple PLS models will be built containing from 1 to this number of latent variables. If not specified, the range from 1 to the number of X variables or to the number of samples, whichever is less, is used.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For compatibility with older versions of R, you may specify a range in R syntax (e.g., 5:10) rather than a single value (e.g., 10). For newer versions of R (2.0.1 and above), the lower bound of the range is ignored (1 is assumed).
&lt;li&gt;If &lt;i&gt;NumberOfVariables&lt;/i&gt; exceeds the maximum number of LV supported by the data, then the latter value is used instead.
&lt;/ul&gt;</sci:help>
						<sci:value>100, 200, 300</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization XGBoost Grid" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Options governing the structure and training of the XGBoost model</sci:help>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization XGBoost Grid Max Depth Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization XGBoost Grid Data Fraction Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization XGBoost Grid Descriptor Fraction Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization XGBoost Grid Booster Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization XGBoost Grid Dropout Fraction Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization XGBoost Grid Dropout Skip Probability Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization XGBoost Grid Learning Rate Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization XGBoost Grid Gamma Grid</sci:member>
						<sci:member>ModelBuild Stack 1 Model 2 Parameter Optimization XGBoost Grid Max Trees Grid</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to xgboost and Parameter Optimization to Grid Search&apos;);
Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;xgboost&apos; AND Parameter(&apos;Model Stack 1 Model 1 Parameter Optimization&apos;) eq &apos;Grid Search&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization XGBoost Grid Max Trees Grid" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Maximum number of trees in model. When using cross-validation, the final model may have fewer trees due to optimization of the model size.</sci:help>
						<sci:value>100, 250, 500,1000</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization XGBoost Grid Learning Rate Grid" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>The contribution of each new tree is scaled by this factor. Used to help prevent overfitting. Typically must be tuned in order to get the best model. Lower values for &lt;i&gt;Learning Rate&lt;/i&gt; require a larger value for &lt;i&gt;Number of Trees&lt;/i&gt;. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.

(Also known as &quot;eta&quot; parameter.) 

Range: (0, 1]</sci:help>
						<sci:value>0.1, 0.3, 0.5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization XGBoost Grid Gamma Grid" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:value>0, 0.3, 0.5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization XGBoost Grid Max Depth Grid" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Maximum depth of each tree in model. Typically must be tuned in order to get the best model. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.
</sci:help>
						<sci:value>5, 7</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization XGBoost Grid Data Fraction Grid" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Random fraction of data to use when building each tree in model. Typically must be tuned in order to get the best model. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.

Range: (0, 1].</sci:help>
						<sci:value>0.1, 0.5, 1.0</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization XGBoost Grid Descriptor Fraction Grid" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Random fraction of descriptors to consider when building each tree in model. Typically must be tuned in order to get the best model. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.

Range: (0, 1].</sci:help>
						<sci:value>0.5, 0.7</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization XGBoost Grid Booster Grid" type="StringType" required="false" visibility="visible" multi="true">
						<sci:legalval selected="true">gbtree</sci:legalval>
						<sci:legalval>dart</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization XGBoost Grid Dropout Fraction Grid" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>For the dart &lt;i&gt;Booster&lt;/i&gt;, specifies the random fraction of trees to ignore at each training iteration.</sci:help>
						<sci:enabledscript>parameter(&apos;Booster&apos;) eq &apos;dart&apos;</sci:enabledscript>
						<sci:value>0, 0.1, 0.2, 0.5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 1 Model 2 Parameter Optimization XGBoost Grid Dropout Skip Probability Grid" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:enabledscript>parameter(&apos;Booster&apos;) eq &apos;dart&apos;</sci:enabledscript>
						<sci:value>0, 0.05, 0.1, 0.2</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2" type="GroupType" required="false" visibility="visible" multi="true" legalvalsenforced="false" uimpl="false">
						<sci:member>ModelBuild Stack 2 Model 1</sci:member>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Feature Selection</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 UseProperties</sci:member>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 UseProperties" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>The properties to learn from.  Options are:
&lt;ul&gt;
&lt;li&gt;AllPropertiesOnFirstData: Uses all properties that are found on the first data record.
&lt;li&gt;CalculablePropertiesOnFirstData: Uses all calculable properties found on the first data record.
&lt;li&gt;PredefinedSet: Uses the properties specified by &lt;i&gt;PredefinedSet&lt;/i&gt;.
&lt;li&gt;UserSet: Uses the properties specified by &lt;i&gt;UserSet&lt;/i&gt;.  Property ranges can be given by providing the first and last property in the range separated by a hyphen. Properties can be referred to by index using the word &quot;Column&quot; followed by the index, such as &quot;Column3-Column10&quot;.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For any array property used in model building, each array member is treated as a separate variable.
&lt;/ul&gt;</sci:help>
						<sci:member>ModelBuild Stack 2 Model 1 UseProperties PredefinedSet</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 UseProperties UserSet</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 UseProperties IgnoreProperties</sci:member>
						<sci:legalval>PreviouslyDefinedSet</sci:legalval>
						<sci:legalval selected="true">PreviousStackPredictionsOnly</sci:legalval>
						<sci:legalval>PredefinedSet</sci:legalval>
						<sci:legalval>UserSet</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 UseProperties PredefinedSet" type="StringType" required="false" visibility="visible" multi="true" expanded="true" uimpl="false">
						<sci:help>A list of molecular properties to use in building the model when &lt;i&gt;UseProperties&lt;/i&gt; is set to PredefinedSet</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to PredefinedSet&apos;);
Parameter(&apos;ModelBuild Stack 1 Model 1 UseProperties&apos;) eq &apos;PredefinedSet&apos;</sci:enabledscript>
						<sci:legalval>ALogP</sci:legalval>
						<sci:legalval>Molecular_Weight</sci:legalval>
						<sci:legalval selected="true">Num_H_Donors</sci:legalval>
						<sci:legalval>Num_H_Acceptors</sci:legalval>
						<sci:legalval selected="true">Num_RotatableBonds</sci:legalval>
						<sci:legalval>Num_BridgeBonds</sci:legalval>
						<sci:legalval selected="true">Num_Atoms</sci:legalval>
						<sci:legalval>Num_Rings</sci:legalval>
						<sci:legalval>Num_AromaticRings</sci:legalval>
						<sci:legalval>Num_Fragments</sci:legalval>
						<sci:legalval>NPlusO_Count</sci:legalval>
						<sci:legalval selected="true">Molecular_Solubility</sci:legalval>
						<sci:legalval selected="true">Molecular_SurfaceArea</sci:legalval>
						<sci:legalval>Molecular_PolarSurfaceArea</sci:legalval>
						<sci:legalval>Molecular_PolarSASA</sci:legalval>
						<sci:legalval>Estate_Keys</sci:legalval>
						<sci:legalval>Estate_Counts</sci:legalval>
						<sci:legalval>MDLPublicKeys</sci:legalval>
						<sci:legalval>MDL2DKeys960</sci:legalval>
						<sci:legalval>MDL2DKeys166</sci:legalval>
						<sci:legalval>PHFP2</sci:legalval>
						<sci:legalval>PHFP3</sci:legalval>
						<sci:legalval>PHFP4</sci:legalval>
						<sci:legalval>PHRFP2</sci:legalval>
						<sci:legalval>PHRFP3</sci:legalval>
						<sci:legalval>PHRFP4</sci:legalval>
						<sci:legalval>PHPFP2</sci:legalval>
						<sci:legalval>PHPFP3</sci:legalval>
						<sci:legalval>PHPFP4</sci:legalval>
						<sci:legalval>PHFC2</sci:legalval>
						<sci:legalval>PHFC3</sci:legalval>
						<sci:legalval>PHFC4</sci:legalval>
						<sci:legalval selected="true">PHPFC2</sci:legalval>
						<sci:legalval>PHPFC3</sci:legalval>
						<sci:legalval>PHPFC4</sci:legalval>
						<sci:legalval selected="true">PHRFC2</sci:legalval>
						<sci:legalval>PHRFC3</sci:legalval>
						<sci:legalval>PHRFC4</sci:legalval>
						<sci:legalval>FCFC6</sci:legalval>
						<sci:legalval>ECFC6</sci:legalval>
						<sci:legalval>LCFC6</sci:legalval>
						<sci:legalval selected="true">SCFC6</sci:legalval>
						<sci:legalval>FPFC6</sci:legalval>
						<sci:legalval>EPFC6</sci:legalval>
						<sci:legalval>LPFC6</sci:legalval>
						<sci:legalval>SPFC6</sci:legalval>
						<sci:legalval>FEFC6</sci:legalval>
						<sci:legalval>EEFC6</sci:legalval>
						<sci:legalval>LEFC6</sci:legalval>
						<sci:legalval>SEFC6</sci:legalval>
						<sci:legalval>FHFC6</sci:legalval>
						<sci:legalval>EHFC6</sci:legalval>
						<sci:legalval>LHFC6</sci:legalval>
						<sci:legalval>SHFC6</sci:legalval>
						<sci:legalval>FCFP6</sci:legalval>
						<sci:legalval>ECFP6</sci:legalval>
						<sci:legalval>LCFP6</sci:legalval>
						<sci:legalval>SCFP6</sci:legalval>
						<sci:legalval>FPFP6</sci:legalval>
						<sci:legalval>EPFP6</sci:legalval>
						<sci:legalval>LPFP6</sci:legalval>
						<sci:legalval>SPFP6</sci:legalval>
						<sci:legalval>FEFP6</sci:legalval>
						<sci:legalval>EEFP6</sci:legalval>
						<sci:legalval>LEFP6</sci:legalval>
						<sci:legalval>SEFP6</sci:legalval>
						<sci:legalval>FHFP6</sci:legalval>
						<sci:legalval>EHFP6</sci:legalval>
						<sci:legalval>LHFP6</sci:legalval>
						<sci:legalval>SHFP6</sci:legalval>
						<sci:legalval/>
						<sci:legalval>G1AminoAcidComposition</sci:legalval>
						<sci:legalval>G2DipeptideComposition</sci:legalval>
						<sci:legalval>G3AutoCorrelationDescriptors</sci:legalval>
						<sci:legalval>G4CompositionTransitionDistribution</sci:legalval>
						<sci:legalval>G5QuasiSequenceOrderDescriptors</sci:legalval>
						<sci:legalval>G6PseudoAminoAcidComposition</sci:legalval>
						<sci:legalval>G7AmphiphilicPseudoAminoAcidComposition</sci:legalval>
						<sci:legalval selected="true">G9TotalAminoAcidProperties</sci:legalval>
						<sci:legalval>Aligned_Zscales_Hellberg</sci:legalval>
						<sci:legalval>Aligned_Zscales_Jonsson</sci:legalval>
						<sci:legalval>Aligned_Zscales_Sandberg</sci:legalval>
						<sci:legalval>Aligned_Zscales_binary</sci:legalval>
						<sci:legalval>Aligned_Tscales</sci:legalval>
						<sci:legalval>Aligned_STscales</sci:legalval>
						<sci:legalval>Aligned_VHSE</sci:legalval>
						<sci:legalval>Aligned_ISA_ECI</sci:legalval>
						<sci:legalval>Aligned_GRID_tscore</sci:legalval>
						<sci:legalval>Aligned_VSTV</sci:legalval>
						<sci:legalval>Aligned_MSWHIM</sci:legalval>
						<sci:legalval>Aligned_FASGAI</sci:legalval>
						<sci:legalval>Aligned_BLOSUM</sci:legalval>
						<sci:legalval>Aligned_VARIMAX</sci:legalval>
						<sci:legalval>Aligned_ProtFP_numerical</sci:legalval>
						<sci:legalval>Aligned_ProtFP_hash</sci:legalval>
						<sci:legalval>Aligned_Norinder</sci:legalval>
						<sci:legalval>Aligned_cscales</sci:legalval>
						<sci:legalval>Aligned_DPPS</sci:legalval>
						<sci:legalval>Aligned_Escales</sci:legalval>
						<sci:legalval>Aligned_Gscales</sci:legalval>
						<sci:legalval>Aligned_HESH</sci:legalval>
						<sci:legalval>Aligned_HSEHPCSV</sci:legalval>
						<sci:legalval>Aligned_Kidera</sci:legalval>
						<sci:legalval>Aligned_Pscales</sci:legalval>
						<sci:legalval>Aligned_QCP</sci:legalval>
						<sci:legalval>Aligned_Sneath</sci:legalval>
						<sci:legalval>Aligned_SVEEVA</sci:legalval>
						<sci:legalval>Aligned_SVHEHS</sci:legalval>
						<sci:legalval>Aligned_SVRDF</sci:legalval>
						<sci:legalval>Aligned_SVRG</sci:legalval>
						<sci:legalval>Aligned_SVWG</sci:legalval>
						<sci:legalval>Aligned_Vscales</sci:legalval>
						<sci:legalval>Aligned_VSGETAWAY</sci:legalval>
						<sci:legalval>Aligned_VSTPV</sci:legalval>
						<sci:legalval>Aligned_VSW</sci:legalval>
						<sci:legalval>Aligned_VTSA</sci:legalval>
						<sci:legalval>Aligned_SVGER</sci:legalval>
						<sci:legalval>Aligned_PSM</sci:legalval>
						<sci:legalval>Aligned_SSIA_AM1</sci:legalval>
						<sci:legalval>Aligned_SSIA_PM3</sci:legalval>
						<sci:legalval>Aligned_SSIA_HF</sci:legalval>
						<sci:legalval>Aligned_SSIA_DFT</sci:legalval>
						<sci:legalval>ACC_Zscales_Hellberg</sci:legalval>
						<sci:legalval>ACC_Zscales_Jonsson</sci:legalval>
						<sci:legalval>ACC_Zscales_Sandberg</sci:legalval>
						<sci:legalval>ACC_Zscales_binary</sci:legalval>
						<sci:legalval>ACC_Tscales</sci:legalval>
						<sci:legalval>ACC_STscales</sci:legalval>
						<sci:legalval>ACC_VHSE</sci:legalval>
						<sci:legalval selected="true">ACC_ISA_ECI</sci:legalval>
						<sci:legalval>ACC_GRID_tscore</sci:legalval>
						<sci:legalval>ACC_VSTV</sci:legalval>
						<sci:legalval>ACC_MSWHIM</sci:legalval>
						<sci:legalval>ACC_FASGAI</sci:legalval>
						<sci:legalval>ACC_BLOSUM</sci:legalval>
						<sci:legalval>ACC_VARIMAX</sci:legalval>
						<sci:legalval>ACC_ProtFP_numerical</sci:legalval>
						<sci:legalval selected="true">ACC_ProtFP_hash</sci:legalval>
						<sci:legalval>ACC_Norinder</sci:legalval>
						<sci:legalval>ACC_cscales</sci:legalval>
						<sci:legalval>ACC_DPPS</sci:legalval>
						<sci:legalval>ACC_Escales</sci:legalval>
						<sci:legalval>ACC_Gscales</sci:legalval>
						<sci:legalval>ACC_HESH</sci:legalval>
						<sci:legalval>ACC_HSEHPCSV</sci:legalval>
						<sci:legalval>ACC_Kidera</sci:legalval>
						<sci:legalval>ACC_Pscales</sci:legalval>
						<sci:legalval>ACC_QCP</sci:legalval>
						<sci:legalval>ACC_Sneath</sci:legalval>
						<sci:legalval>ACC_SVEEVA</sci:legalval>
						<sci:legalval>ACC_SVHEHS</sci:legalval>
						<sci:legalval>ACC_SVRDF</sci:legalval>
						<sci:legalval>ACC_SVRG</sci:legalval>
						<sci:legalval>ACC_SVWG</sci:legalval>
						<sci:legalval>ACC_Vscales</sci:legalval>
						<sci:legalval>ACC_VSGETAWAY</sci:legalval>
						<sci:legalval>ACC_VSTPV</sci:legalval>
						<sci:legalval>ACC_VSW</sci:legalval>
						<sci:legalval>ACC_VTSA</sci:legalval>
						<sci:legalval>ACC_SVGER</sci:legalval>
						<sci:legalval>ACC_PSM</sci:legalval>
						<sci:legalval>ACC_SSIA_AM1</sci:legalval>
						<sci:legalval>ACC_SSIA_PM3</sci:legalval>
						<sci:legalval>ACC_SSIA_HF</sci:legalval>
						<sci:legalval>ACC_SSIA_DFT</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 UseProperties UserSet" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>A comma-separated list of properties to use for learning. 
&lt;p&gt;If an item on the list contains a hyphen (e.g., &quot;X1-X5&quot;), and the properties on either side of the hyphen (e.g., &quot;X1&quot;, &quot;X5&quot;) are defined on the first data record, then all properties in that range are included. Note that the properties within the specified range are determined by the order of properties in the property list. Thus, if properties in the property list are in the following order: X1, X2, X5, X3, X4, X6, then the range &quot;X1-X5&quot; will only include properties X1, X2, and X5.&lt;/p&gt;
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;ModelBuild Stack 1 Model 1 UseProperties&apos;) eq &apos;UserSet&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 UseProperties IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>A comma-separated list of properties to exclude.  This can be used, for example, if &lt;i&gt;UseProperties&lt;/i&gt; is &lt;i&gt;AllPropertiesOnFirstData&lt;/i&gt;, but there is a small subset of properties you wish not to use in  building the model.</sci:help>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel Forest Options</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel Partial Least Squares Options</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options</sci:member>
						<sci:legalval>randomForest</sci:legalval>
						<sci:legalval>ranger</sci:legalval>
						<sci:legalval>extraTrees</sci:legalval>
						<sci:legalval>xgboost</sci:legalval>
						<sci:legalval selected="true">pls</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel Forest Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Options governing the forest of trees as a whole</sci:help>
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel Forest Options Number Of Trees</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel Forest Options Number Of Descriptors</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel Forest Options Equalize Class Sizes</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel Forest Options Node Size</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel Forest Options Number of Random Cuts</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to randomForest, ranger or extraTrees&apos;);
Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;randomForest&apos; OR Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;ranger&apos; OR Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;extraTrees&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel Forest Options Number Of Trees" type="LongType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Number of trees to build in the ensemble</sci:help>
						<sci:value>1000</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel Forest Options Number Of Descriptors" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Number of descriptors to use for each tree in the forest.  Options are:
&lt;ul&gt;
&lt;li&gt;Sqrt(D): Square-root of the total number of descriptors.
&lt;li&gt;Log2(D): Base-2 logarithm of the total number of descriptors.
&lt;li&gt;Specified Fraction: The value of &lt;i&gt;Specified Fraction&lt;/i&gt; multiplied by the total number of descriptors.
&lt;/ul&gt;</sci:help>
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel Forest Options Number Of Descriptors Specified Fraction</sci:member>
						<sci:legalval selected="true">Sqrt(D)</sci:legalval>
						<sci:legalval>Log2(D)</sci:legalval>
						<sci:legalval>Specified Fraction</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel Forest Options Number Of Descriptors Specified Fraction" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Fraction of descriptors to use for each tree in the forest.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Number Of Descriptors to Specified Fraction&apos;);
Parameter(&apos;Model Stack 1 Model 1 TypeOfModel Forest Options Number Of Descriptors&apos;) eq &apos;Specified Fraction&apos;</sci:enabledscript>
						<sci:value>0.3</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel Forest Options Equalize Class Sizes" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>Specifies whether to create a random data set containing an approximately equal number of members of each class for each tree in the forest.  This is recommended for unbalanced input data -- i.e., data for which the number of data records belonging to each class greatly differs. For such data, this option reduces bias and can increase both the accuracy of predictions and the speed of learning.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel Forest Options Node Size" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the &quot;nodesize&quot; argument for the R randomForest function. Any tree node containing more than nodesize samples is considered for splitting. Nodes containing this number or fewer samples are not split.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Leave blank to use R&apos;s default value (1 for classification, 5 for regression).
&lt;li&gt;The R randomForest documentation erroneously refers to nodesize as &quot;Minimum size of terminal nodes&quot;. This is not accurate in that a when a node containing greater than nodesize samples is split, one of its child nodes may contain as few as 1 sample.
&lt;/ul&gt;</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel Forest Options Number of Random Cuts" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to extraTrees&apos;);
Parameter(&apos;TypeOfModel&apos;) eq &apos;extraTrees&apos;</sci:enabledscript>
						<sci:value>8</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel Partial Least Squares Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel Partial Least Squares Options ModelType</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel Partial Least Squares Options NumberOfVariables</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to pls&apos;);
Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;pls&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel Partial Least Squares Options ModelType" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>ModelType</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>The type of PLS method to use. Two methods are supported: kernel-PLS and SIMPLS. See the R pls.pcr package documentation for more information.
</sci:help>
						<sci:legalval selected="true">kernel</sci:legalval>
						<sci:legalval>SIMPLS</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel Partial Least Squares Options NumberOfVariables" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>NumberOfVariables</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Maximum number of latent variables (LV) to be used for building the model. Multiple PLS models will be built containing from 1 to this number of latent variables. If not specified, the range from 1 to the number of X variables or to the number of samples, whichever is less, is used.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For compatibility with older versions of R, you may specify a range in R syntax (e.g., 5:10) rather than a single value (e.g., 10). For newer versions of R (2.0.1 and above), the lower bound of the range is ignored (1 is assumed).
&lt;li&gt;If &lt;i&gt;NumberOfVariables&lt;/i&gt; exceeds the maximum number of LV supported by the data, then the latter value is used instead.
&lt;/ul&gt;</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Options governing the structure and training of the XGBoost model</sci:help>
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options Max Depth</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options Data Fraction</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options Descriptor Fraction</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options Weighting Method</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options Booster</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options Learning Rate</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options Gamma</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options Max Trees</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to xgboost&apos;);
Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;xgboost&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options Max Trees" type="LongType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Maximum number of trees in model. When using cross-validation, the final model may have fewer trees due to optimization of the model size.</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options Learning Rate" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>The contribution of each new tree is scaled by this factor. Used to help prevent overfitting. Typically must be tuned in order to get the best model. Lower values for &lt;i&gt;Learning Rate&lt;/i&gt; require a larger value for &lt;i&gt;Number of Trees&lt;/i&gt;. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.

(Also known as &quot;eta&quot; parameter.) 

Range: (0, 1]</sci:help>
						<sci:value>0.3</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options Gamma" type="DoubleType" required="false" visibility="visible" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options Max Depth" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Maximum depth of each tree in model. Typically must be tuned in order to get the best model. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.
</sci:help>
						<sci:value>7</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options Data Fraction" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Random fraction of data to use when building each tree in model. Typically must be tuned in order to get the best model. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.

Range: (0, 1].</sci:help>
						<sci:value>1.0</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options Descriptor Fraction" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Random fraction of descriptors to consider when building each tree in model. Typically must be tuned in order to get the best model. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.

Range: (0, 1].</sci:help>
						<sci:value>0.7</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options Weighting Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>For classification models only, specifies the scheme to use in order to determine the relative importance of a sample.  Options are:
&lt;ul&gt;
&lt;li&gt;Uniform: Each sample is weighted equally.
&lt;li&gt;By Class: Each sample is weighted in inverse proportion to the number of samples in its class. Thus, minority classes are up-weighted in imbalanced data sets.
&lt;li&gt;By Class Sqrt: Uses the square-root of the By Class weighting. Provides a less extreme up-weighting of minority classes that appears to work better in some cases.
&lt;/ul&gt;</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter can be enabled by setting TypeOfPropertyToLearn to Categorical&quot;);
parameter(&quot;TypeOfPropertyToLearn&quot;) eq &quot;Categorical&quot;</sci:enabledscript>
						<sci:legalval>Uniform</sci:legalval>
						<sci:legalval selected="true">By Class</sci:legalval>
						<sci:legalval>By Class Sqrt</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options Booster" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the boosting algorithm to use. Options are:
&lt;ul&gt;
&lt;li&gt;gbtree: conventional gradient-boosting tree approach.
&lt;li&gt;dart: gradient-boosting trees with random dropout. This approach, along with a &lt;i&gt;Dropout Fraction&lt;/i&gt; greater than zero, may reduce overfitting.
&lt;/ul&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The &quot;dart&quot; option is only available in version 0.60 and above of the &quot;xgboost&quot; R package. If your R installation has an earlier version, &quot;gbtree&quot; is used irrespective of the value of &lt;i&gt;Booster&lt;/i&gt;.
&lt;/ul&gt;
</sci:help>
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options Booster Dropout Fraction</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options Booster Dropout Skip Probability</sci:member>
						<sci:legalval selected="true">gbtree</sci:legalval>
						<sci:legalval>dart</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options Booster Dropout Fraction" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>For the dart &lt;i&gt;Booster&lt;/i&gt;, specifies the random fraction of trees to ignore at each training iteration.</sci:help>
						<sci:enabledscript>parameter(&apos;Booster&apos;) eq &apos;dart&apos;</sci:enabledscript>
						<sci:value>0.2</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 TypeOfModel XGBoost Options Booster Dropout Skip Probability" type="DoubleType" required="false" visibility="visible" multi="false">
						<sci:enabledscript>parameter(&apos;Booster&apos;) eq &apos;dart&apos;</sci:enabledscript>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Feature Selection" type="StringType" required="false" visibility="visible" multi="true">
						<sci:member>ModelBuild Stack 2 Model 1 Feature Selection Genetic Algorithm Parameters</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Feature Selection Keep Best</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Feature Selection Maximum Iterations</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Feature Selection Maximum non-Improving Iterations</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Feature Selection Selection Metric</sci:member>
						<sci:legalval>Genetic Feature Selection</sci:legalval>
						<sci:legalval>Stepwise Feature Selection</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Feature Selection Selection Metric" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:member>ModelBuild Stack 2 Model 1 Feature Selection Selection Metric Selection Folds</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Feature Selection Selection Metric Selection Repeats</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Feature Selection to Stepwise or Genetic feature selection&apos;);
Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Stepwise Feature Selection&apos; OR Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Genetic Feature Selection&apos;</sci:enabledscript>
						<sci:legalval selected="true">Rsquared</sci:legalval>
						<sci:legalval>RMSE</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Feature Selection Selection Metric Selection Folds" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Feature Selection Selection Metric Selection Repeats" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Feature Selection Keep Best" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Feature Selection to Stepwise or Genetic feature selection&apos;);
Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Stepwise Feature Selection&apos; OR Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Genetic Feature Selection&apos;</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Feature Selection Maximum Iterations" type="LongType" required="false" visibility="visible" multi="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Feature Selection to Stepwise or Genetic feature selection&apos;);
Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Stepwise Feature Selection&apos; OR Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Genetic Feature Selection&apos;</sci:enabledscript>
						<sci:value>12</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Feature Selection Maximum non-Improving Iterations" type="LongType" required="false" visibility="visible" multi="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Feature Selection to Stepwise or Genetic feature selection&apos;);
Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Stepwise Feature Selection&apos; OR Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Genetic Feature Selection&apos;</sci:enabledscript>
						<sci:value>6</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Feature Selection Genetic Algorithm Parameters" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:member>ModelBuild Stack 2 Model 1 Feature Selection Genetic Algorithm Parameters Mutation</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Feature Selection Genetic Algorithm Parameters Elitism</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Feature Selection Genetic Algorithm Parameters Population Size</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Feature Selection to Stepwise or Genetic feature selection&apos;);
Parameter(&apos;Model Stack 1 Model 1 Feature Selection&apos;) eq &apos;Genetic Feature Selection&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Feature Selection Genetic Algorithm Parameters Mutation" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:legalval>Mutation</sci:legalval>
						<sci:legalval>2-point Crossover with Mutation</sci:legalval>
						<sci:legalval selected="true">k-point Crossover with Mutation</sci:legalval>
						<sci:legalval>Uniform k-point Crossover with Mutation</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Feature Selection Genetic Algorithm Parameters Elitism" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Feature Selection Genetic Algorithm Parameters Population Size" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>20</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Partial Least Squares Grid</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization XGBoost Grid</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Forest Grid</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Tuning Metric</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED</sci:member>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Grid Search</sci:legalval>
						<sci:legalval>Random Search</sci:legalval>
						<sci:legalval>Advanced Random Search *not implemented*</sci:legalval>
						<sci:legalval>Bayesian Optimization *not implemented*</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Tuning Metric" type="StringType" required="false" visibility="visible" multi="false">
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Tuning Metric CV Tuning Repeats</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Tuning Metric CV Tuning Folds</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Tuning Metric Max Tune Steps</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, do not set Parameter Optimization to None&apos;);
Parameter(&apos;Model Stack 1 Model 1 Parameter Optimization&apos;) ne &apos;None&apos;</sci:enabledscript>
						<sci:legalval selected="true">Rsquared</sci:legalval>
						<sci:legalval>RMSE</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Tuning Metric Max Tune Steps" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>Used by Random Search optimization to determine the maximum number of samples tried.
</sci:help>
						<sci:value>250</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Tuning Metric CV Tuning Folds" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Tuning Metric CV Tuning Repeats" type="StringType" required="false" visibility="visible" multi="false">
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Strategy</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Grid Type</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Distribution</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Hyperplane Range</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Maximum Tuning Iteration</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Maximum non-Improving Tuning Iterations</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Tolerance</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Parameter Optimization to Random Search&apos;);
Parameter(&apos;Model Stack 1 Model 1 Parameter Optimization&apos;) eq &apos;Random Search&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Strategy" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Strategy for the Random Search Parameter optimizations
&lt;BR&gt; Fixed Step Size Random Search (FSSRS) keeps the hyperplane range constant between steps and runs until the stop criterium is reached
&lt;BR&gt; Adaptive Step Size Random Search (ASSRS) changes the hyperplane range based on the model statistics drawn from either a larger range or the current range. If neither improves the model significantly in X steps, the range decreases. If the larger range improves the model, the range increases. </sci:help>
						<sci:legalval selected="true">FSSRS</sci:legalval>
						<sci:legalval>ASSRS</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Grid Type" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Determines whether parameters are projected to the discrete range (100, 125, 150) or more continuous (103, 164, 189) range.</sci:help>
						<sci:legalval selected="true">Discrete</sci:legalval>
						<sci:legalval>Continuous</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Distribution" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The distribution of the hyperspace range from which new parameters are chosen in of which the best parameter found so far is the center.</sci:help>
						<sci:legalval selected="true">Gaussian</sci:legalval>
						<sci:legalval>Laplace</sci:legalval>
						<sci:legalval>Quantile</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Hyperplane Range" type="DoubleType" required="false" visibility="visible" multi="false">
						<sci:help>Percentage of maximum range of each property from which the initial hyperplane ranges.</sci:help>
						<sci:value>0.5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Maximum Tuning Iteration" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Maximum non-Improving Tuning Iterations" type="LongType" required="false" visibility="visible" multi="false">
						<sci:value>5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Random Search Parameters NOT IMPLEMENTED Tolerance" type="DoubleType" required="false" visibility="visible" multi="false">
						<sci:help>Determines the amount of improvement is needed to reset the maximum non-improving tuning iteration.</sci:help>
						<sci:value>0.001</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Forest Grid" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Options governing the forest of trees as a whole</sci:help>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Forest Grid Number Of Trees Grid</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Forest Grid Number Of Descriptors Grid</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Forest Grid Node Size Grid</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Forest Grid Maximum Number of Nodes Grid</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Forest Grid Maximum Depth Grid</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Forest Grid Number of Random Cuts Grid</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to randomForest, ranger or extraTrees and Parameter Optimization to Grid Search&apos;);
(Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;randomForest&apos; OR Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;ranger&apos; OR 
  Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;extraTrees&apos;) AND Parameter(&apos;Model Stack 1 Model 1 Parameter Optimization&apos;) eq &apos;Grid Search&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Forest Grid Number Of Trees Grid" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Number of trees to build in the ensemble</sci:help>
						<sci:value>100, 250, 500,1000</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Forest Grid Number Of Descriptors Grid" type="StringType" required="false" visibility="visible" multi="true" expanded="true" uimpl="false">
						<sci:help>Number of descriptors to use for each tree in the forest.  Options are:
&lt;ul&gt;
&lt;li&gt;Sqrt(D): Square-root of the total number of descriptors.
&lt;li&gt;Log2(D): Base-2 logarithm of the total number of descriptors.
&lt;li&gt;Specified Fraction: The value of &lt;i&gt;Specified Fraction&lt;/i&gt; multiplied by the total number of descriptors.
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Sqrt(D)</sci:legalval>
						<sci:legalval selected="true">Log2(D)</sci:legalval>
						<sci:legalval selected="true">Fraction 10%</sci:legalval>
						<sci:legalval>Fraction 20%</sci:legalval>
						<sci:legalval>Fraction 30%</sci:legalval>
						<sci:legalval>Fraction 40%</sci:legalval>
						<sci:legalval selected="true">Fraction 50%</sci:legalval>
						<sci:legalval>Fraction 60%</sci:legalval>
						<sci:legalval>Fraction 70%</sci:legalval>
						<sci:legalval>Fraction 80%</sci:legalval>
						<sci:legalval selected="true">Fraction 90%</sci:legalval>
						<sci:legalval>Fraction 100%</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Forest Grid Node Size Grid" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the &quot;nodesize&quot; argument for the R randomForest function. Any tree node containing more than nodesize samples is considered for splitting. Nodes containing this number or fewer samples are not split.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Leave blank to use R&apos;s default value (1 for classification, 5 for regression).
&lt;li&gt;The R randomForest documentation erroneously refers to nodesize as &quot;Minimum size of terminal nodes&quot;. This is not accurate in that a when a node containing greater than nodesize samples is split, one of its child nodes may contain as few as 1 sample.
&lt;/ul&gt;</sci:help>
						<sci:value>1, 5, 7</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Forest Grid Maximum Number of Nodes Grid" type="StringType" required="false" visibility="visible" multi="false">
						<sci:value>NA,5, 7</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Forest Grid Maximum Depth Grid" type="StringType" required="false" visibility="visible" multi="false">
						<sci:value>NA, 5, 7</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Forest Grid Number of Random Cuts Grid" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to extraTrees&apos;);
Parameter(&apos;TypeOfModel&apos;) eq &apos;extraTrees&apos;</sci:enabledscript>
						<sci:value>3, 7, 10</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Partial Least Squares Grid" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization Partial Least Squares Grid Number Of Variables Grid</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to pls and Parameter Optimization to Grid Search&apos;);
Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;pls&apos; AND Parameter(&apos;Model Stack 1 Model 1 Parameter Optimization&apos;) eq &apos;Grid Search&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization Partial Least Squares Grid Number Of Variables Grid" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>NumberOfVariables</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Maximum number of latent variables (LV) to be used for building the model. Multiple PLS models will be built containing from 1 to this number of latent variables. If not specified, the range from 1 to the number of X variables or to the number of samples, whichever is less, is used.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For compatibility with older versions of R, you may specify a range in R syntax (e.g., 5:10) rather than a single value (e.g., 10). For newer versions of R (2.0.1 and above), the lower bound of the range is ignored (1 is assumed).
&lt;li&gt;If &lt;i&gt;NumberOfVariables&lt;/i&gt; exceeds the maximum number of LV supported by the data, then the latter value is used instead.
&lt;/ul&gt;</sci:help>
						<sci:value>100, 200, 300</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization XGBoost Grid" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Options governing the structure and training of the XGBoost model</sci:help>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization XGBoost Grid Max Depth Grid</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization XGBoost Grid Data Fraction Grid</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization XGBoost Grid Descriptor Fraction Grid</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization XGBoost Grid Booster Grid</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization XGBoost Grid Dropout Fraction Grid</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization XGBoost Grid Dropout Skip Probability Grid</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization XGBoost Grid Learning Rate Grid</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization XGBoost Grid Gamma Grid</sci:member>
						<sci:member>ModelBuild Stack 2 Model 1 Parameter Optimization XGBoost Grid Max Trees Grid</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set TypeOfModel to xgboost and Parameter Optimization to Grid Search&apos;);
Parameter(&apos;Model Stack 1 Model 1 TypeOfModel&apos;) eq &apos;xgboost&apos; AND Parameter(&apos;Model Stack 1 Model 1 Parameter Optimization&apos;) eq &apos;Grid Search&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization XGBoost Grid Max Trees Grid" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Maximum number of trees in model. When using cross-validation, the final model may have fewer trees due to optimization of the model size.</sci:help>
						<sci:value>100, 250, 500,1000</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization XGBoost Grid Learning Rate Grid" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>The contribution of each new tree is scaled by this factor. Used to help prevent overfitting. Typically must be tuned in order to get the best model. Lower values for &lt;i&gt;Learning Rate&lt;/i&gt; require a larger value for &lt;i&gt;Number of Trees&lt;/i&gt;. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.

(Also known as &quot;eta&quot; parameter.) 

Range: (0, 1]</sci:help>
						<sci:value>0.1, 0.3, 0.5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization XGBoost Grid Gamma Grid" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:value>0, 0.3, 0.5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization XGBoost Grid Max Depth Grid" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Maximum depth of each tree in model. Typically must be tuned in order to get the best model. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.
</sci:help>
						<sci:value>5, 7</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization XGBoost Grid Data Fraction Grid" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Random fraction of data to use when building each tree in model. Typically must be tuned in order to get the best model. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.

Range: (0, 1].</sci:help>
						<sci:value>0.1, 0.5, 1.0</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization XGBoost Grid Descriptor Fraction Grid" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Random fraction of descriptors to consider when building each tree in model. Typically must be tuned in order to get the best model. 

You may specify a single value, a comma-separated list of values, or any R expression generating a vector of values. If you enter multiple values, a temporary model is built for each value. If &lt;i&gt;CrossValidate&lt;/i&gt; is set to True, cross-validation is performed for each value. The combination of parameter values giving the best fit or best cross-validation predictions is used to build the final model from all the data.

Range: (0, 1].</sci:help>
						<sci:value>0.5, 0.7</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization XGBoost Grid Booster Grid" type="StringType" required="false" visibility="visible" multi="true">
						<sci:legalval selected="true">gbtree</sci:legalval>
						<sci:legalval>dart</sci:legalval>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization XGBoost Grid Dropout Fraction Grid" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>For the dart &lt;i&gt;Booster&lt;/i&gt;, specifies the random fraction of trees to ignore at each training iteration.</sci:help>
						<sci:enabledscript>parameter(&apos;Booster&apos;) eq &apos;dart&apos;</sci:enabledscript>
						<sci:value>0, 0.1, 0.2, 0.5</sci:value>
					</sci:arg>
					<sci:arg name="ModelBuild Stack 2 Model 1 Parameter Optimization XGBoost Grid Dropout Skip Probability Grid" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:enabledscript>parameter(&apos;Booster&apos;) eq &apos;dart&apos;</sci:enabledscript>
						<sci:value>0, 0.05, 0.1, 0.2</sci:value>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>LEARNNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{D835D941-1672-5E49-B0FF-50A670219731}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>954 -1545</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>(09/13/2019) Stacking not optimal; Shapley not implemented</sci:value>
						<sci:value>The model is a classification or regression model for a property specified by &lt;i&gt;Name&lt;/i&gt;, based on the properties specified by &lt;i&gt;UseProperties&lt;/i&gt;.
&lt;p&gt;
See &lt;i&gt;ROutput&lt;/i&gt; for output options which, in addition to the usual FitSummary and FitPlot options, include an option to output property importance values.
&lt;p&gt;
Once the model has been fitted, a new component with a name given by &lt;i&gt;LearnedPropertyName&lt;/i&gt; is created on your user tab, in the folder LearnedProperties/R Models.  This component contains the fitted model and can be used to make predictions for new  sets of data.  

For classification models (categorical Y property), the output produced by the model component is a property whose name is also given by &lt;i&gt;LearnedPropertyName&lt;/i&gt; and contains the predicted class (category) for each input data record.  In addition, one property for each possible class is output, containing the predicted probability that the data record belongs to the class.  Each of these properties has as its name the class name, prefixed by the value of &lt;i&gt;LearnedPropertyName&lt;/i&gt;.
&lt;p&gt;
For regression models (continuous Y property) the output produced by the model component is a property whose name is also given by &lt;i&gt;LearnedPropertyName&lt;/i&gt; and contains the predicted Y property value for each input data record.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Requires R package &quot;randomForest&quot;.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To evaluate a classification model against a test set of data, use the &lt;a href=&quot;javascript:DoLink(&apos;{2E590EF8-6E3A-4554-A131-8D3AD568DFDA}&apos;)&quot;&gt;ROC Plot Viewer&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6F75B0E4-F5FF-4490-88CC-F53D2E3316E9}&apos;)&quot;&gt;Enrichment Plot Viewer&lt;/a&gt;.
&lt;li&gt;To display ROC plots and compare ROC scores between multiple classification models, use the &lt;a href=&quot;javascript:DoLink(&apos;{27910028-CF29-49E9-B23C-EF951C8B184A}&apos;)&quot;&gt;Classification Model Evaluation Viewer&lt;/a&gt;. If your data contain more than two classes, this viewer reports a composite ROC score based on an average over all of the classes in the data, in addition to the individual components contributing to the average.
&lt;li&gt;To display plots of actual-versus-predicted values and compare RMS error between multiple regression models, use the &lt;a href=&quot;javascript:DoLink(&apos;{677F9529-03FC-4A18-8619-03A0F657F3B1}&apos;)&quot;&gt;Regression Model Evaluation Viewer&lt;/a&gt;.
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/rstats/docs/r_stats.pdf&apos;)&quot;&gt;R Statistics Components User Guide &lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://www.r-project.org/&apos;)&quot;&gt;R Project for Statistical Computing Web Site&lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://finzi.psych.upenn.edu/search.html&apos;)&quot;&gt;R Help Search Web Site&lt;/a&gt;
&lt;/ul&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data to be learned</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Model summary and plots</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records with missing or invalid values</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>18.1.100.11</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>peter</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed Sep 11 09:45:53 2019</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>R Learn (09/03/2019)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>8</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/rstats</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Protocols\Shared\Peter\RP1\R Learn</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="HTML Table Viewer" version="2">
							<sci:arg name="Maximum Rows" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies the maximum number of table rows in the HTML page</sci:help>
								<sci:value>11</sci:value>
							</sci:arg>
							<sci:arg name="Rows Per Page" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The number of rows displayed on each page</sci:help>
								<sci:value>11</sci:value>
							</sci:arg>
							<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The optional title of the HTML document</sci:help>
								<sci:value>$(LearnedPropertyName) - Model Statistics</sci:value>
							</sci:arg>
							<sci:arg name="Freeze Table Header" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;When set to True, this table&apos;s header and title will remain visible when the table is scrolled vertically.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This feature only applies to HTML reports.&lt;/li&gt;
	&lt;li&gt;The fixed header behavior depends on what container (e.g., plain browser window, Tile component, Dynamic Content Container) that the Table is piped into.&lt;/li&gt; 
	&lt;li&gt;To create a table of fixed pixel height, set this parameter to True and pipe this table into a Dynamic Content Container of fixed (i.e., non-percentage) height.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Use Default Browser" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
								<sci:metaproplist>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Browser</sci:value>
									</sci:mpropval>
								</sci:metaproplist>
								<sci:help>&lt;p&gt;
This parameter is only relevant when running the protocol in the Pipeline Pilot Professional Client.
&lt;/p&gt;
&lt;p&gt;
The value specifies whether to use your default desktop web browser to view the HTML table. When set to False, Internet Explorer is used as a standard fallback option. If IE is your default browser, it is used in either case.
&lt;/p&gt;
</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
								<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
								<sci:value>temphtml</sci:value>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
								<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
								<sci:value>HTML Filename</sci:value>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
								<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Internet Explorer" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>The location for Internet Explorer</sci:help>
								<sci:value>internetexplorer.application</sci:value>
							</sci:arg>
							<sci:arg name="Chrome" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>The location for Chrome</sci:help>
								<sci:value>&quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot;</sci:value>
							</sci:arg>
							<sci:arg name="Firefox" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
								<sci:help>The location for Firefox</sci:help>
								<sci:value>&quot;C:\Program Files (x86)\Mozilla Firefox\firefox.exe&quot;</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
								<sci:legalval>Cant Replace With Copy</sci:legalval>
								<sci:legalval>Cant Open</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Oct 23 17:05:34 2015</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>HTML Table Viewer</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ViewerNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolCommentSize" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>ProtocolCommentSize</sci:help>
								<sci:value>1100 500</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{F6A20C96-BC1C-48f3-82E9-4D8F023F82EE}</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Displays data records as HTML in a web browser</sci:value>
								<sci:value>&lt;p&gt;Generates and displays an HTML table page of data records, with one record per row. Each property becomes a column in the table and each value a cell.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Molecules will be displayed if present.&lt;/li&gt;
&lt;li&gt;For hierarchical data records, only top level properties are displayed.&lt;/li&gt;
&lt;li&gt;Any grouped data is displayed in nested tables.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you prefer not to view the grouped data, use &lt;a href=&quot;javascript:DoLink(&apos;{ACCDEEEF-FEED-4B27-B263-BA531EABFC9C}&apos;)&quot;&gt;Delete Children&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For more control over the display of molecules, use &lt;a href=&quot;javascript:DoLink(&apos;{485D30CD-737C-4AD3-89C9-F81CB20E47AE}&apos;)&quot;&gt;HTML Molecular Table Viewer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>16.1.0.1089</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>95</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Viewers\HTML Table Viewer</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Learn R Forest Model" version="2">
							<sci:arg name="RScript" type="LinkSingleParentParameterType" required="true" visibility="visible" multi="false">
								<sci:help>R script for building the model.</sci:help>
								<sci:value>RScript</sci:value>
							</sci:arg>
							<sci:arg name="RModelScript" type="LinkSingleParentParameterType" required="true" visibility="visible" multi="false">
								<sci:help>Body of R script for running the built model.  Boilerplate script will be prepended and appended for reading input data and writing results.  Input data will be placed in a variable named x, and output results should be placed in a variable named pred.</sci:help>
								<sci:value>RModelScript</sci:value>
							</sci:arg>
							<sci:arg name="RFunctionsScript" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:propval name="SCI_InitializeUsingOrigType">TextType</sci:propval>
								</sci:metaproplist>
								<sci:value>RFunctionsScript</sci:value>
							</sci:arg>
							<sci:arg name="Seed" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false">
								<sci:metaproplist>
									<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
								</sci:metaproplist>
								<sci:value>Seed</sci:value>
							</sci:arg>
							<sci:arg name="Convert Fingerprints To" type="LinkParentParameterType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:metaproplist>
									<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
								</sci:metaproplist>
								<sci:help>This option controls the automatic conversion of fingerprint properties into different format</sci:help>
								<sci:member>Fixed Length</sci:member>
								<sci:value>Convert Fingerprints To</sci:value>
							</sci:arg>
							<sci:arg name="Destination Folder" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Name of component database folder in which the learned model is to be saved.</sci:help>
								<sci:value>Destination Folder</sci:value>
							</sci:arg>
							<sci:arg name="RParallel" type="LinkParentParameterType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
								<sci:help>Only works for the models ranger and xgboost</sci:help>
								<sci:member>Num Threads</sci:member>
								<sci:value>RParallel</sci:value>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="TextType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:value>ExtraModelParameters,RExitStatus,PlotName,RFunctionsFile,pass,ShowRScript,ShowRStdOutput,s,calcProps,FitSummary,RModelBin,DoPlot,DoSummary,PointInfoText,CalculatedProperties,RParScript,RPlotWidth,RPlotHeight,DoImportance,DoImportancePlots,RFfpname,proptokens,ii,STRProtectedSection</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:value>$(R_Run_Remote)</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>100000000</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
								<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>$(R_Server)</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:value>ComponentReturnsPass</sci:value>
								<sci:value>ComponentReturnsFail</sci:value>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Num Threads" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" uimpl="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Num Threads</sci:value>
									</sci:mpropval>
								</sci:metaproplist>
								<sci:help>Number of CPU threads to use when building model. A value equal to the number of cores on the machine gives the best results.</sci:help>
								<sci:value>Num Threads</sci:value>
							</sci:arg>
							<sci:arg name="Fixed Length" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" uimpl="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Fixed Length</sci:value>
										<sci:value>Fixed Length</sci:value>
										<sci:value>Fixed Length</sci:value>
									</sci:mpropval>
								</sci:metaproplist>
								<sci:help>If Convert Fingerprints To is given a fixed-length type, then this is the fixed-length.  Bits larger than this length are folded into this range using a mod operation.</sci:help>
								<sci:value>Fixed Length</sci:value>
							</sci:arg>
							<sci:arg name="ShowRInputOutput" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="true" expanded="true">
								<sci:help>Specifies R input or output to display in Notepad. Options are:
&lt;ul&gt;
&lt;li&gt;Script: Displays the R script generated by this component for execution in R.
&lt;li&gt;StdOutput: Displays the &quot;standard output&quot; from R. This includes the script as executed in R and any output or errors from R.
&lt;/ul&gt;
</sci:help>
								<sci:value>ShowRInputOutput</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>LEARNNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{2F4B051F-A537-4FA5-83A7-DB28523419EC}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -245</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Builds a recursive partitioning (decision tree) forest model using R</sci:value>
								<sci:value>The model is a classification or regression model for a property specified by &lt;i&gt;Name&lt;/i&gt;, based on the properties specified by &lt;i&gt;UseProperties&lt;/i&gt;.
&lt;p&gt;
See &lt;i&gt;ROutput&lt;/i&gt; for output options which, in addition to the usual FitSummary and FitPlot options, include an option to output property importance values.
&lt;p&gt;
Once the model has been fitted, a new component with a name given by &lt;i&gt;LearnedPropertyName&lt;/i&gt; is created on your user tab, in the folder LearnedProperties/R Models.  This component contains the fitted model and can be used to make predictions for new  sets of data.  

For classification models (categorical Y property), the output produced by the model component is a property whose name is also given by &lt;i&gt;LearnedPropertyName&lt;/i&gt; and contains the predicted class (category) for each input data record.  In addition, one property for each possible class is output, containing the predicted probability that the data record belongs to the class.  Each of these properties has as its name the class name, prefixed by the value of &lt;i&gt;LearnedPropertyName&lt;/i&gt;.
&lt;p&gt;
For regression models (continuous Y property) the output produced by the model component is a property whose name is also given by &lt;i&gt;LearnedPropertyName&lt;/i&gt; and contains the predicted Y property value for each input data record.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Requires R package &quot;randomForest&quot;.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To evaluate a classification model against a test set of data, use the &lt;a href=&quot;javascript:DoLink(&apos;{2E590EF8-6E3A-4554-A131-8D3AD568DFDA}&apos;)&quot;&gt;ROC Plot Viewer&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6F75B0E4-F5FF-4490-88CC-F53D2E3316E9}&apos;)&quot;&gt;Enrichment Plot Viewer&lt;/a&gt;.
&lt;li&gt;To display ROC plots and compare ROC scores between multiple classification models, use the &lt;a href=&quot;javascript:DoLink(&apos;{27910028-CF29-49E9-B23C-EF951C8B184A}&apos;)&quot;&gt;Classification Model Evaluation Viewer&lt;/a&gt;. If your data contain more than two classes, this viewer reports a composite ROC score based on an average over all of the classes in the data, in addition to the individual components contributing to the average.
&lt;li&gt;To display plots of actual-versus-predicted values and compare RMS error between multiple regression models, use the &lt;a href=&quot;javascript:DoLink(&apos;{677F9529-03FC-4A18-8619-03A0F657F3B1}&apos;)&quot;&gt;Regression Model Evaluation Viewer&lt;/a&gt;.
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/rstats/docs/r_stats.pdf&apos;)&quot;&gt;R Statistics Components User Guide &lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://www.r-project.org/&apos;)&quot;&gt;R Project for Statistical Computing Web Site&lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://finzi.psych.upenn.edu/search.html&apos;)&quot;&gt;R Help Search Web Site&lt;/a&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data to be learned</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Model summary and plots</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Records with missing or invalid values</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.0.1523</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:help>Protocol Options</sci:help>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/rstats</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Jul 20 10:09:46 2017</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Learn R Model</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>68</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Analysis and Statistics\R Statistics\Learners\Learn R Forest Model</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>// This is the string of the base needed R files
@TemporaryFiles := array(&apos;Rmodelfile&apos;, &apos;Rscriptfile&apos;, &apos;RFunctionsScriptfile&apos;, &apos;Rstdoutfile&apos;, &apos;Rinput1file&apos;, &apos;Rinput2file&apos;, &apos;Rinput3file&apos;, &apos;Rinput4file&apos;,  &apos;Routput1file&apos;, &apos;Routput2file&apos;, &apos;Routput3file&apos;, &apos;Routput4file&apos;, &apos;Routput5file&apos;, &apos;Routput6file&apos;, &apos;Routput7file&apos;, &apos;Routput8file&apos;, &apos;Routput9file&apos;, &apos;Routput10file&apos;, &apos;Routput11file&apos;, &apos;Routput12file&apos;, &apos;Routput13file&apos;, &apos;Routput14file&apos;, &apos;Routput15file&apos;, &apos;Routput16file&apos;, &apos;Routput17file&apos;, &apos;Routput18file&apos;, &apos;Routput19file&apos;, &apos;Routput20file&apos;, &apos;Routput21file&apos;, &apos;Routput22file&apos;, &apos;Routput23file&apos;);

// Initialize some locals
#nModels := 0;
#nFinalModels := 0;
#j := 1;
#entered := FALSE;

for #i in 1 .. numGlobalProperties() loop
	if ithGlobalPropertyName(#i) like &apos;ModelBuild Stack _ Model _&apos; then
		#nModels := #nModels + 1;
	end if;
	
	while ithGlobalPropertyName(#i) like &apos;ModelBuild Stack &apos; . #j . &apos;%&apos; loop
		#entered := TRUE;
		if (GlobalProperty(&apos;Stack Methods Stack &apos; . #j) eq &apos;Keep Best Model&apos;) then
			#nFinalModels := #nFinalModels + 1;
			break;
		end if;
		if ithGlobalPropertyName(#i) like &apos;ModelBuild Stack &apos; . #j . &apos; Model _&apos; then
			#nFinalModels := #nFinalModels + 1;
		end if;
		#i := #i +1;
	end loop;
	if #entered eq TRUE then
		#j := #j + 1;
		#entered := FALSE;
	end if;
end loop;

for #i in 1 .. #nModels loop
	append(@FeatureSelectionFiles, &apos;RFeatureSelectionOutputFile&apos; . #i);
end loop;

append(@TemporaryFiles, @FeatureSelectionFiles);
contract(&apos;, &apos;, @TemporaryFiles);

for #i in 1 .. #nFinalModels loop
	append(@TemporaryPredictionFiles, &apos;RPredictionsAnalysisFile&apos; . #i);
end loop;

//property(&apos;nModels&apos;) := #nModels;
//property(&apos;nFinalModels&apos;) := #nFinalModels;
//property(&apos;FSfiles&apos;) := @FeatureSelectionFiles;
</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval>ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Names Temporary R files</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &amp;quot;PropertyList&amp;quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	/* If the first line starts with a comment - remove comment marking. */
	If #displayName Like &apos;/*%&apos; Then
		#displayName := Trim(StrReplace(#displayName, &apos;/*&apos;, &apos;&apos;));
		#displayName := Trim(StrReplace(#displayName, &apos;*/&apos;, &apos;&apos;));
	End If;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>70</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Check R exe" version="2">
									<sci:arg name="Error Behavior" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies action to take in case of a problem with the Pipeline Pilot R configuration. Options are:
&lt;ul&gt;
&lt;li&gt;Default: For fatal errors such as a missing R executable, show a message in a dialog and halt the protocol if running from Pipeline Pilot; raise an exception if running from another client such as Web Port. For a non-fatal error such as an unsupported R version, show a message but do not halt the protocol if running from Pipeline Pilot; do nothing if running from another client.
&lt;li&gt;Message out Fail Port: For any type of error, send a message out the fail port in a property named &lt;b&gt;ErrorText&lt;/b&gt;. Do not raise an exception or display a message.
&lt;/ul&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If the global property @SuppressRVersionWarning is set to True, no message is shown in the &quot;Default&quot; case for unsupported R versions.
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Default</sci:legalval>
										<sci:legalval>Message out Fail Port</sci:legalval>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
										<sci:value>ver,ErrorText,EnvOverride</sci:value>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>When the network runs, processes once or until done for each process call</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval>ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
										<sci:legalval>Cant Replace With Copy</sci:legalval>
										<sci:legalval>Cant Open</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/rstats</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Fri Jun 02 08:18:08 2017</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Check R exe</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>ComponentNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{320AE9ED-071D-4ad7-AE87-2D692FAED359}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -470</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Check R executable</sci:value>
										<sci:value>Checks that the global variable &apos;R_exe&apos;, which points to the location of the R executable, is defined, and that the R executable file is in the location specified by R_exe. </sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
										<sci:value>None</sci:value>
										<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>18.1.0.1468</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>51</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Modified</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Check R exe</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>#tempBoolean := ((globalProperty(&quot;SuppressRVersionWarning&quot;) is not defined) or
                (globalProperty(&quot;SuppressRVersionWarning&quot;) = false)) and 
				((globalProperty(&quot;SuppressRVersionWarningLocal&quot;) is not defined) or
                (globalProperty(&quot;SuppressRVersionWarningLocal&quot;) = false));
globalProperty(&quot;SuppressRVersionWarningLocal&quot;) := true;
#tempBoolean;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Only show the message once per protocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>2106 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@NoUI is defined and @NoUI</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>2394 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>%VERSION 3%</sci:value>
												<sci:value>2329 -420 499 134</sci:value>
												<sci:value>255 255 0</sci:value>
												<sci:value>Do nothing if @NoUI</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>15</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Non-blocking Message (VBScript)" version="2">
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
												<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
												<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="Message" type="ExpressionType" required="false" visibility="visible" multi="false">
												<sci:help>The message body to display to the user</sci:help>
												<sci:value>&quot;The R version at &quot; . @R_exe . &quot; (version &quot; . @ver . 
&quot;) is not supported. Supported versions are 2.15.x, 3.0.x, 3.1.x, 3.2.x, 3.3.x, and 3.4.x. Your protocol will continue to run, but you may obtain unexpected results. Set the global property @SuppressRVersionWarning to True to suppress this message.&quot;</sci:value>
											</sci:arg>
											<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>The message title to display to the user</sci:help>
												<sci:value>R version not supported</sci:value>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Oct 12 11:58:18 2015</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Non-blocking Message</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>true</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ViewerNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{A27DAC8B-8CFE-4c55-A0EB-7590323E263F}</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>2682 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>NON-BLOCKING MESSAGE WRITER</sci:value>
												<sci:value>A non-blocking message writer that supports VBScript syntax.</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>16.1.0.1058</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Prototypes\Scripting\Non-blocking Message (VBScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol/>
									</sci:data>
									<sci:data object="SciTegic.RunProgram.1">
										<sci:component name="Run Program (on Server)" version="2">
											<sci:arg name="CommandLine" type="TextType" required="true" visibility="visible" multi="false">
												<sci:help>Command line for application or file to execute on the server machine.</sci:help>
												<sci:value>&quot;$(R2_exe)&quot; --version</sci:value>
											</sci:arg>
											<sci:arg name="Result Properties" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>Parameters for assigning results to properties.</sci:help>
												<sci:member>PropertyForExitStatus</sci:member>
												<sci:member>StderrProperty</sci:member>
												<sci:member>StdoutProperty</sci:member>
												<sci:member>StdinProperty</sci:member>
												<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="StdinProperty" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Defines the property name that holds the desired value of the program&apos;s standard input (stdin). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
												<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="StdoutProperty" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Defines the property name that will hold the program&apos;s standard output (stdout). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
												<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
												<sci:value>stdout</sci:value>
											</sci:arg>
											<sci:arg name="StderrProperty" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Defines the property name that will hold the program&apos;s standard error (stderr). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
												<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
												<sci:value>stderr</sci:value>
											</sci:arg>
											<sci:arg name="PropertyForExitStatus" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Defines the property name to hold the value of the program exit status code. Denote a global property with a leading @ character.
Note that this property can only be defined if WaitForExit is set to True.</sci:help>
												<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>Contains less commonly used parameters</sci:help>
												<sci:member>UseCommandInterpreter</sci:member>
												<sci:member>Environment</sci:member>
												<sci:member>WaitForExit</sci:member>
												<sci:member>Evaluate Parameters for Each Record</sci:member>
											</sci:arg>
											<sci:arg name="WaitForExit" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>Whether or not to wait for the program to finish before returning from the process call.  This parameter must be set to True for StdinProperty, StdoutProperty, StderrProperty, or PropertyForExitStatus to function.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Environment" type="LinkGlobalPropertyType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
												<sci:metaproplist>
													<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAKtAjxwPlNwZWNpZmllcyBhZGRpdGlvbmFsIGVudmlyb25tZW50IHZhcmlhYmxlIHNldHRpbmdzIHRoYXQgd2lsbCBiZSB1c2VkIGJ5IHRoZSBzcGF3bmVkIHByb2Nlc3MuICBTcGVjaWZ5IGVhY2ggc2V0dGluZyBvbiBhIGxpbmUgYnkgaXRzZWxmIGFzIDxicj48c2FtcD52YXJpYWJsZT1uYW1lPC9zYW1wPjxwLz4KVGhlIHNwYXduZWQgcHJvY2VzcyB3aWxsIGluaGVyaXQgdGhlIGV4aXN0aW5nIGVudmlyb25tZW50IG9mIHRoZSBwcm90b2NvbCBqb2IgcHJvY2VzcywgYW5kIGFueSBzZXR0aW5ncyBoZXJlIHdpbGwgYmUgYXBwZW5kZWQgdG8gdGhlIHZhcmlhYmxlIGxpc3QuICBUbyBtYWtlIHVzZSBvZiBhbiBleGlzdGluZyB2YXJpYWJsZSwgc3Vycm91bmQgdGhlIHZhcmlhYmxlIG5hbWUgd2l0aCBwZXJjZW50IHNpZ25zIChlLmcuIHRvIHByZXBlbmQsIHVzZSBzb21ldGhpbmcgbGlrZTxici8+IDxzYW1wPlBBVEg9YzpcbXlkaXI7JVBBVEglPC9zYW1wPjxwLz4KTm90ZSB0aGF0IHRoaXMgc3ludGF4IHNob3VsZCBiZSB1c2VkIHdpdGggYm90aCBXaW5kb3dzIGFuZCBMaW51eCBzZXJ2ZXJzLiAgRHVlIHRvIE9TIGRlc2lnbnMsIGVudmlyb25tZW50IHZhcmlhYmxlcyBhcmUgY2FzZSBpbnNlbnNpdGl2ZSBvbiBXaW5kb3dzIHNlcnZlcnMgYW5kIGNhc2Ugc2Vuc2l0aXZlIG9uIExpbnV4IHNlcnZlcnMuPC9wPiRUZXh0VHlwZQAIAAAAAQEAAQAEAPwAAAAAAAAAAAAwRW52aXJvbm1lbnQDzFPPuwQA</sci:propval>
													<sci:propval name="SCI_InitializeUsingOrigType">TextType</sci:propval>
													<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
													<sci:propval name="SCI_EvalOnInitType">TextType</sci:propval>
												</sci:metaproplist>
												<sci:help>&lt;p&gt;Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &lt;br&gt;&lt;samp&gt;variable=name&lt;/samp&gt;&lt;p/&gt;
The spawned process will inherit the existing environment of the protocol job process, and any settings here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. to prepend, use something like&lt;br/&gt; &lt;samp&gt;PATH=c:\mydir;%PATH%&lt;/samp&gt;&lt;p/&gt;
Note that this syntax should be used with both Windows and Linux servers.  Due to OS designs, environment variables are case insensitive on Windows servers and case sensitive on Linux servers.&lt;/p&gt;</sci:help>
												<sci:value>EnvOverride</sci:value>
											</sci:arg>
											<sci:arg name="UseCommandInterpreter" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>Whether or not to add &quot;cmd.exe /c&quot; (or &quot;/bin/sh -c&quot; on Linux servers) to the command line.  This causes the command line to be interpreted through the operating systems standard command shell allowing the use of redirection specifiers such as &apos;&amp;gt;&apos; and &apos;&amp;lt;&apos; and piping via &apos;|&apos;.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Evaluate Parameters for Each Record" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;
Set this parameter to True if the component has an input port and you need to re-evaluate the values of the other parameters for each record that is passed into the component.&lt;p/&gt;
This allows you to set a different command line for each record. You can do this by using a global property token in the command line.&lt;br/&gt;
Example (where &lt;samp&gt;dataname&lt;/samp&gt; is a global property):&lt;br/&gt;
&lt;samp&gt;/home/goober/bin/calibrate $(dataname)&lt;/samp&gt;
&lt;p&gt;
If you change the parameter type of the CommandLine parameter to be an Expression, you can define an expression that includes values of data properties on each incoming record.&lt;br/&gt;
Example (where &lt;samp&gt;dataset_id&lt;/samp&gt; and &lt;samp&gt;limit&lt;/samp&gt; are data record properties):&lt;br/&gt;
&lt;samp&gt;&apos;/home/goober/bin/calibrate &apos;.dataset_id.&apos; -max &apos;.limit&lt;/samp&gt;
&lt;/p&gt;</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Componet Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/integration</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Tue Apr 03 17:17:22 2007</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{1479A29D-F184-4979-BF60-2AA823D48831}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Run Program (on Server)</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Run Program</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>666 -295</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>COMPONENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Runs a command line application on the server machine.</sci:value>
												<sci:value>&lt;p&gt;Define the command line by entering text as you would in a command prompt window.  On Windows servers, the component includes facilities for looking up a program name in the Windows registry. It can interpret a program name as a ProgID, such as &quot;InternetExplorer.Application&quot;, or as a shell command, such as &quot;IsisServer&quot;, or as a document to load into an associated program, such as &quot;c:\spreadsheet.xls&quot;.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;CommandLine&lt;/i&gt;: The command that the component will run. The correct syntax is the full command line exactly as you would type it in a shell command window. On Windows servers, the first space- or quote-delimited item of the command line can be a ProgId, such as &quot;InternetExplorer.Application&quot;.  This starts up Internet Explorer (IE) without having to specify the path to IE explicitly. Shell command associations are also supported, so &quot;IsisServer&quot; will start Isis Draw. Finally, there is support for file associations, so the path &quot;D:\docs\notes.doc&quot; will start Microsoft Word and load the specified document.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;WaitForExit&lt;/i&gt;: When TRUE, the data pipeline is blocked until the command has completed.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;PropertyForExitStatus&lt;/i&gt;: Allows you to assign the exit status of the command to a global property or to a data record property. Use either a global or local property reference, such as @status or status.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;UseCommandInterpreter&lt;/i&gt;: When True, parses the command line through the command interpreter on the remote server (with a shell such as csh or bash on Linux servers or the interpreter cmd.exe on Windows servers). In particular, this needs to be set to True if the CommandLine utilizes standard output or input (such as cmd.exe /c &amp;quot;c:\Program Files\R\rterm.exe&amp;quot; &amp;quot;0&amp;lt;$(CommandFile)&amp;quot;).&lt;/p&gt;
&lt;p&gt;&lt;i&gt;StdinProperty, StdoutProperty, and StderrProperty&lt;/i&gt;: Allows you to redirect standard communications to global properties or to data record properties. Use either a global or local property reference, such as @stdin or stdin.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Environment&lt;/i&gt;: Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &quot;variable=name&quot;.  The spawned process will inherit the existing environment of the PipelinePilot process, and any settings defined here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. &quot;PATH=c:\mydir;%PATH%&quot;).  Due to differences in the operating systems, these variables are case insensitive on Windows servers, but case sensitive on Linux servers.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt; If your command line includes a file path, create a new parameter for the component, of type URL, so the user can enter the path. Then use a token replacement in the CommandLine to pick up the value. For example: Notepad.exe &quot;$(SciTegicRoot)\$(Path)&quot;. &lt;/li&gt;
&lt;li&gt;When the component is separated from any other pipeline, the command line is run just once.&lt;/li&gt; 
&lt;li&gt;You can add an input or output pass port to the component, to integrate it with a pipeline. If there is an output port, but no input port, the command is run once and a single new record is generated. If there is an input port, then the command is run once for each data record passed in.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;See Also:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/integration_command_line.pdf&apos;)&quot;&gt;
Command-line Integration Guide&lt;/a&gt;&lt;/p&gt;
</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>6.1.0.14</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Database and Application Integration\Application Integration\Command Line\Run Program (on Server)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>/* Version info comes in stderr on Windows, stdout on linux */
info := stderr;
if stringlen(stderr) &lt; 10 then 
	info := stdout;
end if;

info := tolower(info);

#verloc := findsubstring(info, &apos;r version&apos;);
if #verloc &lt; 1 then
	@ver := &apos;unknown&apos;;
else
	@ver := trim(substring(info, #verloc + 10, 6));
end if;
</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Apr 23 12:20:45 2007</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Get R version</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ExpressionNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>954 -295</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>6.1.0.17</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>3</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@ver eq &apos;2.15.0&apos; or @ver eq &apos;2.15.1&apos; or @ver eq &apos;2.15.2&apos; or @ver eq &apos;2.15.3&apos; or @ver eq &apos;3.0.0&apos; or @ver eq &apos;3.0.1&apos; or @ver eq &apos;3.0.2&apos; or @ver eq &apos;3.0.3&apos; or @ver eq &apos;3.1.0&apos; or @ver eq &apos;3.1.1&apos; or @ver eq &apos;3.1.2&apos; or @ver eq &apos;3.1.3&apos; or @ver eq &apos;3.2.0&apos; or @ver eq &apos;3.2.1&apos; or @ver eq &apos;3.2.2&apos; or @ver eq &apos;3.2.3&apos; or @ver eq &apos;3.2.4&apos; or @ver eq &apos;3.2.5&apos; or @ver eq &apos;3.2.6&apos; or @ver eq &apos;3.2.7&apos; or @ver eq &apos;3.2.8&apos;  or @ver eq &apos;3.3.1&apos;  or @ver eq &apos;3.3.2&apos; or @ver eq &apos;3.3.3&apos; or @ver eq &apos;3.3.4&apos; or @ver eq &apos;3.4.0&apos; or @ver eq &apos;3.4.1&apos; or @ver eq &apos;3.4.2&apos; or @ver eq &apos;3.4.3&apos; or @ver eq &apos;3.4.4&apos; or @ver eq &apos;3.5.0&apos; or @ver eq &apos;version unknown&apos;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Confirm version is supported</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FilterNode</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1242 -295</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>4</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>if @&apos;Error Behavior&apos; ne &apos;Default&apos; then
	ErrorText := &quot;The R version at &quot; . @R_exe . &quot; (version &quot; . @ver . &quot;) is not supported. Supported versions are 2.15.x, 3.0.x, 3.1.x, 3.2.x, 3.3.x, and 3.4.x. Your protocol will continue to run, but you may obtain unexpected results.&quot;;
	keep(&apos;ErrorText&apos;);
end if;

@&apos;Error Behavior&apos; eq &apos;Default&apos;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1530 -295</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>20</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@NoUI == false</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Make sure we have a UI</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FilterNode</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1818 -295</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>5</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>fileexists(&apos;$(R_exe)&apos;)= true</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
												<sci:value>@EnvOverride := &apos;LD_LIBRARY_PATH=&apos;;
if @R_LD_LIBRARY_PATH is defined then
	@EnvOverride .= @R_LD_LIBRARY_PATH;
end if;
</sci:value>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Check R_exe file exists</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FilterNode</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>378 -470</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>6</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.PropertyFunctions.1">
										<sci:component name="Data to Pass Port" version="2">
											<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
												<sci:legalval selected="true">LeaveData</sci:legalval>
												<sci:legalval>ClearData</sci:legalval>
												<sci:legalval>DeleteData</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>the action to perform</sci:help>
												<sci:value>PassDataToPort</sci:value>
											</sci:arg>
											<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>the port to pass data to</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FilterNode</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Mar 29 17:36:03 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Data to Pass Port</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Evaluate Expression</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{3162E91B-4C82-4303-BCF1-C4D59B36709E}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>2106 -470</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Directs records to the Pass port for use in subprotocol building.</sci:value>
												<sci:value>Useful in a subprotocol for directing records that are passing through components in the subprotocol to the Pass port of the subprotocol.</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value>All data records</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.0.4.0</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>7</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Data to Pass Port</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@R_exe is defined</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval>ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Check R_exe 
is defined</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FilterNode</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -820</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>8</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>ErrorText := &quot;Could not find R executable specified by the global property R_exe:\n&quot; . @R_exe . &quot;\nPlease ask your system administrator to verify the R installation and Pipeline Pilot configuration.&quot;;

keep(&apos;ErrorText&apos;);
@ErrorText := ErrorText;

if @&apos;Error Behavior&apos; eq &apos;Default&apos; then
	if @NoUI is defined and @NoUI then
		error(ErrorText);
	end if;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>666 -820</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>14</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@&apos;Error Behavior&apos; eq &apos;Default&apos;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>954 -820</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>19</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Display Message and Halt Protocol" version="2">
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="MessageTitle" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>The title of the message box that will appear</sci:help>
												<sci:value>R executable not found</sci:value>
											</sci:arg>
											<sci:arg name="MessageText" type="ExpressionType" required="false" visibility="visible" multi="false">
												<sci:help>Specifies the message to display as a PilotScript expression. Text should be
quoted and global property values can also be included in the
PilotScript expression.</sci:help>
												<sci:value>@ErrorText</sci:value>
											</sci:arg>
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
												<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
												<sci:value>mText</sci:value>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
												<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/rstats</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Dec 10 13:47:32 2007</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Display Message and halt protocol</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>true</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ViewerNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{607A29EE-DD7C-4a7b-80FB-3EEADBD4F4EE}</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1242 -820</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolCommentSize" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>ProtocolCommentSize</sci:help>
												<sci:value>1100 500</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Displays a dialog box with a message and an OK button on the client. 
</sci:value>
												<sci:value>Displays a dialog box with a message and an OK button on the client. The message can contain information from global variables.</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.27</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>9</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Display Message and Halt Protocol</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol/>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>ErrorText := &quot;The global property &apos;R_exe&apos; is not defined. This property specifies the location of the R executable.\nPlease ask your administrator to set this property in the Pipeline Pilot Administration Portal&quot;;

@ErrorText := ErrorText;

if @&apos;Error Behavior&apos; eq &apos;Default&apos; then
	if @NoUI is defined and @NoUI then
		error(ErrorText);
	end if;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>378 -1195</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>13</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@&apos;Error Behavior&apos; eq &apos;Default&apos;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>666 -1195</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>18</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Display Message and Halt Protocol" version="2">
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="MessageTitle" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>The title of the message box that will appear</sci:help>
												<sci:value>R_exe not defined</sci:value>
											</sci:arg>
											<sci:arg name="MessageText" type="ExpressionType" required="false" visibility="visible" multi="false">
												<sci:help>Specifies the message to display as a PilotScript expression. Text should be
quoted and global property values can also be included in the
PilotScript expression.</sci:help>
												<sci:value>@ErrorText</sci:value>
											</sci:arg>
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
												<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
												<sci:value>mText</sci:value>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
												<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/rstats</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Dec 10 13:47:32 2007</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Display Message and halt protocol</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>true</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ViewerNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{607A29EE-DD7C-4a7b-80FB-3EEADBD4F4EE}</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>954 -1195</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolCommentSize" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>ProtocolCommentSize</sci:help>
												<sci:value>1100 500</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Displays a dialog box with a message and an OK button on the client. 
</sci:value>
												<sci:value>Displays a dialog box with a message and an OK button on the client. The message can contain information from global variables.</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.27</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>10</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Display Message and Halt Protocol</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol/>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>/* Define location of prefix script for all R scripts, containing common utility functions. */
@RFunctionsFile := strreplace(&apos;$(/scitegic/rstats/RCode)/RFunctions.R&apos;, &apos;\&apos;, &apos;/&apos;);

if @R_PlotWidth is defined then
	@RPlotWidth := @R_PlotWidth;
elsif @&apos;Chart Options Width&apos; is defined then
	@RPlotWidth := @&apos;Chart Options Width&apos;;
else
	@RPlotWidth := 600;
end if;

if @R_PlotHeight is defined then
	@RPlotHeight := @R_PlotHeight;
else
	if @R_PlotWidth is defined then
		@RPlotHeight := @R_PlotWidth;
	elsif @&apos;Chart Options Height&apos; is defined then
		@RPlotHeight := @&apos;Chart Options Height&apos;;
	else
		@RPlotHeight := 600;
	end if;
end if;

if @R_par is defined then
	@RParScript := &apos;par(&apos; . @R_par . &quot;)\n&quot;;
else
	@RParScript := &apos;&apos;;
end if;

if @R_par_local is defined then 
	@RParScript .= &apos;par(&apos; . @R_par_local . &quot;)\n&quot;;
end if;

if @R_par_custom is defined then 
	@RParScript .= &apos;par(&apos; . @R_par_custom . &quot;)\n&quot;;
end if;

/* Backward compatibility for components with PlotWidth,
PlotHeight, and PlotFontSize. */

if @PlotWidth is defined then
	@RPlotWidth := @PlotWidth;
end if;

if @PlotHeight is defined then
	@RPlotHeight := @PlotHeight;
end if;

if @PlotFontSize is defined then
	@RParScript .= &quot;par(ps=&quot; . @PlotFontSize . &quot;)\n&quot;;
end if;

if @PlotName is not defined then 
	@PlotName := &apos;Rplot&apos;;
end if;
</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval>ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Define functions file and R plot globals</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -1545</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>11</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:connectid from="0" to="15" type="true"/>
									<sci:connectid from="0" to="7" type="false"/>
									<sci:connectid from="15" to="1" type="false"/>
									<sci:connectid from="2" to="3" type="true"/>
									<sci:connectid from="3" to="4" type="true"/>
									<sci:connectid from="4" to="20" type="false"/>
									<sci:connectid from="20" to="5" type="true"/>
									<sci:connectid from="5" to="0" type="true"/>
									<sci:connectid from="5" to="7" type="false"/>
									<sci:connectid from="6" to="2" type="true"/>
									<sci:connectid from="6" to="14" type="false"/>
									<sci:connectid from="8" to="6" type="true"/>
									<sci:connectid from="8" to="13" type="false"/>
									<sci:connectid from="14" to="19" type="true"/>
									<sci:connectid from="19" to="9" type="true"/>
									<sci:connectid from="13" to="18" type="true"/>
									<sci:connectid from="18" to="10" type="true"/>
									<sci:version iVal="1"/>
								</sci:protocol>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>@ShowRScript := false;
@ShowRStdOutput := false;
for #i in 1 .. numvalues(@ShowRInputOutput) loop
   #s := @ShowRInputOutput[#i];
   if (#s eq &quot;Script&quot;) then 
      @ShowRScript := true;
   end if;
   if (#s eq &quot;StdOutput&quot;) then 
      @ShowRStdOutput := true;
   end if;
end loop;

@DoCrossValidation := false;
@DoYScrambling := false;
for #i in 1 .. numvalues(@Validation) loop
   #s := @Validation[#i];
   if #s eq &apos;Cross Validation&apos; then 
      @DoCrossValidation := true;
   elsif #s eq &apos;Y Scrambling&apos; then 
      @DoYScrambling := true;
   end if;  
end loop;

@DoGA := false;
@DoStepwise := false;
@DoSA := false; //TODO
for #i in 1 .. numvalues(@&apos;Internal Feature Selection&apos;) loop
   #s := @&apos;Internal Feature Selection&apos;[#i];
   if #s eq &apos;Genetic Feature Selection&apos; then 
      @DoGA := true;
   elsif #s eq &apos;Stepwise Feature Selection&apos; then 
      @DoStepwise := true;
   elsif #s eq &apos;Simulated Annealing&apos; then 
      @DoSA := true;
   end if;  
end loop;

@DoGridSearch := false;
@DoRandomSearch := false;
@DoBayesianSearch := false;
for #i in 1 .. numvalues(@&apos;Parameter Optimization&apos;) loop
   #s := @&apos;Parameter Optimization&apos;[#i];
   if #s eq &apos;Simple Parameter Optimization&apos; then 
      @DoSimpleParaOpt := true;
   end if;  
end loop;

@GiveDescriptors := false;
@GiveColumns := false;
@GiveSummary := false;
@GiveCVSummary := false;
@GiveGASummary := false;
@GiveStepSummary := false;
@GiveOptSummary := false;
@ShowTSNE := false;
@DoPlot := false;
@DoCVPlot := false;
@DoFitSummary := false;
@DoImportanceSummary := false;
@DoImportancePlots := false;
for #i in 1 .. numvalues(@ROutput) loop
   #s := @ROutput[#i];
   if #s eq &apos;Show Descriptors&apos; then
	  @GiveDescriptors := true;
   elsif #s eq &apos;Show Columns&apos; then 
      @GiveColumns := true;	
   elsif #s eq &apos;Model Summary&apos; then 
      @GiveSummary := true;
   elsif #s eq &apos;Cross Validation Summary&apos; and @DoCrossValidation then
	  @GiveCVSummary := true;
   elsif #s eq &apos;Genetic Algorithm Summary&apos; and @DoGA then
	  @GiveGASummary := true;
   elsif #s eq &apos;Stepwise Summary&apos; and @DoStepwise then
	  @GiveStepSummary := true;
   elsif #s eq &apos;Parameter Optimization Summary&apos; then
	  @GiveOptSummary := true;
   elsif #s eq &apos;t-SNE&apos; then
	   @ShowTSNE := true;
   elsif #s eq &apos;Model Fit&apos; then 
      @DoPlot := true;
   elsif #s eq &apos;Cross Validation Model Fit&apos; then 
      @DoCVPlot := true;	  
   elsif #s eq &apos;FitSummary&apos; then 
      @DoSummary := true;	
   elsif #s eq &apos;Importance Values&apos; then 
      @DoImportance := true;
   elsif #s eq &apos;Importance Plots&apos; then 
      @DoImportancePlots := true;
   end if;  
end loop;</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Set R I/O to display</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>378 -470</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>52</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>resize(@ExtraModelParameters, 0);

if @TypeOfPropertyToLearn eq &apos;Categorical&apos; then
	append(@ExtraModelParameters, &apos;Preferred Class Cutoff&apos;);
	append(@ExtraModelParameters, &apos;Preferred Class&apos;);
end if;

@STRProtectedSection := &apos;
# Cutoff override
if (tolower(&quot;$&apos; . &apos;(Preferred Class Cutoff)&quot;) != &quot;default&quot;) {
	overrideCutoff &lt;- TRUE
	cutoff &lt;- as.double(&quot;$&apos; . &apos;(Preferred Class Cutoff)&quot;)
	prefClass &lt;- tolower(&quot;$&apos; . &apos;(Preferred Class)&quot;)
}
&apos;;
</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Set extra model params</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>ExpressionNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>666 -470</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>53</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.ClientTempFiles.1">
								<sci:component name="Create Tempfiles for R" version="2">
									<sci:arg name="Client Tempfiles" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma separated list of global parameter names (such as &quot;ctmp1,ctmp2&quot;) to assign with temporary filenames obtained from the client</sci:help>
									</sci:arg>
									<sci:arg name="Force Forward Slashes" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Whether to force all server tempfiles to use forward slashes; this is useful if the temp file name is used to communicate with a external program that cannot handle backslashes on Windows</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Server Tempfiles" type="ExpressionType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>A comma separated list of global parameter names (such as &quot;tmp1,tmp2&quot;) to assign with temporary filenames obtained from the server</sci:help>
										<sci:value>@TemporaryFiles</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/rstats</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Jun 30 10:38:30 2009</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Create Tempfiles for R</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>ComponentNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{2BFBE007-9937-47EB-A9B4-B76491D99C59}</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Client Temp Filenames</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>954 -470</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Obtains temporary filenames from the client or the server that are added to the global property list.</sci:value>
										<sci:value>&lt;p&gt;These names can be used later within the protocol as global variables within component parameters or as PilotScript expressions. For example, if your component executes on the client, but requires specific files to be present, you can create a temporary file named &quot;clientTmpFile1&quot; and later refer to it in a parameter or PilotScript entry via &quot;$(clientTmpFile1)&quot;.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Server Tempfiles&lt;/i&gt;: A comma-separated list of global parameter names to fill with temporary filenames obtained from the server.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Client Tempfiles&lt;/i&gt;: A comma-separated list of global parameter names to fill with temporary filenames obtained from the client.&lt;/p&gt;

&lt;p&gt;All files created in this way are deleted when the protocol is closed or, in the case of client tempfiles, when the client starts up again. (They are not permanent files.)&lt;/p&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>4.5.0.0</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>54</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Create Tempfiles for R</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>#Models := RGlobalPropertyNames(&apos;ModelBuild Stack \d+ Model \d+&apos;);

#ii := 1;
while #ii &lt; numvalues(#Models) loop
	if #Models[#ii] ne &apos;&apos; then
		@&apos;Property Names&apos; := Array();
		@&apos;Property Values&apos; := Array();
		#IndexName := #Models[#ii];
		while #Models[#ii] IS DEFINED and #Models[#ii] like #IndexName . &quot;%&quot; loop
			append(@&apos;Property Names&apos; , #Models[#ii]);
			Contract(&apos;; &apos;, GlobalProperty(#Models[#ii]));
			append(@&apos;Property Values&apos; , GlobalProperty(#Models[#ii]));
			#ii := #ii + 1;
		end loop;
		property(#IndexName . &quot; names&quot;) := @&apos;Property Names&apos; ;
		property(#IndexName . &quot; values&quot;) := @&apos;Property Values&apos; ;
	end if;
end loop;</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval>ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Collect Model Arguments</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &amp;quot;PropertyList&amp;quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	/* If the first line starts with a comment - remove comment marking. */
	If #displayName Like &apos;/*%&apos; Then
		#displayName := Trim(StrReplace(#displayName, &apos;/*&apos;, &apos;&apos;));
		#displayName := Trim(StrReplace(#displayName, &apos;*/&apos;, &apos;&apos;));
	End If;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -820</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>61</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.SeparateValues.1">
								<sci:component name="Unmerge Data" version="2">
									<sci:arg name="PropertyNames" type="PropertyNameType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;The names of the one or more properties to separate and return as separate data records.  If no property names are given, then all properties with
multiple values will be unmerged. If multiple properties are unmerged, the number of unmerged records is the number of values of a property with the maximum number of values.</sci:help>
									</sci:arg>
									<sci:arg name="Additional Options" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Contains less commonly used parameters</sci:help>
										<sci:member>Large Data Records</sci:member>
										<sci:member>Unmerge ByteArrayValues</sci:member>
									</sci:arg>
									<sci:arg name="Large Data Records" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each of your records are particularly large, setting this parameter to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Unmerge ByteArrayValues" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:help>ByteArrayValues are property representations of binary data.  Although they are technically arrays of bytes and could be unmerged, in most cases these properties should be treated as a single value rather than an array of bytes.  This parameter is available to restore the previous odd behavior, if desired.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Sep 13 07:08:33 2016</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Unmerge Data</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Unmerge Data</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>GENERATORNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{5E28C170-2FEC-4A3C-90A6-2DCEAA330E9D}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>378 -820</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Separates data records containing array properties into individual records with one array value per record</sci:value>
										<sci:value>&lt;p&gt;Each incoming data record with more than one value for the property or properties specified by &lt;i&gt;PropertyNames&lt;/i&gt; is duplicated for each of the values.  For example, an input data record with three values will generate three output data records.  Each output record will contain one of the values for the &lt;i&gt;PropertyNames&lt;/i&gt; property, and all other properties will be identical.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Large Data Records&lt;/i&gt;: When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each data record is particularly large, setting &lt;i&gt;Large Data Records&lt;/i&gt; to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.&lt;/p&gt;


&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If no property names are given, then all properties with multiple values are unmerged.  In this case, unexpected occurrences of arrays in a property will cause unintentional unmerge operations.  Try to specify a value for &lt;i&gt;PropertyNames&lt;/i&gt; if possible.&lt;/li&gt;
&lt;li&gt;If multiple unmerge properties are specified, the number of data records that result from unmerging a given incoming data record is equal to the number of values of the unmerge property that has the most values.  That is, if two unmerge properties, &quot;A&quot; and &quot;B&quot; are specified where A has 5 values and B has 7 values, then 7 data records will result.  The first 5 records will contain, in order, the 5 values of A.  For the last two records, A will be undefined.  All other properties will be duplicated on each record.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records containing the separated values for the property or properties specified.</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>58</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Data Manipulators\Unmerge Data</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">17.1.0.119</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.DelimitedWriter.1">
								<sci:component name="Delimited Text Writer" version="2">
									<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>The filename for the destination data. Be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz or .zip to the filename. </sci:help>
										<sci:member>Maximum</sci:member>
										<sci:member>IfFileExists</sci:member>
										<sci:member>CharacterEncoding</sci:member>
										<sci:value>$(Rinput3file)</sci:value>
									</sci:arg>
									<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>The maximum number of data records to write (all if value is empty)</sci:help>
									</sci:arg>
									<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>What to do if the given destination file already exists</sci:help>
										<sci:legalval selected="true">Overwrite</sci:legalval>
										<sci:legalval>Append</sci:legalval>
										<sci:legalval>Halt</sci:legalval>
									</sci:arg>
									<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Indicates the character set that will be used within the file.&lt;/p&gt;
 
&lt;p&gt;ANSI is the default and specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.&lt;/p&gt;
 
&lt;p&gt;UTF-8 specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.&lt;/p&gt;
 
&lt;p&gt;&quot;Unicode&quot; and &quot;Unicode big endian&quot; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.&lt;/p&gt;
 
&lt;p&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org&apos;)&quot;&gt;http://www.unicode.org&lt;/a&gt;&lt;/p&gt;</sci:help>
										<sci:legalval selected="true">ANSI</sci:legalval>
										<sci:legalval>UTF-8</sci:legalval>
										<sci:legalval>Unicode</sci:legalval>
										<sci:legalval>Unicode big endian</sci:legalval>
									</sci:arg>
									<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Specifies the character to use to separate
the fields in the file.  (Whole records are separated by line breaks.) Make sure you use a different
MultiValueDelimiter than Delimiter!</sci:help>
										<sci:member>MultipleValueDelimiter</sci:member>
										<sci:legalval>Tab</sci:legalval>
										<sci:legalval>Space</sci:legalval>
										<sci:legalval selected="true">Comma</sci:legalval>
										<sci:legalval>Colon</sci:legalval>
										<sci:legalval>Semicolon</sci:legalval>
									</sci:arg>
									<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>The delimiter to use between multiple value on a single property. If &quot;None&quot;, 
multiple values are separated into their own columns.</sci:help>
										<sci:legalval selected="true">None</sci:legalval>
										<sci:legalval>Semicolon</sci:legalval>
										<sci:legalval>Colon</sci:legalval>
										<sci:legalval>Comma</sci:legalval>
										<sci:legalval>Linefeed</sci:legalval>
									</sci:arg>
									<sci:arg name="Format Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:member>OutputColumnNames</sci:member>
										<sci:member>OutputColumnTypes</sci:member>
										<sci:member>OutputRowNumber</sci:member>
										<sci:member>UndefinedString</sci:member>
										<sci:member>MissingValue Format</sci:member>
									</sci:arg>
									<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Text to output when data for a given column is not present (leave empty or enter text of choice)</sci:help>
									</sci:arg>
									<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>Output column names</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Output a row that includes column types</sci:help>
										<sci:legalval selected="true">None</sci:legalval>
										<sci:legalval>SpotfireFormat</sci:legalval>
										<sci:legalval>NDIFormat</sci:legalval>
									</sci:arg>
									<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>Includes the number of the record as the first field for each record</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="MissingValue Format" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>How to write out explicitly-defined MissingValue properties. Each missing value property
contains a string that may provide information about the reason the value is missing.  You can ask to 
see either the missing value text containing this string, or use the undefined string to write out missing values.</sci:help>
										<sci:legalval selected="true">Use MissingValue Text</sci:legalval>
										<sci:legalval>Use UndefinedString</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/core</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Dec 11 15:05:11 2006</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Write Input Data for R</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Delimited Writer</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>DocumentNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>666 -820</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Writes data records to a text file with one data record per line and data separated by delimiters
</sci:value>
										<sci:value>&lt;p&gt;Data records are separated with a new line and the individual properties within each record are separated with the character specified by &lt;i&gt;Delimiter&lt;/I&gt;. The property names for the fields are stored as the first line of the file. 
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; to control the output format for properties 
  with more than one value (array properties).
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>6.0.2.0</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>56</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>#Methods := RGlobalPropertyNames(&apos;Stack Methods Stack \d+&apos;);

@&apos;Stack Name&apos; := Array();
@&apos;Methods&apos; := Array();

For #i In 1 .. NumValues(#Methods) Loop
	If #Methods[#i] Ne &apos;&apos; Then
		Append(@&apos;Stack Name&apos;, #Methods[#i]);
		Append(@&apos;Methods&apos;, GlobalProperty(#Methods[#i]));
	End If;
End Loop;

property(&quot;Stack Name&quot;) := @&apos;Stack Name&apos; ;
property(&quot;Method&quot;) := @&apos;Methods&apos; ;</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval>ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Collect Method Arguments</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &amp;quot;PropertyList&amp;quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	/* If the first line starts with a comment - remove comment marking. */
	If #displayName Like &apos;/*%&apos; Then
		#displayName := Trim(StrReplace(#displayName, &apos;/*&apos;, &apos;&apos;));
		#displayName := Trim(StrReplace(#displayName, &apos;*/&apos;, &apos;&apos;));
	End If;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -1195</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>66</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.SeparateValues.1">
								<sci:component name="Unmerge Data" version="2">
									<sci:arg name="PropertyNames" type="PropertyNameType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;The names of the one or more properties to separate and return as separate data records.  If no property names are given, then all properties with
multiple values will be unmerged. If multiple properties are unmerged, the number of unmerged records is the number of values of a property with the maximum number of values.</sci:help>
									</sci:arg>
									<sci:arg name="Additional Options" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Contains less commonly used parameters</sci:help>
										<sci:member>Large Data Records</sci:member>
										<sci:member>Unmerge ByteArrayValues</sci:member>
									</sci:arg>
									<sci:arg name="Large Data Records" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each of your records are particularly large, setting this parameter to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Unmerge ByteArrayValues" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:help>ByteArrayValues are property representations of binary data.  Although they are technically arrays of bytes and could be unmerged, in most cases these properties should be treated as a single value rather than an array of bytes.  This parameter is available to restore the previous odd behavior, if desired.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Sep 13 07:08:33 2016</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Unmerge Data</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Unmerge Data</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>GENERATORNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{5E28C170-2FEC-4A3C-90A6-2DCEAA330E9D}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>378 -1195</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Separates data records containing array properties into individual records with one array value per record</sci:value>
										<sci:value>&lt;p&gt;Each incoming data record with more than one value for the property or properties specified by &lt;i&gt;PropertyNames&lt;/i&gt; is duplicated for each of the values.  For example, an input data record with three values will generate three output data records.  Each output record will contain one of the values for the &lt;i&gt;PropertyNames&lt;/i&gt; property, and all other properties will be identical.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Large Data Records&lt;/i&gt;: When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each data record is particularly large, setting &lt;i&gt;Large Data Records&lt;/i&gt; to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.&lt;/p&gt;


&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If no property names are given, then all properties with multiple values are unmerged.  In this case, unexpected occurrences of arrays in a property will cause unintentional unmerge operations.  Try to specify a value for &lt;i&gt;PropertyNames&lt;/i&gt; if possible.&lt;/li&gt;
&lt;li&gt;If multiple unmerge properties are specified, the number of data records that result from unmerging a given incoming data record is equal to the number of values of the unmerge property that has the most values.  That is, if two unmerge properties, &quot;A&quot; and &quot;B&quot; are specified where A has 5 values and B has 7 values, then 7 data records will result.  The first 5 records will contain, in order, the 5 values of A.  For the last two records, A will be undefined.  All other properties will be duplicated on each record.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records containing the separated values for the property or properties specified.</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>67</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Data Manipulators\Unmerge Data</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">17.1.0.119</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.DelimitedWriter.1">
								<sci:component name="Delimited Text Writer" version="2">
									<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>The filename for the destination data. Be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz or .zip to the filename. </sci:help>
										<sci:member>Maximum</sci:member>
										<sci:member>IfFileExists</sci:member>
										<sci:member>CharacterEncoding</sci:member>
										<sci:value>$(Rinput4file)</sci:value>
									</sci:arg>
									<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>The maximum number of data records to write (all if value is empty)</sci:help>
									</sci:arg>
									<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>What to do if the given destination file already exists</sci:help>
										<sci:legalval selected="true">Overwrite</sci:legalval>
										<sci:legalval>Append</sci:legalval>
										<sci:legalval>Halt</sci:legalval>
									</sci:arg>
									<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Indicates the character set that will be used within the file.&lt;/p&gt;
 
&lt;p&gt;ANSI is the default and specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.&lt;/p&gt;
 
&lt;p&gt;UTF-8 specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.&lt;/p&gt;
 
&lt;p&gt;&quot;Unicode&quot; and &quot;Unicode big endian&quot; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.&lt;/p&gt;
 
&lt;p&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org&apos;)&quot;&gt;http://www.unicode.org&lt;/a&gt;&lt;/p&gt;</sci:help>
										<sci:legalval selected="true">ANSI</sci:legalval>
										<sci:legalval>UTF-8</sci:legalval>
										<sci:legalval>Unicode</sci:legalval>
										<sci:legalval>Unicode big endian</sci:legalval>
									</sci:arg>
									<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Specifies the character to use to separate
the fields in the file.  (Whole records are separated by line breaks.) Make sure you use a different
MultiValueDelimiter than Delimiter!</sci:help>
										<sci:member>MultipleValueDelimiter</sci:member>
										<sci:legalval>Tab</sci:legalval>
										<sci:legalval>Space</sci:legalval>
										<sci:legalval selected="true">Comma</sci:legalval>
										<sci:legalval>Colon</sci:legalval>
										<sci:legalval>Semicolon</sci:legalval>
									</sci:arg>
									<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>The delimiter to use between multiple value on a single property. If &quot;None&quot;, 
multiple values are separated into their own columns.</sci:help>
										<sci:legalval selected="true">None</sci:legalval>
										<sci:legalval>Semicolon</sci:legalval>
										<sci:legalval>Colon</sci:legalval>
										<sci:legalval>Comma</sci:legalval>
										<sci:legalval>Linefeed</sci:legalval>
									</sci:arg>
									<sci:arg name="Format Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:member>OutputColumnNames</sci:member>
										<sci:member>OutputColumnTypes</sci:member>
										<sci:member>OutputRowNumber</sci:member>
										<sci:member>UndefinedString</sci:member>
										<sci:member>MissingValue Format</sci:member>
									</sci:arg>
									<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Text to output when data for a given column is not present (leave empty or enter text of choice)</sci:help>
									</sci:arg>
									<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>Output column names</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Output a row that includes column types</sci:help>
										<sci:legalval selected="true">None</sci:legalval>
										<sci:legalval>SpotfireFormat</sci:legalval>
										<sci:legalval>NDIFormat</sci:legalval>
									</sci:arg>
									<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>Includes the number of the record as the first field for each record</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="MissingValue Format" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>How to write out explicitly-defined MissingValue properties. Each missing value property
contains a string that may provide information about the reason the value is missing.  You can ask to 
see either the missing value text containing this string, or use the undefined string to write out missing values.</sci:help>
										<sci:legalval selected="true">Use MissingValue Text</sci:legalval>
										<sci:legalval>Use UndefinedString</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/core</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Dec 11 15:05:11 2006</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Write Input Data for R</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Delimited Writer</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>DocumentNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>666 -1195</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Writes data records to a text file with one data record per line and data separated by delimiters
</sci:value>
										<sci:value>&lt;p&gt;Data records are separated with a new line and the individual properties within each record are separated with the character specified by &lt;i&gt;Delimiter&lt;/I&gt;. The property names for the fields are stored as the first line of the file. 
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; to control the output format for properties 
  with more than one value (array properties).
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>6.0.2.0</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>65</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Learn R RF or XGB Model Internal" version="2">
									<sci:arg name="RModelComponent" type="DestinationURLType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>RModelComponent</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>Name of internal component used to hold learned R model.</sci:help>
										<sci:value>Protocols/Shared/Peter/RP1/RLearn Model Template</sci:value>
									</sci:arg>
									<sci:arg name="Relearn Component" type="StringType" required="true" visibility="visible" multi="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Relearn Component</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>GUID of component to use for relearning</sci:help>
										<sci:value>{2F4B051F-A537-4FA5-83A7-DB28523419EC}</sci:value>
									</sci:arg>
									<sci:arg name="Relearn Parameters" type="TextType" required="true" visibility="visible" multi="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Relearn Parameters</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>Parameters to save in model for relearning</sci:help>
										<sci:value>Name,UseProperties,PredefinedSet,UserSet,IgnoreProperties,Learn Options,Model Domain Fingerprint,Numeric Distance Function,Numeric Scaling,Fingerprint Distance Function,ROutput,Convert Fingerprints To,Fixed Length,PlotWidth,PlotHeight,TypeOfPropertyToLearn,Number Of Trees,Number Of Descriptors,Specified Fraction,Equalize Class Sizes,Node Size,Seed,Impute Missing Values,Imputation Iterations,Additional Properties,Destination Folder</sci:value>
									</sci:arg>
									<sci:arg name="RScript" type="LinkSingleParentParameterType" required="true" visibility="visible" multi="false">
										<sci:help>R script for building the model.</sci:help>
										<sci:value>RScript</sci:value>
									</sci:arg>
									<sci:arg name="RFunctionsScript" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:metaproplist>
											<sci:propval name="SCI_InitializeUsingOrigType">TextType</sci:propval>
										</sci:metaproplist>
										<sci:value>RFunctionsScript</sci:value>
									</sci:arg>
									<sci:arg name="RModelScript" type="LinkSingleParentParameterType" required="true" visibility="visible" multi="false">
										<sci:help>Body of R script for running the built model.  Boilerplate script will be prepended and appended for reading input data and writing results.  Input data will be placed in a variable named x, and output results should be placed in a variable named pred.</sci:help>
										<sci:value>RModelScript</sci:value>
									</sci:arg>
									<sci:arg name="Destination Folder" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Name of component database folder in which the learned model is to be saved.</sci:help>
										<sci:value>Destination Folder</sci:value>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
										<sci:member>RunToCompletion Categorize Using</sci:member>
										<sci:legalval selected="true">False</sci:legalval>
										<sci:legalval>True - For Each Data Record</sci:legalval>
										<sci:legalval>True - For Each Category</sci:legalval>
									</sci:arg>
									<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
										<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
										<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Run subprotocol on grid engine if available.</sci:help>
										<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
										<sci:value>fpprops,RemoveName</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="Convert Fingerprints To" type="LinkParentParameterType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:metaproplist>
											<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
										</sci:metaproplist>
										<sci:help>This option controls the automatic conversion of fingerprint properties into different format</sci:help>
										<sci:member>Fixed Length</sci:member>
										<sci:value>Convert Fingerprints To</sci:value>
									</sci:arg>
									<sci:arg name="Seed" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false">
										<sci:metaproplist>
											<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
										</sci:metaproplist>
										<sci:value>Seed</sci:value>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Learn R RF or XGB Model Internal</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>LearnNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>790</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{E40E52E7-C5D3-4B3E-83FF-E5A399F90173}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -1545</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Internal component for forest-type models</sci:value>
										<sci:value>Such models include forests of random trees and XGBoost</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>18.1.0.1523</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/rstats</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Thu Jul 20 12:38:58 2017</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>48</sci:value>
									</sci:arg>
									<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>OriginalPackage</sci:help>
										<sci:value>scitegic/coreutils</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Modified</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Fixed Length" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" uimpl="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Fixed Length</sci:value>
												<sci:value>Fixed Length</sci:value>
											</sci:mpropval>
										</sci:metaproplist>
										<sci:help>If Convert Fingerprints To is given a fixed-length type, then this is the fixed-length.  Bits larger than this length are folded into this range using a mod operation.</sci:help>
										<sci:value>Fixed Length</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Learn R RF or XGB Model Internal</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@DoImportance</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Fri Sep 15 09:44:32 2006</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Computing importance?</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>954 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">6.0.0.46</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>isupports(&apos;IMolecule&apos;)</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Fri Sep 15 09:44:32 2006</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Has molecule?</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1242 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">6.0.0.46</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@fpprops := rpropertynames(&apos;^CM#&apos;);

@RFfpname := &apos;none&apos;;
if numvalues(@fpprops) &gt; 0 then
	@proptokens := rsplit(@fpprops[1], &apos;#&apos;, &apos;g&apos;);
	@RFfpname := @proptokens[2];
end if;

numvalues(@fpprops) &gt; 0</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Fri Sep 15 09:44:32 2006</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Has any FP property?</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1530 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">6.0.0.46</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.DataCacheIO.1">
										<sci:component name="Cache Writer" version="2">
											<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
												<sci:help>The name of the cache to write, e.g., A, 1234 or MyCache.</sci:help>
												<sci:member>Maximum</sci:member>
												<sci:member>Append</sci:member>
												<sci:member>Scope</sci:member>
												<sci:value>$(RModelfile)</sci:value>
											</sci:arg>
											<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
												<sci:help>The maximum number of data records to write to the cache.</sci:help>
											</sci:arg>
											<sci:arg name="Append" type="BoolType" required="true" visibility="visible" multi="false">
												<sci:help>If True, append to a currently-existing cache if possible; if False, clear any current contents of the cache</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. &lt;I&gt;Job Only&lt;/I&gt; creates a cache that is visible
only to components in the currently-running protocol, and which is deleted when the protocol finishes.
&lt;I&gt;User Only&lt;/I&gt; creates a cache that is visible to components in any protocol a particular user runs;  
&lt;I&gt;All Users&lt;/I&gt; creates a cache that is visible to any user on the Pipeline Pilot server. 
&lt;P&gt;Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to fully determine a particular cache.&lt;/P&gt;
&lt;P&gt;Since the caches created with scopes &lt;I&gt;User Only&lt;/I&gt; and &lt;I&gt;All Users&lt;/I&gt;
may be accessed by multiple jobs, you should use caution, as problems may arise if two jobs try to write to 
the same shared cache at once. Also, to save disk space, you are responsible for deleting these caches
when finished, using the &lt;I&gt;Delete Cache&lt;/I&gt; component. &lt;/P&gt;
			</sci:help>
												<sci:legalval selected="true">Job Only</sci:legalval>
												<sci:legalval>User Only</sci:legalval>
												<sci:legalval>All Users</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
											</sci:arg>
											<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
												<sci:legalval selected="true">Writer</sci:legalval>
												<sci:legalval>Reader</sci:legalval>
												<sci:legalval>Writer/Reader</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Tue Apr 26 16:51:14 2005</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Cache Writer (input mols)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1818 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>DATABASENODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{674E3781-33EA-42BB-9099-49CB4C3D08E6}</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Cache Writer</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Writes data records to a named cache</sci:value>
												<sci:value>&lt;p&gt;A data cache is place where you can temporarily store data records without losing information.  Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache.  A cache can contain records of different types.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To avoid clashes with other cache names, you can use temporary filenames as &lt;i&gt;CacheID&lt;/i&gt;.  For example you could have a temporary file identified by MYCACHE and set &lt;i&gt;CacheID&lt;/i&gt; to $(MYCACHE).&lt;/li&gt;
&lt;li&gt;Typically, a cache is scoped to only be visible to component in the currently-running job.  To create caches that outlive a job, and may be seen by other users, use the &lt;I&gt;Scope&lt;/I&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To retrieve data from a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9099-05B44C3D08E6}&apos;)&quot;&gt;Cache Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To join against a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>5.0.0.13</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>3</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\File Writers\Cache Writer</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@&apos;Old Learned Property&apos; is defined and @&apos;Old Learned Property&apos; ne &apos;&apos;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
												<sci:value>@LearnedPropertyName := trim(@LearnedPropertyName);</sci:value>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval>ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Are we relearning?</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -245</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>4</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@LearnedPropertyName := @&apos;New Learned Property&apos;;


</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Assign relearn params</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>378 -245</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>5</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.LearnedModelReader.1">
										<sci:component name="Learned Model Reader" version="2">
											<sci:arg name="LearnedPropertyName" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>The name of a learned model</sci:help>
												<sci:value>$(Old Learned Property)</sci:value>
											</sci:arg>
											<sci:arg name="MaximumNumberOfFeatures" type="LongType" required="false" visibility="visible" multi="false">
												<sci:help>The maximum number of bins we want to output</sci:help>
											</sci:arg>
											<sci:arg name="OutputWhat" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>What to output from the model. Options are:
&lt;ul&gt;
&lt;li&gt;Bin Information: (Bayesian models only.) Statistics for each &quot;good&quot; and &quot;bad&quot; bin in the model.
&lt;li&gt;Training Properties: The training data used to build the model. For this option, the model must have been built with &quot;Save Training Properties&quot; as one of the &lt;i&gt;Learn Options&lt;/i&gt;, but with &quot;Encrypt Data&quot; not selected.
&lt;li&gt;Property Information: A list of the properties used to train the model and their types.
&lt;li&gt;Domain Information: Statistics defining the model&apos;s domain of applicability. For this option, the model must have been built with &quot;Track Property Ranges&quot; or &quot;Perform OPS Analysis&quot; as one of the &lt;i&gt;Learn Options&lt;/i&gt;.
&lt;li&gt;Equation Information: For models defined by equations (such as Bayesian and linear regression models), statistics and parameters of the equation defining the model. 
&lt;/ul&gt;
</sci:help>
												<sci:legalval>Bin Information</sci:legalval>
												<sci:legalval>Training Properties</sci:legalval>
												<sci:legalval>Property Information</sci:legalval>
												<sci:legalval>Domain Information</sci:legalval>
												<sci:legalval>Equation Information</sci:legalval>
												<sci:legalval selected="true">Training Data</sci:legalval>
											</sci:arg>
											<sci:arg name="OutputCategories" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>If given, a comma-separated list of categories to output.  Information about other categories will not be output</sci:help>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:value>ComponentReturnsPass</sci:value>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Wed Mar 18 12:48:35 2009</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Learned Model Reader</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>DATABASENODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{E145CB33-FFEE-455E-94CC-F0FA0B88B2AC}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>666 -245</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Reads the contents of a learned model</sci:value>
												<sci:value>The contents of a learned model are output. 

Output Pass  - Data records with each bins contents</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>6</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Analysis and Statistics\Readers\Learned Model Reader</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">6.1.0.10</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Learn R Model Internal" version="2">
											<sci:arg name="RScript" type="LinkSingleParentParameterType" required="true" visibility="visible" multi="false">
												<sci:metaproplist>
													<sci:propval name="SCI_InitializeUsingOrigType">TextType</sci:propval>
												</sci:metaproplist>
												<sci:help>R script for building the model.</sci:help>
												<sci:value>RScript</sci:value>
											</sci:arg>
											<sci:arg name="RModelScript" type="LinkSingleParentParameterType" required="true" visibility="visible" multi="false">
												<sci:metaproplist>
													<sci:propval name="SCI_InitializeUsingOrigType">TextType</sci:propval>
												</sci:metaproplist>
												<sci:help>Body of R script for running the built model.  Boilerplate script will be prepended and appended for reading input data and writing results.  Input data will be placed in a variable named x, and output results should be placed in a variable named pred.</sci:help>
												<sci:value>RModelScript</sci:value>
											</sci:arg>
											<sci:arg name="RModelComponent" type="LinkSingleParentParameterType" required="true" visibility="visible" multi="false">
												<sci:metaproplist>
													<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
												</sci:metaproplist>
												<sci:help>Name of internal component used to hold learned R model.</sci:help>
												<sci:value>RModelComponent</sci:value>
											</sci:arg>
											<sci:arg name="Relearn Component" type="LinkSingleParentParameterType" required="true" visibility="visible" multi="false">
												<sci:metaproplist>
													<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
												</sci:metaproplist>
												<sci:help>GUID of component to use for relearning</sci:help>
												<sci:value>Relearn Component</sci:value>
											</sci:arg>
											<sci:arg name="Relearn Parameters" type="LinkSingleParentParameterType" required="true" visibility="visible" multi="false">
												<sci:metaproplist>
													<sci:propval name="SCI_InitializeUsingOrigType">TextType</sci:propval>
												</sci:metaproplist>
												<sci:help>Parameters to save in model for relearning</sci:help>
												<sci:value>Relearn Parameters</sci:value>
											</sci:arg>
											<sci:arg name="Destination Folder" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:metaproplist>
													<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
												</sci:metaproplist>
												<sci:help>Name of component database folder in which the learned model is to be saved.</sci:help>
												<sci:value>Destination Folder</sci:value>
											</sci:arg>
											<sci:arg name="RFunctionsScript" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
												<sci:metaproplist>
													<sci:propval name="SCI_InitializeUsingOrigType">TextType</sci:propval>
												</sci:metaproplist>
												<sci:value>RFunctionsScript</sci:value>
											</sci:arg>
											<sci:arg name="Convert Fingerprints To" type="LinkParentParameterType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
												<sci:metaproplist>
													<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
												</sci:metaproplist>
												<sci:help>This option controls the automatic conversion of fingerprint properties into different format</sci:help>
												<sci:member>Fixed Length</sci:member>
												<sci:value>Convert Fingerprints To</sci:value>
											</sci:arg>
											<sci:arg name="Seed" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false">
												<sci:metaproplist>
													<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
													<sci:mpropval name="SCI_PromotedFrom" type="StringType">
														<sci:value>Seed</sci:value>
													</sci:mpropval>
													<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
												</sci:metaproplist>
												<sci:value>Seed</sci:value>
											</sci:arg>
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
												<sci:value>inputCache,Xcache</sci:value>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>When the network runs, processes once or until done for each process call</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="TextType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
												<sci:value>XignoreList,stderr,badRecordHash,RExitStatus,FitSummary,RVersion,keptProperties,excludedProperties,OutputLegalValues,vcModelDomain_Vars,vcModelDomain_Constants,vcModelDomain_Properties,vcModelDomain_Loadings,vcModelDomain_ComponentStats,vcModelDomain_Variance,vcModelDomain_FingerprintFeatures,vcModelDomain_InverseCovariance,Cache Properties,Cache Predictions,Cache Data,Cache Names,Cache Y Values,Cache Predictions,HTMLHelpText,DomainPointInfoText,Cache Additional Properties,OutputHelp,gotY,UncompressedRModelSize </sci:value>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExtraProps" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
												<sci:legalval>Cant Replace With Copy</sci:legalval>
												<sci:legalval>Cant Open</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/rstats</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Tue Jun 30 08:41:54 2009</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{9072E07C-AB06-4FA0-8D54-60E86CA38DA0}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Learn R Model Internal</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>LEARNNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>954 -395</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>R Learner internal component</sci:value>
												<sci:value>Internal component containing logic common to most R Learners. 
&lt;p&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;p&gt;
&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/rstats/docs/r_stats.pdf&apos;)&quot;&gt;R Statistics Components User Guide &lt;/a&gt;
&lt;p&gt;
&lt;a href=&quot;javascript:DoLink(&apos;http://www.r-project.org/&apos;)&quot;&gt;R Project for Statistical Computing Web Site&lt;/a&gt;
&lt;p&gt;
&lt;a href=&quot;javascript:DoLink(&apos;http://finzi.psych.upenn.edu/search.html&apos;)&quot;&gt;R Help Search Web Site&lt;/a&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.5.0.10</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>%VERSION 3%</sci:value>
												<sci:value>673 -670 727 308</sci:value>
												<sci:value>255 255 0</sci:value>
												<sci:value>Do not revert to shortcut! This is a customized version of the component due to the unique forest and XGB model requirements. (See components with ***, but also the overall structure differs.)</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>7</sci:value>
											</sci:arg>
											<sci:arg name="Fixed Length" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" uimpl="false">
												<sci:metaproplist>
													<sci:mpropval name="SCI_PromotedFrom" type="StringType">
														<sci:value>Fixed Length</sci:value>
													</sci:mpropval>
												</sci:metaproplist>
												<sci:help>If Convert Fingerprints To is given a fixed-length type, then this is the fixed-length.  Bits larger than this length are folded into this range using a mod operation.</sci:help>
												<sci:value>Fixed Length</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Learn R Model Internal</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>if @IgnoreProperties is not defined or @IgnoreProperties eq &apos;&apos; then
     @XignoreList := @Name;
else
     @XignoreList := @IgnoreProperties . &apos;,&apos; . @Name;
end if;

@gotY := False;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Apr 23 12:20:45 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>***Ensure y is on ignore list for calculate props</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.17</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DataCacheIO.1">
												<sci:component name="Cache Writer" version="2">
													<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The name of the cache to write, for example: A, 1234 or MyCache.  To create a temporary cacheID use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component.
</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>Append</sci:member>
														<sci:member>Scope</sci:member>
														<sci:value>$(XCache)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to write to the cache.</sci:help>
													</sci:arg>
													<sci:arg name="Append" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>If True, append to a currently-existing cache if possible; if False, clear any current contents of the cache</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. &lt;I&gt;Job Only&lt;/I&gt; creates a cache that is visible
only to components in the currently-running protocol, and which is deleted when the protocol finishes.
&lt;I&gt;User Only&lt;/I&gt; creates a cache that is visible to components in any protocol a particular user runs;  
&lt;I&gt;All Users&lt;/I&gt; creates a cache that is visible to any user on the Pipeline Pilot server. 
&lt;P&gt;Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to fully determine a particular cache.&lt;/P&gt;
&lt;P&gt;Since the caches created with scopes &lt;I&gt;User Only&lt;/I&gt; and &lt;I&gt;All Users&lt;/I&gt;
may be accessed by multiple jobs, you should use caution, as problems may arise if two jobs try to write to 
the same shared cache at once. Also, to save disk space, you are responsible for deleting these caches
when finished, using the &lt;I&gt;Delete Cache&lt;/I&gt; component. &lt;/P&gt;
			</sci:help>
														<sci:legalval selected="true">Job Only</sci:legalval>
														<sci:legalval>User Only</sci:legalval>
														<sci:legalval>All Users</sci:legalval>
													</sci:arg>
													<sci:arg name="Create Index for Join" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>If set to True, creates an index for the cache that can be used by subsequent &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  As long as the later Join components use identical settings, the created index will greatly improve the performance of the join.  When set to true, you will also need to update &lt;i&gt;JoinUsing&lt;/i&gt;, &lt;i&gt;JoinUsingListType&lt;/i&gt;, &lt;i&gt;JoinPropertyType&lt;/i&gt;, and &lt;i&gt;IgnoreCase&lt;/i&gt; to match your Join component.</sci:help>
														<sci:member>JoinUsing</sci:member>
														<sci:member>IgnoreCase</sci:member>
														<sci:member>JoinPropertyType</sci:member>
														<sci:member>JoinUsingListType</sci:member>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="JoinUsing" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The name of the property or properties to index for use by &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
														<sci:value>RBadInputDataIndex</sci:value>
													</sci:arg>
													<sci:arg name="JoinUsingListType" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted for creating a cache index when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: The join will use only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: The join will use the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;
&lt;p&gt;This parameter must match the identically named parameter on the Join component in order to benefit from the created index.&lt;/p&gt;</sci:help>
														<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
														<sci:legalval>UseFirstDefinedValue</sci:legalval>
														<sci:legalval selected="true">UseAllValues</sci:legalval>
													</sci:arg>
													<sci:arg name="JoinPropertyType" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The data type of the &lt;i&gt;JoinUsing&lt;/i&gt; property. This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
														<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
														<sci:legalval selected="true">IsNumeric</sci:legalval>
														<sci:legalval>IsText</sci:legalval>
														<sci:legalval>IsDate</sci:legalval>
													</sci:arg>
													<sci:arg name="IgnoreCase" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
														<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
													</sci:arg>
													<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
														<sci:legalval selected="true">Writer</sci:legalval>
														<sci:legalval>Reader</sci:legalval>
														<sci:legalval>Writer/Reader</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Oct 31 15:17:51 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Cache Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1242 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DATABASENODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{674E3781-33EA-42BB-9099-49CB4C3D08E6}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Cache Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Writes data records to a named cache</sci:value>
														<sci:value>&lt;p&gt;A data cache is place where you can temporarily store data records without losing information.  Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache.  A cache can contain records of different types.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To avoid clashes with other cache names, you can use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to obtain a global with a unique cacheID.  For example, you could have a temporary cacheID identified by MYCACHE and set &lt;i&gt;CacheID&lt;/i&gt; to $(MYCACHE).&lt;/li&gt;
&lt;li&gt;Typically, a cache is scoped to only be visible to component in the currently-running job.  To create caches that outlive a job, and may be seen by other users, use the &lt;I&gt;Scope&lt;/I&gt; parameter.&lt;/li&gt;
&lt;li&gt;Caches can be used with the &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; component to add properties to a separate data stream.  To improve the performance of the join, the cache can be indexed during creation by using the &lt;i&gt;Create Index for Join&lt;/i&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To retrieve data from a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9099-05B44C3D08E6}&apos;)&quot;&gt;Cache Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To join against a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.5.1.5</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>36</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Writers\Cache Writer</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>keep(@calcProps); 
remove(@Name)</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
														<sci:value>@calcProps :=  @CalculatedProperties;

if @ExtraProps is defined then
     @calcProps .= &apos;,&apos; . @ExtraProps;
end if;

if @XignoreList is defined then
     @calcProps .= &apos;,&apos; . @XignoreList;
end if;

expand(&apos;,&apos;, @calcProps);
</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Apr 23 12:20:45 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Keep X properties</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -645</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.17</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@&apos;Old Learned Property&apos; is defined and @&apos;Old Learned Property&apos; ne &apos;&apos;</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:value>ComponentReturnsPass</sci:value>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Are we relearning?</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -645</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>37</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.PropertyCalculator.1">
												<sci:component name="Calculate Properties" version="2">
													<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The properties to learn from: 
  &apos;AllPropertiesOnFirstData&apos; uses all those that are found
on the first data object;
  &apos;CalculablePropertiesOnFirstData&apos; uses all those that are
found on the first data that can be calculated;
  &apos;UserSet&apos; takes the list of properties from the parameter
UserSet.  Property ranges can be given by giving the first
and last property in the range separated by a hyphen; 
properties can be referred to by index using the word &quot;Column&quot;
followed by the index, i.e., Column3-Column10.
  &apos;PointInfoText&apos; takes a copy of a previously-generated 
Calculate Properties state in either the globals or the parameter
PointInfoText. The restores the calculator to behave as it did
when the text was originally generated.  This is useful for connecting
Learn components with Model components.
</sci:help>
														<sci:member>IgnoreProperties</sci:member>
														<sci:member>UserSet</sci:member>
														<sci:member>PredefinedSet</sci:member>
														<sci:value>$(UseProperties)</sci:value>
													</sci:arg>
													<sci:arg name="PredefinedSet" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A predefined set of properties to use for learning</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to PredefinedSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;PredefinedSet&apos;</sci:enabledscript>
														<sci:value>$(PredefinedSet)</sci:value>
													</sci:arg>
													<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma-separated list of properties to use for calculation. 
&lt;p&gt;If an item on the list contains a hyphen (e.g., &quot;X1-X5&quot;), and the properties on either side of the hyphen (e.g., &quot;X1&quot;, &quot;X5&quot;) are defined on the first data record, then all properties in that range are included. Note that the properties within the specified range are determined by the order of properties in the property list. Thus, if properties in the property list are in the following order: X1, X2, X5, X3, X4, X6, then the range &quot;X1-X5&quot; will only include properties X1, X2, and X5.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;UserSet&apos;</sci:enabledscript>
														<sci:value>$(UserSet)</sci:value>
													</sci:arg>
													<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma-separated list of properties to ignore.  This is used, for example, if UseProperties is AllPropertiesOnFirstData, but there is a small set of undesirable properties you don&apos;t wish to use but can&apos;t remove (i.e., record names)</sci:help>
														<sci:value>$(XignoreList),RPredictionOutputValue</sci:value>
													</sci:arg>
													<sci:arg name="Convert Fingerprints To" type="LinkParentParameterType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:metaproplist>
															<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
														</sci:metaproplist>
														<sci:help>This option controls the automatic conversion of fingerprint properties into different format</sci:help>
														<sci:member>Fixed Length</sci:member>
														<sci:value>Convert Fingerprints To</sci:value>
													</sci:arg>
													<sci:arg name="PutPropertyListInGlobal" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>If given, the array of properties that are being calculated is placed into this global property when the first data is passed into the component.</sci:help>
														<sci:value>CalculatedProperties</sci:value>
													</sci:arg>
													<sci:arg name="PutCalculatedPropertiesInProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>If given, the array of properties that are newly calculated for a particlar sample are placed into this property on each data</sci:help>
													</sci:arg>
													<sci:arg name="IllegalCharacters" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>If given, this is a regular expression that is applied to property names to discover illegal characters.  In this case, the illegal characters are replaced with underscores, and the original property names and the new property names added to the global values PropertyCalculatorOriginalNames and PropertyCalculatorNewNames, respectively.  This gives you the mapping from the original name to the internal R names.</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Fixed Length" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" uimpl="false">
														<sci:help>If Convert Fingerprints To is given a fixed-length type, then this is the fixed-length.  Bits larger than this length are folded into this range using a mod operation.</sci:help>
														<sci:value>Fixed Length</sci:value>
													</sci:arg>
													<sci:arg name="RemoveCalculatedPropertiesInProperty" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Remove the properties listed in the particular property name</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon May 26 06:56:16 2014</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Calculate Properties</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>CalculatorNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{22FFFABF-758F-406F-976F-46E680B2CBFF}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon</sci:help>
														<sci:value>Calculate Properties</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>9.2.0.9</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -820</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>This component is used to provide a general interface that can be promoted in Learners, and also used in Models.</sci:value>
														<sci:value>This component is used in subprotocols to provide a standard interface for Learners that can later be used to provide automatic calculation later in your learned models.

Typically, some of the parameters of this interface are promoted in the Learner.  Others are kept hidden, either because they are not needed, or because they are defaulted to appropriate values.

One it has initialized by the first data record, it sets the global property PointInfoText with a string that contains all the information you later need to re-initialize another Calculate Properties component in a saved model to the same state as it was in in the Learner.  To use this, you save the global PointInfoText on a parameter of the same name on the model component, then set the UseProperties parameter to the value PointInfoText.</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>147</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Calculate Properties</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DelimitedWriter.1">
												<sci:component name="Delimited Text Writer" version="2">
													<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false">
														<sci:help>The filename for the destination data. Be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz or .zip to the filename. </sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>IfFileExists</sci:member>
														<sci:member>CharacterEncoding</sci:member>
														<sci:value>$(Rinput2file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to write (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>What to do if the given destination file already exists</sci:help>
														<sci:legalval selected="true">Overwrite</sci:legalval>
														<sci:legalval>Append</sci:legalval>
														<sci:legalval>Halt</sci:legalval>
													</sci:arg>
													<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Indicates the character set that will be used within the file.&lt;/p&gt;
 
&lt;p&gt;ANSI is the default and specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.&lt;/p&gt;
 
&lt;p&gt;UTF-8 specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.&lt;/p&gt;
 
&lt;p&gt;&quot;Unicode&quot; and &quot;Unicode big endian&quot; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.&lt;/p&gt;
 
&lt;p&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org&apos;)&quot;&gt;http://www.unicode.org&lt;/a&gt;&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">ANSI</sci:legalval>
														<sci:legalval>UTF-8</sci:legalval>
														<sci:legalval>Unicode</sci:legalval>
														<sci:legalval>Unicode big endian</sci:legalval>
													</sci:arg>
													<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies the character to use to separate
the fields in the file.  (Whole records are separated by line breaks.) Make sure you use a different
MultiValueDelimiter than Delimiter!</sci:help>
														<sci:member>MultipleValueDelimiter</sci:member>
														<sci:legalval>Tab</sci:legalval>
														<sci:legalval>Space</sci:legalval>
														<sci:legalval selected="true">Comma</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
														<sci:legalval>Semicolon</sci:legalval>
													</sci:arg>
													<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The delimiter to use between multiple value on a single property. If &quot;None&quot;, 
multiple values are separated into their own columns.</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Semicolon</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
														<sci:legalval>Linefeed</sci:legalval>
													</sci:arg>
													<sci:arg name="Format Options" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:member>OutputColumnNames</sci:member>
														<sci:member>OutputColumnTypes</sci:member>
														<sci:member>OutputRowNumber</sci:member>
														<sci:member>UndefinedString</sci:member>
														<sci:member>MissingValue Format</sci:member>
													</sci:arg>
													<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Text to output when data for a given column is not present (leave empty or enter text of choice)</sci:help>
													</sci:arg>
													<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Output column names</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Output a row that includes column types</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>SpotfireFormat</sci:legalval>
														<sci:legalval>NDIFormat</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Includes the number of the record as the first field for each record</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="MissingValue Format" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>How to write out explicitly-defined MissingValue properties. Each missing value property
contains a string that may provide information about the reason the value is missing.  You can ask to 
see either the missing value text containing this string, or use the undefined string to write out missing values.</sci:help>
														<sci:legalval selected="true">Use MissingValue Text</sci:legalval>
														<sci:legalval>Use UndefinedString</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Dec 11 15:05:11 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Write Input Data for R</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Delimited Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1242 -820</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Writes data records to a text file with one data record per line and data separated by delimiters
</sci:value>
														<sci:value>&lt;p&gt;Data records are separated with a new line and the individual properties within each record are separated with the character specified by &lt;i&gt;Delimiter&lt;/I&gt;. The property names for the fields are stored as the first line of the file. 
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; to control the output format for properties 
  with more than one value (array properties).
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.2.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>38</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>/* See if we need to remove sample name if relearning. (The saved samples have an arbitrary
   Name assigned to each record)*/
if #first then
	#first := false;
		
	if @UseProperties eq &apos;AllPropertiesOnFirstData&apos; and @&apos;Old Learned Property&apos; is defined and @&apos;Old Learned Property&apos; ne &apos;&apos; then
		if Name is not defined then
			@RemoveName := True;
			
			/* Remove from @calcProps and @CalculatedProperties */
			for #i in reverse numvalues(@calcProps) .. 1 loop
				if @calcProps[#i] eq &apos;Name&apos; then
					RemoveValue(@calcProps, #i);
					break;
				end if;
			end loop;
			
			expand(&apos;,&apos;, @CalculatedProperties);
			for #i in reverse numvalues(@CalculatedProperties) .. 1 loop
				if @CalculatedProperties[#i] eq &apos;Name&apos; then
					RemoveValue(@CalculatedProperties, #i);
					break;
				end if;
			end loop;
			
			contract(&apos;,&apos;, @CalculatedProperties);
			
		end if;
	end if;
	
end if;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
														<sci:value>@RemoveName := false; 
#first := true;</sci:value>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Check for Name if relearning</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -1195</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>39</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.PropertyFunctions.1">
												<sci:component name="Keep Properties" version="2">
													<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Comma-separated list of property names to keep</sci:help>
														<sci:value>$(Name)</sci:value>
													</sci:arg>
													<sci:arg name="RenameList" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>If provided, it causes the properties given in PropertyList to be 
renamed to the corresponding name in this list.  If not provided, then no properties are renamed.</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>the action to perform</sci:help>
														<sci:value>Keep</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Oct 17 16:03:31 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Keep Y property</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>true</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -1195</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{456195EF-9708-4367-B3DD-21EBF3796604}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Keeps only the specified properties
</sci:value>
														<sci:value>For each incoming data record, retains only the properties found in the list of property names specified by &lt;i&gt;PropertyList&lt;/i&gt;.  All other properties are removed.

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;i&gt;RenameList&lt;/i&gt; if you wish to change the names of the retained properties.
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To remove specified properties from each data record, use 
&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>With only the specified properties remaining</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.1.4</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>4</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Keep Properties</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>if (not @gotY) and property(@Name) is defined and trim(property(@Name)) ne &apos;&apos; then
	@gotY := True;
end if;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Check for at least 1 valid Y value</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -1195</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>44</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DelimitedWriter.1">
												<sci:component name="Delimited Text Writer" version="2">
													<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false">
														<sci:help>The filename for the destination data. Be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz or .zip to the filename. </sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>IfFileExists</sci:member>
														<sci:member>CharacterEncoding</sci:member>
														<sci:value>$(Rinput1file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to write (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>What to do if the given destination file already exists</sci:help>
														<sci:legalval selected="true">Overwrite</sci:legalval>
														<sci:legalval>Append</sci:legalval>
														<sci:legalval>Halt</sci:legalval>
													</sci:arg>
													<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Indicates the character set that will be used within the file.&lt;/p&gt;
 
&lt;p&gt;ANSI is the default and specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.&lt;/p&gt;
 
&lt;p&gt;UTF-8 specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.&lt;/p&gt;
 
&lt;p&gt;&quot;Unicode&quot; and &quot;Unicode big endian&quot; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.&lt;/p&gt;
 
&lt;p&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org&apos;)&quot;&gt;http://www.unicode.org&lt;/a&gt;&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">ANSI</sci:legalval>
														<sci:legalval>UTF-8</sci:legalval>
														<sci:legalval>Unicode</sci:legalval>
														<sci:legalval>Unicode big endian</sci:legalval>
													</sci:arg>
													<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies the character to use to separate
the fields in the file.  (Whole records are separated by line breaks.) Make sure you use a different
MultiValueDelimiter than Delimiter!</sci:help>
														<sci:member>MultipleValueDelimiter</sci:member>
														<sci:legalval>Tab</sci:legalval>
														<sci:legalval>Space</sci:legalval>
														<sci:legalval selected="true">Comma</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
														<sci:legalval>Semicolon</sci:legalval>
													</sci:arg>
													<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The delimiter to use between multiple value on a single property. If &quot;None&quot;, 
multiple values are separated into their own columns.</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Semicolon</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
														<sci:legalval>Linefeed</sci:legalval>
													</sci:arg>
													<sci:arg name="Format Options" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:member>OutputColumnNames</sci:member>
														<sci:member>OutputColumnTypes</sci:member>
														<sci:member>OutputRowNumber</sci:member>
														<sci:member>UndefinedString</sci:member>
														<sci:member>MissingValue Format</sci:member>
													</sci:arg>
													<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Text to output when data for a given column is not present (leave empty or enter text of choice)</sci:help>
													</sci:arg>
													<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Output column names</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Output a row that includes column types</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>SpotfireFormat</sci:legalval>
														<sci:legalval>NDIFormat</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Includes the number of the record as the first field for each record</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="MissingValue Format" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>How to write out explicitly-defined MissingValue properties. Each missing value property
contains a string that may provide information about the reason the value is missing.  You can ask to 
see either the missing value text containing this string, or use the undefined string to write out missing values.</sci:help>
														<sci:legalval selected="true">Use MissingValue Text</sci:legalval>
														<sci:legalval>Use UndefinedString</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Dec 11 15:05:11 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Write Input Data for R</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Delimited Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1242 -1195</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Writes data records to a text file with one data record per line and data separated by delimiters
</sci:value>
														<sci:value>&lt;p&gt;Data records are separated with a new line and the individual properties within each record are separated with the character specified by &lt;i&gt;Delimiter&lt;/I&gt;. The property names for the fields are stored as the first line of the file. 
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; to control the output format for properties 
  with more than one value (array properties).
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.2.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>5</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>RBadInputDataIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -1545</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>7</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DataCacheIO.1">
												<sci:component name="Cache Writer" version="2">
													<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The name of the cache to write, for example: A, 1234 or MyCache.  To create a temporary cacheID use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component.
</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>Append</sci:member>
														<sci:member>Scope</sci:member>
														<sci:value>$(inputCache)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to write to the cache.</sci:help>
													</sci:arg>
													<sci:arg name="Append" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>If True, append to a currently-existing cache if possible; if False, clear any current contents of the cache</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. &lt;I&gt;Job Only&lt;/I&gt; creates a cache that is visible
only to components in the currently-running protocol, and which is deleted when the protocol finishes.
&lt;I&gt;User Only&lt;/I&gt; creates a cache that is visible to components in any protocol a particular user runs;  
&lt;I&gt;All Users&lt;/I&gt; creates a cache that is visible to any user on the Pipeline Pilot server. 
&lt;P&gt;Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to fully determine a particular cache.&lt;/P&gt;
&lt;P&gt;Since the caches created with scopes &lt;I&gt;User Only&lt;/I&gt; and &lt;I&gt;All Users&lt;/I&gt;
may be accessed by multiple jobs, you should use caution, as problems may arise if two jobs try to write to 
the same shared cache at once. Also, to save disk space, you are responsible for deleting these caches
when finished, using the &lt;I&gt;Delete Cache&lt;/I&gt; component. &lt;/P&gt;
			</sci:help>
														<sci:legalval selected="true">Job Only</sci:legalval>
														<sci:legalval>User Only</sci:legalval>
														<sci:legalval>All Users</sci:legalval>
													</sci:arg>
													<sci:arg name="Create Index for Join" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>If set to True, creates an index for the cache that can be used by subsequent &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  As long as the later Join components use identical settings, the created index will greatly improve the performance of the join.  When set to true, you will also need to update &lt;i&gt;JoinUsing&lt;/i&gt;, &lt;i&gt;JoinUsingListType&lt;/i&gt;, &lt;i&gt;JoinPropertyType&lt;/i&gt;, and &lt;i&gt;IgnoreCase&lt;/i&gt; to match your Join component.</sci:help>
														<sci:member>JoinUsing</sci:member>
														<sci:member>IgnoreCase</sci:member>
														<sci:member>JoinPropertyType</sci:member>
														<sci:member>JoinUsingListType</sci:member>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="JoinUsing" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The name of the property or properties to index for use by &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
														<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
														<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
														<sci:value>RBadInputDataIndex</sci:value>
													</sci:arg>
													<sci:arg name="JoinUsingListType" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted for creating a cache index when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: The join will use only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: The join will use the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;
&lt;p&gt;This parameter must match the identically named parameter on the Join component in order to benefit from the created index.&lt;/p&gt;</sci:help>
														<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
														<sci:legalval>UseFirstDefinedValue</sci:legalval>
														<sci:legalval selected="true">UseAllValues</sci:legalval>
													</sci:arg>
													<sci:arg name="JoinPropertyType" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The data type of the &lt;i&gt;JoinUsing&lt;/i&gt; property. This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
														<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
														<sci:legalval selected="true">IsNumeric</sci:legalval>
														<sci:legalval>IsText</sci:legalval>
														<sci:legalval>IsDate</sci:legalval>
													</sci:arg>
													<sci:arg name="IgnoreCase" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
														<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
													</sci:arg>
													<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
														<sci:legalval selected="true">Writer</sci:legalval>
														<sci:legalval>Reader</sci:legalval>
														<sci:legalval>Writer/Reader</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Oct 31 15:17:51 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Cache Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -1545</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DATABASENODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{674E3781-33EA-42BB-9099-49CB4C3D08E6}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Cache Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Writes data records to a named cache</sci:value>
														<sci:value>&lt;p&gt;A data cache is place where you can temporarily store data records without losing information.  Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache.  A cache can contain records of different types.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To avoid clashes with other cache names, you can use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to obtain a global with a unique cacheID.  For example, you could have a temporary cacheID identified by MYCACHE and set &lt;i&gt;CacheID&lt;/i&gt; to $(MYCACHE).&lt;/li&gt;
&lt;li&gt;Typically, a cache is scoped to only be visible to component in the currently-running job.  To create caches that outlive a job, and may be seen by other users, use the &lt;I&gt;Scope&lt;/I&gt; parameter.&lt;/li&gt;
&lt;li&gt;Caches can be used with the &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; component to add properties to a separate data stream.  To improve the performance of the join, the cache can be indexed during creation by using the &lt;i&gt;Create Index for Join&lt;/i&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To retrieve data from a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9099-05B44C3D08E6}&apos;)&quot;&gt;Cache Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To join against a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.5.1.5</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>8</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Writers\Cache Writer</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>if not @gotY then
	error(&apos;No data records were found with a valid value of property &quot;&apos; . @Name . &apos;&quot;&apos;);
end if;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Error if no valid Y values</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -1920</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>45</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@&apos;Old Learned Property&apos; is defined and @&apos;Old Learned Property&apos; ne &apos;&apos;</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Are we relearning?</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -2295</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>40</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.DataCacheIO.1">
												<sci:component name="Cache Reader" version="2">
													<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The name of the cache to read, which should refer to a cache already written in the protocol containing this component.  Use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to provide an ID for temporary caches, then refer to the temporary ID with $(globalname)</sci:help>
														<sci:member>RangeMinimum</sci:member>
														<sci:member>RangeMaximum</sci:member>
														<sci:member>Scope</sci:member>
														<sci:member>JobId</sci:member>
														<sci:value>$(XCache)</sci:value>
													</sci:arg>
													<sci:arg name="RangeMinimum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The lower limit of data records to read from the cache. Numbering starts at 1.  A blank value or a value less than 1 means start reading at the first cached record.
               </sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="RangeMaximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The upper limit of data records to read from the cache. Numbering starts at 1.  A blank value or a value less than 1 means read to the end of the set of cached records.
               </sci:help>
													</sci:arg>
													<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to the same values as were used in the &lt;/i&gt;Cache Writer&lt;/i&gt;.
			</sci:help>
														<sci:legalval selected="true">Job Only</sci:legalval>
														<sci:legalval>User Only</sci:legalval>
														<sci:legalval>All Users</sci:legalval>
													</sci:arg>
													<sci:arg name="DeleteWhenFinished" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>If True, then delete the cache when finished reading</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Additional parameters to control the component behavior.</sci:help>
														<sci:member>Read Globals</sci:member>
													</sci:arg>
													<sci:arg name="Read Globals" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;Defines if the component should read globals from the cache.&lt;/p&gt;
&lt;p&gt;Any globals read from the cache will overwrite the existing globals.&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:value>ComponentReturnsPass</sci:value>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="JobId" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>If the scope is set to &lt;I&gt;Job Only&lt;/I&gt;, then this is the job that owns the cache, if it is different from this job. The job must have been run by the same user as this job. If not specified, then the current job is assumed to contain the cache.
               </sci:help>
														<sci:enabledscript>parameter(&apos;Scope&apos;) eq &apos;Job Only&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
													</sci:arg>
													<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
														<sci:legalval>Writer</sci:legalval>
														<sci:legalval selected="true">Reader</sci:legalval>
														<sci:legalval>Writer/Reader</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Jun 25 19:09:54 2010</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read X cache</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -2295</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DATABASENODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{704E3781-33EA-42BB-9099-05B44C3D08E6}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Cache Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads data records from a named cache</sci:value>
														<sci:value>&lt;p&gt;A data cache is a place where you can temporarily store data records without losing information.  This component is used to read data from a named cache created by the &lt;a href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache Writer&lt;/a&gt; component.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache to read.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;This component is typically used as a mechanism for retrieving temporary data stored within a protocol.&lt;/li&gt;
&lt;li&gt;To access a cache created in a different protocol, use &lt;i&gt;Scope&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To join data from a cache to streaming data records use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To list available caches use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-7077-05B44C3D08E6}&apos;)&quot;&gt;List Caches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To create a temporary cacheID use &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.5.1.5</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>41</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Cache Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>if @RemoveName then
	remove(&apos;Name&apos;);
end if;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Remove Name if needed</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -2295</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>42</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DelimitedWriter.1">
												<sci:component name="Delimited Text Writer" version="2">
													<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false">
														<sci:help>The filename for the destination data. Be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz or .zip to the filename. </sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>IfFileExists</sci:member>
														<sci:member>CharacterEncoding</sci:member>
														<sci:value>$(Rinput2file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to write (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>What to do if the given destination file already exists</sci:help>
														<sci:legalval selected="true">Overwrite</sci:legalval>
														<sci:legalval>Append</sci:legalval>
														<sci:legalval>Halt</sci:legalval>
													</sci:arg>
													<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Indicates the character set that will be used within the file.&lt;/p&gt;
 
&lt;p&gt;ANSI is the default and specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.&lt;/p&gt;
 
&lt;p&gt;UTF-8 specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.&lt;/p&gt;
 
&lt;p&gt;&quot;Unicode&quot; and &quot;Unicode big endian&quot; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.&lt;/p&gt;
 
&lt;p&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org&apos;)&quot;&gt;http://www.unicode.org&lt;/a&gt;&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">ANSI</sci:legalval>
														<sci:legalval>UTF-8</sci:legalval>
														<sci:legalval>Unicode</sci:legalval>
														<sci:legalval>Unicode big endian</sci:legalval>
													</sci:arg>
													<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies the character to use to separate
the fields in the file.  (Whole records are separated by line breaks.) Make sure you use a different
MultiValueDelimiter than Delimiter!</sci:help>
														<sci:member>MultipleValueDelimiter</sci:member>
														<sci:legalval>Tab</sci:legalval>
														<sci:legalval>Space</sci:legalval>
														<sci:legalval selected="true">Comma</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
														<sci:legalval>Semicolon</sci:legalval>
													</sci:arg>
													<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The delimiter to use between multiple value on a single property. If &quot;None&quot;, 
multiple values are separated into their own columns.</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Semicolon</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
														<sci:legalval>Linefeed</sci:legalval>
													</sci:arg>
													<sci:arg name="Format Options" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:member>OutputColumnNames</sci:member>
														<sci:member>OutputColumnTypes</sci:member>
														<sci:member>OutputRowNumber</sci:member>
														<sci:member>UndefinedString</sci:member>
														<sci:member>MissingValue Format</sci:member>
													</sci:arg>
													<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Text to output when data for a given column is not present (leave empty or enter text of choice)</sci:help>
													</sci:arg>
													<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Output column names</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Output a row that includes column types</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>SpotfireFormat</sci:legalval>
														<sci:legalval>NDIFormat</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Includes the number of the record as the first field for each record</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="MissingValue Format" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>How to write out explicitly-defined MissingValue properties. Each missing value property
contains a string that may provide information about the reason the value is missing.  You can ask to 
see either the missing value text containing this string, or use the undefined string to write out missing values.</sci:help>
														<sci:legalval selected="true">Use MissingValue Text</sci:legalval>
														<sci:legalval>Use UndefinedString</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Dec 11 15:05:11 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Write Input Data for R</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Delimited Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -2295</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Writes data records to a text file with one data record per line and data separated by delimiters
</sci:value>
														<sci:value>&lt;p&gt;Data records are separated with a new line and the individual properties within each record are separated with the character specified by &lt;i&gt;Delimiter&lt;/I&gt;. The property names for the fields are stored as the first line of the file. 
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; to control the output format for properties 
  with more than one value (array properties).
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.2.0</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>43</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Run R Script" version="2">
													<sci:arg name="RScriptExpression" type="ExpressionType" required="true" visibility="visible" multi="false">
														<sci:help>Expression defining the RScript property containing the script to be sent to R.</sci:help>
														<sci:value>RScript := @RFunctionsScript</sci:value>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
														<sci:value>EnvOverride</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>When the network runs, processes once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/rstats</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 30 11:47:31 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>save R Functions Script</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{52541793-A244-485C-9B70-DC1DDD44DD6F}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -2645</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Execute R script, optionally displaying script and stdout</sci:value>
														<sci:value>Executes in R a script defined by RScriptExpression.  This is an internal component used by other R Statistics components.</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1362</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>145</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Modified</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Run R Script</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>$(RScriptExpression)</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
																<sci:value>@EnvOverride := &apos;LD_LIBRARY_PATH=&apos;;
if @R_LD_LIBRARY_PATH is defined then
	@EnvOverride .= @R_LD_LIBRARY_PATH;
end if;
</sci:value>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>R script expression</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ExpressionNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -95</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Executes PilotScript to modify data records.</sci:value>
																<sci:value>Executes custom PilotScript expression(s) for every data record that enters the component. Use this component to build new, specialized data manipulation components.

&lt;i&gt;Expression&lt;/i&gt; is evaluated for each data record and may alter the properties of the data objects. 

&lt;i&gt;Initial expression &lt;/i&gt; is evaluated the first time data passes into the component and is typically used for initializing global variables. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/p&gt;
 
</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>4.1.1.400</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.TextWriter.1">
														<sci:component name="Text Writer" version="2">
															<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false">
																<sci:help>The filename or URL for the destination data. Be sure to specify an extension such as .txt or .doc. To save in compressed (zipped) format, add the extension .gz to the filename.</sci:help>
																<sci:value>$(RFunctionsScriptfile)</sci:value>
															</sci:arg>
															<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The maximum number of data items to write (all if value is empty)</sci:help>
															</sci:arg>
															<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>What to do if the given file already exists.</sci:help>
																<sci:legalval selected="true">Overwrite</sci:legalval>
																<sci:legalval>Append</sci:legalval>
																<sci:legalval>Halt</sci:legalval>
															</sci:arg>
															<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>List of which properties (separated by commas) will be written
  * means all properties</sci:help>
																<sci:value>*</sci:value>
															</sci:arg>
															<sci:arg name="IncludePropertyNames" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Specifies whether the name of each property 
is displayed along with its value(s)</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Any text to preceed each record</sci:help>
															</sci:arg>
															<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Any text to be included after each record</sci:help>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="Binary" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Whether to open the file in binary mode for outputting nontext information</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>SciTegic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue May 18 12:07:19 2004</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Write RScript</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>DocumentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{63DD362C-76B3-49A7-9CEF-2C45D21F90CB}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -95</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Text Writer</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Data records are formatted as text and written to a file. </sci:value>
																<sci:value>Data records are formatted as text written to disk as a &apos;Destination&apos; file.  Separation between data records can be indicated with user specified characters.
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited Text Writer&quot;. To write a file formatted with one record per row with delimiters between the data use the &quot;Delimited Text Writer&quot;&lt;/p&gt;</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>4.0.5.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>3</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\File Writers\Text Writer</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:connectid from="2" to="3" type="true"/>
													<sci:version iVal="1"/>
												</sci:protocol>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Run R Script" version="2">
													<sci:arg name="RScriptExpression" type="ExpressionType" required="true" visibility="visible" multi="false">
														<sci:help>Expression defining the RScript property containing the script to be sent to R.</sci:help>
														<sci:value>RScript := @RScript</sci:value>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
														<sci:value>EnvOverride</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>When the network runs, processes once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/rstats</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 30 11:47:31 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Run R Script</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{52541793-A244-485C-9B70-DC1DDD44DD6F}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -3020</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Execute R script, optionally displaying script and stdout</sci:value>
														<sci:value>Executes in R a script defined by RScriptExpression.  This is an internal component used by other R Statistics components.</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1362</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>9</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Modified</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Run R Script</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Filter (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>The PilotScript expression used to filter the data.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>@ShowRScript = True</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 13 10:41:54 2003</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Show R script?</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>FilterNode</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Filter (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -95</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
																<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Notepad Viewer" version="2">
															<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The maximum number of records to view.</sci:help>
															</sci:arg>
															<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
																<sci:help>Optional name of the document</sci:help>
																<sci:value>R_Script</sci:value>
															</sci:arg>
															<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
																<sci:member>CharacterEncoding</sci:member>
																<sci:member>HierarchyDepth</sci:member>
															</sci:arg>
															<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Indicates the character set that will be used within the file.
 
UTF-8 specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.
 
ANSI specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.
 
&quot;Unicode&quot; and &quot;Unicode big endian&quot; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.
 
For more information about each of these encoding styles, go to http://www.unicode.org/</sci:help>
																<sci:legalval>ANSI</sci:legalval>
																<sci:legalval selected="true">UTF-8</sci:legalval>
																<sci:legalval>Unicode</sci:legalval>
																<sci:legalval>Unicode big endian</sci:legalval>
															</sci:arg>
															<sci:arg name="HierarchyDepth" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>Controls the maximum depth within hierarchical data records to display node and property information.  No hierarchical information will be displayed if depth is set to -1.  If no value is set, the default is 0.</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
																<sci:value>ClientFilePath,ServerFilePath</sci:value>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>When the network runs, processes once or until done for each process call</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
																<sci:legalval>Cant Replace With Copy</sci:legalval>
																<sci:legalval>Cant Open</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Sep 12 07:46:27 2016</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Notepad Viewer</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ViewerNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{522F4A0B-DD0C-4C26-83DD-29A7B09F4461}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>666 -95</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Displays data records in the Windows Notepad application</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>17.1.0.119</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Viewers\Notepad Viewer</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>$(RScriptExpression)</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
																<sci:value>@EnvOverride := &apos;LD_LIBRARY_PATH=&apos;;
if @R_LD_LIBRARY_PATH is defined then
	@EnvOverride .= @R_LD_LIBRARY_PATH;
end if;
</sci:value>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>R script expression</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ExpressionNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -245</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Executes PilotScript to modify data records.</sci:value>
																<sci:value>Executes custom PilotScript expression(s) for every data record that enters the component. Use this component to build new, specialized data manipulation components.

&lt;i&gt;Expression&lt;/i&gt; is evaluated for each data record and may alter the properties of the data objects. 

&lt;i&gt;Initial expression &lt;/i&gt; is evaluated the first time data passes into the component and is typically used for initializing global variables. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/p&gt;
 
</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>4.1.1.400</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.TextWriter.1">
														<sci:component name="Text Writer" version="2">
															<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false">
																<sci:help>The filename or URL for the destination data. Be sure to specify an extension such as .txt or .doc. To save in compressed (zipped) format, add the extension .gz to the filename.</sci:help>
																<sci:value>$(Rscriptfile)</sci:value>
															</sci:arg>
															<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The maximum number of data items to write (all if value is empty)</sci:help>
															</sci:arg>
															<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>What to do if the given file already exists.</sci:help>
																<sci:legalval selected="true">Overwrite</sci:legalval>
																<sci:legalval>Append</sci:legalval>
																<sci:legalval>Halt</sci:legalval>
															</sci:arg>
															<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>List of which properties (separated by commas) will be written
  * means all properties</sci:help>
																<sci:value>*</sci:value>
															</sci:arg>
															<sci:arg name="IncludePropertyNames" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Specifies whether the name of each property 
is displayed along with its value(s)</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Any text to preceed each record</sci:help>
															</sci:arg>
															<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Any text to be included after each record</sci:help>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="Binary" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Whether to open the file in binary mode for outputting nontext information</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>SciTegic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Tue May 18 12:07:19 2004</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Write RScript</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>DocumentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{63DD362C-76B3-49A7-9CEF-2C45D21F90CB}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -395</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Text Writer</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Data records are formatted as text and written to a file. </sci:value>
																<sci:value>Data records are formatted as text written to disk as a &apos;Destination&apos; file.  Separation between data records can be indicated with user specified characters.
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited Text Writer&quot;. To write a file formatted with one record per row with delimiters between the data use the &quot;Delimited Text Writer&quot;&lt;/p&gt;</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>4.0.5.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>3</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\File Writers\Text Writer</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.RunProgram.1">
														<sci:component name="Run R" version="2">
															<sci:arg name="CommandLine" type="TextType" required="true" visibility="visible" multi="false">
																<sci:help>Command line for application or file to execute on the server machine.</sci:help>
																<sci:value>&quot;$(R_exe)&quot; --max-ppsize 500000 --no-save --no-restore &lt; &quot;$(Rscriptfile)&quot; &gt; &quot;$(Rstdoutfile)&quot;</sci:value>
															</sci:arg>
															<sci:arg name="WaitForExit" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Whether or not to wait for the program to finish before returning from the process call.  This parameter must be set to True for StdinProperty, StdoutProperty, StderrProperty, or PropertyForExitStatus to function.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="PropertyForExitStatus" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Defines the property name to hold the value of the program exit status code. Denote a global property with a leading @ character.
Note that this property can only be defined if WaitForExit is set to True.</sci:help>
																<sci:value>@RExitStatus</sci:value>
															</sci:arg>
															<sci:arg name="StdinProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Defines the property name that holds the desired value of the program&apos;s standard input (stdin). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
															</sci:arg>
															<sci:arg name="StdoutProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Defines the property name that will hold the program&apos;s standard output (stdout). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
															</sci:arg>
															<sci:arg name="StderrProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Defines the property name that will hold the program&apos;s standard error (stderr). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
																<sci:value>@stderr</sci:value>
															</sci:arg>
															<sci:arg name="Environment" type="LinkGlobalPropertyType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
																<sci:metaproplist>
																	<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAJeAlNwZWNpZmllcyBhZGRpdGlvbmFsIGVudmlyb25tZW50IHZhcmlhYmxlIHNldHRpbmdzIHRoYXQgd2lsbCBiZSB1c2VkIGJ5IHRoZSBzcGF3bmVkIHByb2Nlc3MuICBTcGVjaWZ5IGVhY2ggc2V0dGluZyBvbiBhIGxpbmUgYnkgaXRzZWxmIGFzICJ2YXJpYWJsZT1uYW1lIi4gIFRoZSBzcGF3bmVkIHByb2Nlc3Mgd2lsbCBpbmhlcml0IHRoZSBleGlzdGluZyBlbnZpcm9ubWVudCBvZiB0aGUgc2Npc3ZyIHByb2Nlc3MsIGFuZCBhbnkgc2V0dGluZ3MgaGVyZSB3aWxsIGJlIGFwcGVuZGVkIHRvIHRoZSB2YXJpYWJsZSBsaXN0LiAgVG8gbWFrZSB1c2Ugb2YgYW4gZXhpc3RpbmcgdmFyaWFibGUsIHN1cnJvdW5kIHRoZSB2YXJpYWJsZSBuYW1lIHdpdGggcGVyY2VudCBzaWducyAoZS5nLiAiUEFUSD1jOlxteWRpcjslUEFUSCUiKSAgTm90ZSB0aGF0IHRoaXMgc3ludGF4IHNob3VsZCBiZSB1c2VkIHdpdGggYm90aCBXaW5kb3dzIGFuZCBMaW51eCBzZXJ2ZXJzLiAgRHVlIHRvIE9TIGRlc2lnbnMsIGVudmlyb25tZW50IHZhcmlhYmxlcyBhcmUgY2FzZSBpbnNlbnNpdGl2ZSBvbiBXaW5kb3dzIHNlcnZlcnMgYW5kIGNhc2Ugc2Vuc2l0aXZlIG9uIExpbnV4IHNlcnZlcnMuJFRleHRUeXBlAAgAAAABAQABAAQA/AAAAAAAAAAAADBFbnZpcm9ubWVudAPMU8+7BAA=</sci:propval>
																	<sci:propval name="SCI_InitializeUsingOrigType">TextType</sci:propval>
																	<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
																	<sci:propval name="SCI_EvalOnInitType">TextType</sci:propval>
																</sci:metaproplist>
																<sci:help>Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &quot;variable=name&quot;.  The spawned process will inherit the existing environment of the scisvr process, and any settings here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. &quot;PATH=c:\mydir;%PATH%&quot;)  Note that this syntax should be used with both Windows and Linux servers.  Due to OS designs, environment variables are case insensitive on Windows servers and case sensitive on Linux servers.</sci:help>
																<sci:value>EnvOverride</sci:value>
															</sci:arg>
															<sci:arg name="UseCommandInterpreter" type="BoolType" required="false" visibility="hidden" multi="false">
																<sci:help>Whether or not to add &quot;cmd.exe /c&quot; (or &quot;/bin/sh -c&quot; on Linux servers) to the command line.  This causes the command line to be interpreted through the operating systems standard command shell allowing the use of redirection specifiers such as &apos;&gt;&apos; and &apos;&lt;&apos; and piping via &apos;|&apos;.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Componet Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/rstats</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Dec 11 15:47:33 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{8611ED9C-47D2-4EB1-A98B-CFB894E3840F}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Run R</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Run Program</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -720</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Runs a Windows command line application on the server machine.</sci:value>
																<sci:value>&lt;p&gt;Define the command line by entering text as you would in a command prompt window. The component includes facilities for looking up a program name in the Windows registry. It can interpret a program name as a ProgID, such as &quot;InternetExplorer.Application&quot;, or as a shell command, such as &quot;IsisServer&quot;, or as a document to load into an associated program, such as &quot;c:\spreadsheet.xls&quot;.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;CommandLine&lt;/i&gt;: The command that the component will run. The correct syntax is the full command line exactly as you would type it in a shell command window. The first space- or quote-delimited item of the command line can be a ProgId, such as &quot;InternetExplorer.Application&quot;. This starts up Internet Explorer (IE) without having to specify the path to IE explicitly. Shell command associations are also supported, so &quot;IsisServer&quot; will start Isis Draw. Finally, there is support for file associations, so the path &quot;D:\docs\notes.doc&quot; will start Microsoft Word and load the specified document.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;WaitForExit&lt;/i&gt;: When TRUE, the data pipeline is blocked until the command has completed.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;PropertyForExitStatus&lt;/i&gt;: Allows you to assign the exit status of the command to a global property or to a data record property. Use either a global or local property reference, such as @status or status.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;UseCommandInterpreter&lt;/i&gt;: When True, parses the command line through the command interpreter on the remote server (with a shell such as csh or bash or the windows interpreter cmd.exe). In particular, this needs to be set to True if the CommandLine utilizes standard output or input (such as cmd.exe /c &amp;quot;c:\Program Files\R\rterm.exe&amp;quot; &amp;quot;0&amp;lt;$(CommandFile)&amp;quot;).&lt;/p&gt;
&lt;p&gt;&lt;i&gt;StdinProperty, StdoutProperty, and StderrProperty&lt;/i&gt;: Allows you to redirect standard communications to global properties or to data record properties. Use either a global or local property reference, such as @stdin or stdin.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Environment&lt;/i&gt;: Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &quot;variable=name&quot;.  The spawned process will inherit the existing environment of the PipelinePilot process, and any settings defined here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. &quot;PATH=c:\mydir;%PATH%&quot;).  Since this will run on the Windows client, all environment variables are case insensitive.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt; If your command line includes a file path, create a new parameter for the component, of type URL, so the user can enter the path. Then use a token replacement in the CommandLine to pick up the value. For example: Notepad.exe &quot;$(SciTegicRoot)\$(Path)&quot;. &lt;/li&gt;
&lt;li&gt;When the component is separated from any other pipeline, the command line is run just once.&lt;/li&gt; &lt;li&gt;You can add an input or output pass port to the component, to integrate it with a pipeline. If there is an output port, but no input port, the command is run once and a single new record is generated. If there is an input port, then the command is run once for each data record passed in.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.2.0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>4</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Run R</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Display R stdout" version="2">
															<sci:arg name="ControlProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>ControlProperty</sci:help>
																<sci:value>@ShowRStdOutput</sci:value>
															</sci:arg>
															<sci:arg name="Filename" type="StringType" required="true" visibility="visible" multi="false">
																<sci:value>$(Rstdoutfile)</sci:value>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/rstats</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 30 11:47:39 2017</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Display R stdout</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ViewerNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{2A8352DC-F36E-4D10-B8DE-EFF7E019C441}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -1020</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Display R standard output</sci:value>
																<sci:value>Display the standard output generated by running an R script in a Notepad viewer. The standard output was captured in the specified file.

The output is only displayed if the control property is defined and set to true.</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>18.1.0.1362</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>5</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval>Owner Access Only</sci:legalval>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Modified</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Display R stdout</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:connectid from="0" to="1" type="true"/>
													<sci:connectid from="2" to="0" type="true"/>
													<sci:connectid from="2" to="3" type="true"/>
													<sci:version iVal="1"/>
												</sci:protocol>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Reject Invalid Records and Merge Predictions" version="2">
													<sci:arg name="RVersionSource" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>Name of file containing R version, zero-variance properties, and IDs of records containing invalid or missing data.</sci:help>
														<sci:value>$(Routput3file)</sci:value>
													</sci:arg>
													<sci:arg name="PredictionsFile" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of file containing predictions for training data</sci:help>
														<sci:value>$(Routput7file)</sci:value>
													</sci:arg>
													<sci:arg name="IndexProperty" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Name of property to use as an index for merging X and Y records.</sci:help>
														<sci:value>RBadInputDataIndex</sci:value>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
														<sci:value>val,i,badRecords</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>When the network runs, processes once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:value>ComponentReturnsFail</sci:value>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/rstats</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Dec 13 13:38:06 2016</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Reject Invalid Records and Merge in Predictions</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>4</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DB40DDB2-F256-46E8-B273-2CCC5F7F649D}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -3370</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Send invalid data records out Fail port and merge valid records with predictions</sci:value>
														<sci:value>Internal component used by R Statistics Learners and other components to identify records containing bad X and/or Y data and send them out the Fail port, and to merge predictions for the training data with the valid records. (Supercedes &lt;a href=&quot;javascript:DoLink(&apos;{803328D9-3402-47FC-85E5-18C5CE08BB43}&apos;)&quot;&gt;Invalid XY Records to Fail Port&lt;/a&gt;.)</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>17.2.0.1330</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>10</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Modified</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Reject Invalid Records and Merge Predictions</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol>
													<sci:data object="SciTegic.TextReader.1">
														<sci:component name="Text Reader" version="2">
															<sci:arg name="Source" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>The file or URL source to read</sci:help>
																<sci:value>$(RVersionSource)</sci:value>
															</sci:arg>
															<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
															</sci:arg>
															<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
																<sci:legalval selected="true">None</sci:legalval>
																<sci:legalval>Filename</sci:legalval>
																<sci:legalval>FilenameAndExtension</sci:legalval>
																<sci:legalval>FullFilename</sci:legalval>
																<sci:legalval>ZipFilename</sci:legalval>
																<sci:legalval>Number</sci:legalval>
																<sci:legalval>Letter</sci:legalval>
																<sci:legalval>KeepCurrent</sci:legalval>
															</sci:arg>
															<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
																<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.
</sci:help>
															</sci:arg>
															<sci:arg name="DelimitUsing" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Specifies which delimiting mechanism to use:&lt;/p&gt;

 - EndOfFile: All text is one record.

 - EndOfParagraph: Each paragraph becomes a separate record.

 - EndOfLine: Each line becomes a separate record.

 - DelimitText: Uses the parameters BeginningText and/or EndingText.

&lt;p&gt;If delimiter text is specified, it must be identical to that of the text in the file. For instance, if the text in the file has five whitespaces before the alphanumeric text, the delimiting text string must also have five whitespaces.&lt;/p&gt;
</sci:help>
																<sci:member>BeginningText</sci:member>
																<sci:member>EndingText</sci:member>
																<sci:legalval selected="true">EndOfFile</sci:legalval>
																<sci:legalval>EndOfParagraph</sci:legalval>
																<sci:legalval>EndOfLine</sci:legalval>
																<sci:legalval>DelimitText</sci:legalval>
															</sci:arg>
															<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>The character indicating the beginning of a new record (only used when DelimitUsing set to &quot;DelimitText&quot;)</sci:help>
																<sci:enabledscript>SetDisabledDetails(&apos;To enable, set DelimitUsing to DelimitText&apos;);
Parameter(&apos;DelimitUsing&apos;) eq &apos;DelimitText&apos;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>The character indicating the end of a new record (only used when DelimitUsing is set to &quot;DelimitText&quot;)</sci:help>
																<sci:enabledscript>SetDisabledDetails(&apos;To enable, set DelimitUsing to DelimitText&apos;);
Parameter(&apos;DelimitUsing&apos;) eq &apos;DelimitText&apos;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
																<sci:help>Contains less commonly used parameters</sci:help>
																<sci:member>KeepEndOfLine</sci:member>
																<sci:member>PutTextInProperty</sci:member>
															</sci:arg>
															<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Name of property to hold the block of text</sci:help>
																<sci:value>Text</sci:value>
															</sci:arg>
															<sci:arg name="KeepEndOfLine" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Whether to keep the end of line character in the data when delimiting using end of line.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Thu Mar 15 08:02:07 2007</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Read version and varying / nonvarying properties</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -95</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>DocumentNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Text Reader</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Reads data from text files delimited by end of line, paragraph, or file</sci:value>
																<sci:value>&lt;p&gt;Reads data from the file or files specified by &lt;i&gt;Source&lt;/i&gt;, creating a data record for each block of text. &lt;i&gt;DelimitUsing&lt;/i&gt; determines how the text in the file is split into blocks. &lt;i&gt;PutTextInProperty&lt;/i&gt; specifies the name of the property in which the text blocks will be stored (the default is &lt;b&gt;Text&lt;/b&gt;).&lt;/p&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
  &lt;li&gt;For text files with one record per line and properties separated by a known delimiter (e.g., Excel CSV files), use &lt;a href=&quot;javascript:DoLink(&apos;{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}&apos;)&quot;&gt;Delimited Text Reader&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.1.0.10</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\File Readers\Text Reader</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>expand(&quot;\n&quot;, Text);

@RVersion := Text[1];

@keptProperties := Text[2];
expand(&apos; &apos;, @keptProperties);
contract(&apos;,&apos;, @keptProperties);

@excludedProperties := Text[3];
expand(&apos; &apos;, @excludedProperties);
contract(&apos;,&apos;, @excludedProperties);

@badRecords := &apos;&apos;;

if numvalues(Text) &gt; 3 then
	@badRecords := trim(Text[numvalues(Text)]);
	expand(&apos; &apos;, @badRecords);
end if;
</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Global properties with version info etc.</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ExpressionNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>666 -95</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.35</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Filter (PilotScript)" version="2">
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
															</sci:arg>
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>The PilotScript expression used to filter the data.</sci:help>
																<sci:value>fileexists(&quot;$(RVersionSource)&quot;) = true</sci:value>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
																<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>SciTegic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jun 07 09:13:49 2004</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>R version file exists</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>FilterNode</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Filter (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -295</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
																<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>4.1.0.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.Protocol.1">
														<sci:component name="Display R stdout and halt protocol" version="2">
															<sci:arg name="ControlProperty" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>ControlProperty</sci:help>
																<sci:value>@ShowRStdOutput</sci:value>
															</sci:arg>
															<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
															</sci:arg>
															<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
															</sci:arg>
															<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
																<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/rstats</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Oct 22 12:08:22 2014</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Display R stdout and halt protocol</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ViewerNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{9E6F3C8B-E5AB-4d51-B5E5-C0F20559F6FF}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -470</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Display R standard output</sci:value>
																<sci:value>Display the standard output generated by running an R script in a Notepad viewer. The standard output was captured in the specified file.

The output is only displayed if the control property is defined and set to true.</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>9.5.0.608</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Options</sci:help>
																<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
															</sci:arg>
															<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>3</sci:value>
															</sci:arg>
															<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Subprotocol Made Link Into Copy</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Display R stdout and halt protocol</sci:value>
															</sci:arg>
														</sci:component>
														<sci:protocol/>
													</sci:data>
													<sci:data object="SciTegic.MergeProperties.1">
														<sci:component name="Merge Data" version="2">
															<sci:arg name="MergeUsing" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
																<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
																<sci:member>MergeUsingListType</sci:member>
																<sci:member>MergePropertyType</sci:member>
																<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
																<sci:member>IgnoreCase</sci:member>
																<sci:value>$(IndexProperty)</sci:value>
															</sci:arg>
															<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UseFirstDefinedValue: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																<sci:legalval>UseFirstDefinedValue</sci:legalval>
																<sci:legalval selected="true">UseAllValues</sci:legalval>
															</sci:arg>
															<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
																<sci:legalval selected="true">IsNumeric</sci:legalval>
																<sci:legalval>IsText</sci:legalval>
																<sci:legalval>IsDate</sci:legalval>
																<sci:legalval>IsFingerprint</sci:legalval>
															</sci:arg>
															<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;MergeUsing&lt;/i&gt; property values.&lt;/p&gt;
</sci:help>
																<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
																<sci:member>WhenMerging</sci:member>
																<sci:member>KeepAllNullString</sci:member>
																<sci:member>KeepAllPreferredNodeName</sci:member>
																<sci:member>PrefixUsingProperty</sci:member>
																<sci:legalval selected="true">KeepAll</sci:legalval>
																<sci:legalval>KeepFirst</sci:legalval>
															</sci:arg>
															<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;When merging using KeepAll behavior, provides fine control over how multiple values are treated.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
																<sci:legalval>OverwriteOrCreate</sci:legalval>
																<sci:legalval>OverwriteExisting</sci:legalval>
																<sci:legalval>CreateIfNew</sci:legalval>
																<sci:legalval selected="true">AppendOrCreate</sci:legalval>
																<sci:legalval>AppendExisting</sci:legalval>
															</sci:arg>
															<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;This string is used during append using KeepAll &lt;i&gt;MergeBehavior&lt;/i&gt; to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
																<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
																<sci:value>None</sci:value>
															</sci:arg>
															<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;If defined, and &lt;i&gt;MergeBehavior&lt;/i&gt; is KeepAll, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first record with a given merge value is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
																<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
																<sci:value>Molecule</sci:value>
															</sci:arg>
															<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
															</sci:arg>
															<sci:arg name="OutputFrequency" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual records included in the resulting merged record.&lt;/p&gt;
</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Fri May 30 08:21:34 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Merge Data</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Merge Data</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>JOINNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>666 -645</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Merges properties of all data records that share the same key property value into a single data record</sci:value>
																<sci:value>&lt;p&gt;Incoming data records are merged into a single data record if they have the same value for the &lt;i&gt;MergeUsing&lt;/i&gt; property.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Multiple &lt;i&gt;MergeUsing&lt;/i&gt; properties can be specified.  In this case, data records are merged if the value for each &lt;i&gt;MergeUsing&lt;/i&gt; property matches across the data records.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge records based on molecular structures, use &lt;a href=&quot;javascript:DoLink(&apos;{2E21E16B-6901-46F3-8780-F14D3D7057CE}&apos;)&quot;&gt;
Merge Molecules&lt;/a&gt; (which requires the Chemistry Collection).&lt;/p&gt;
&lt;/ul&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value>Data records that contain the properties being used for merging</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Data records that do not contain the properties being used for merging</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.1.0.5</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
																<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>8</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge Data</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Filter (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>The PilotScript expression used to filter the data.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>IsBadInputDataRecord is defined</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>IsBadInputDataRecord</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>FILTERNODE</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Filter (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>954 -645</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>9</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
														<sci:proplist>
															<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
														</sci:proplist>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Filter (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>The PilotScript expression used to filter the data.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>$(IndexProperty) != -1</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>$(IndexProperty) != -1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>FILTERNODE</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Filter (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1242 -820</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>4</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
														<sci:proplist>
															<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
														</sci:proplist>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>ErrorText := &quot;Missing or invalid property value&quot;;
remove(&apos;$(IndexProperty)&apos;, &apos;IsBadInputDataRecord&apos;);
</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Define error text</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>ExpressionNode</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1530 -820</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.35</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>5</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.PropertyFunctions.1">
														<sci:component name="Data to Fail Port" version="2">
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>CustomErrorText</sci:help>
															</sci:arg>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>PassDataToPort</sci:value>
															</sci:arg>
															<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>the port to pass data to</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>FilterNode</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>SciTegic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Mar 29 17:36:03 2004</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Data to Fail Port</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{A718CDEE-EE7D-4B75-9346-C3780D347090}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1818 -820</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Directs records to the Fail port for use in subprotocol building.</sci:value>
																<sci:value>Useful in a subprotocol for directing records that are passing through components in the subprotocol to the Fail port of the subprotocol.
</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value>All data records</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>4.0.4.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>6</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Data to Fail Port</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.DataCacheIO.1">
														<sci:component name="Cache Reader" version="2">
															<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
																<sci:help>The name of the cache to read, which should refer to a cache already written in the protocol containing this component.  Use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to provide an ID for temporary caches, then refer to the temporary ID with $(globalname)</sci:help>
																<sci:member>RangeMinimum</sci:member>
																<sci:member>RangeMaximum</sci:member>
																<sci:member>Scope</sci:member>
																<sci:member>JobId</sci:member>
																<sci:value>$(inputCache)</sci:value>
															</sci:arg>
															<sci:arg name="RangeMinimum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The lower limit of data records to read from the cache. Numbering starts at 1.  A blank value or a value less than 1 means start reading at the first cached record.
               </sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="RangeMaximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The upper limit of data records to read from the cache. Numbering starts at 1.  A blank value or a value less than 1 means read to the end of the set of cached records.
               </sci:help>
															</sci:arg>
															<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to the same values as were used in the &lt;/i&gt;Cache Writer&lt;/i&gt;.
			</sci:help>
																<sci:legalval selected="true">Job Only</sci:legalval>
																<sci:legalval>User Only</sci:legalval>
																<sci:legalval>All Users</sci:legalval>
															</sci:arg>
															<sci:arg name="DeleteWhenFinished" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>If True, then delete the cache when finished reading</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="JobId" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>If the scope is set to &lt;I&gt;Job Only&lt;/I&gt;, then this is the job that owns the cache, if it is different from this job. The job must have been run by the same user as this job. If not specified, then the current job is assumed to contain the cache.
               </sci:help>
																<sci:enabledscript>parameter(&apos;Scope&apos;) eq &apos;Job Only&apos;</sci:enabledscript>
															</sci:arg>
															<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
															</sci:arg>
															<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
																<sci:legalval>Writer</sci:legalval>
																<sci:legalval selected="true">Reader</sci:legalval>
																<sci:legalval>Writer/Reader</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Fri Oct 31 15:15:00 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Cache Reader</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -1020</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>DATABASENODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{704E3781-33EA-42BB-9099-05B44C3D08E6}</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Cache Reader</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Reads data records from a named cache</sci:value>
																<sci:value>&lt;p&gt;A data cache is a place where you can temporarily store data records without losing information.  This component is used to read data from a named cache created by the &lt;a href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache Writer&lt;/a&gt; component.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache to read.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;This component is typically used as a mechanism for retrieving temporary data stored within a protocol.&lt;/li&gt;
&lt;li&gt;To access a cache created in a different protocol, use &lt;i&gt;Scope&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To join data from a cache to streaming data records use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To list available caches use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-7077-05B44C3D08E6}&apos;)&quot;&gt;List Caches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To create a temporary cacheID use &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.5.1.5</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>7</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\File Readers\Cache Reader</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Filter (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>The PilotScript expression used to filter the data.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>@badRecords ne &apos;none&apos; and @badRecords ne &apos;&apos;</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
																<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
																<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>FILTERNODE</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Filter (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -1020</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>%VERSION 3%</sci:value>
																<sci:value>50 -770 590 177</sci:value>
																<sci:value>255 255 0</sci:value>
																<sci:value>Skip needless merge if there are no bad records</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>22</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
														<sci:proplist>
															<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
														</sci:proplist>
													</sci:data>
													<sci:data object="SciTegic.CountRecords.1">
														<sci:component name="Count and Index Data" version="2">
															<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
																<sci:member>Start Index</sci:member>
																<sci:member>Check if Property Already in Use</sci:member>
																<sci:value>RPredictionMergeIndex</sci:value>
															</sci:arg>
															<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
																<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Count and Index Data</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Count and Index Data</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1242 -1195</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Counts the number of data records and puts the count in a property</sci:value>
																<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.0.44</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>11</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.MergeProperties.1">
														<sci:component name="Merge Data" version="2">
															<sci:arg name="MergeUsing" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
																<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
																<sci:member>MergeUsingListType</sci:member>
																<sci:member>MergePropertyType</sci:member>
																<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
																<sci:member>IgnoreCase</sci:member>
																<sci:value>RPredictionMergeIndex</sci:value>
															</sci:arg>
															<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UseFirstDefinedValue: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
																<sci:legalval>UseFirstDefinedValue</sci:legalval>
																<sci:legalval selected="true">UseAllValues</sci:legalval>
															</sci:arg>
															<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
																<sci:legalval selected="true">IsNumeric</sci:legalval>
																<sci:legalval>IsText</sci:legalval>
																<sci:legalval>IsDate</sci:legalval>
																<sci:legalval>IsFingerprint</sci:legalval>
															</sci:arg>
															<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;MergeUsing&lt;/i&gt; property values.&lt;/p&gt;
</sci:help>
																<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
																<sci:member>WhenMerging</sci:member>
																<sci:member>KeepAllNullString</sci:member>
																<sci:member>KeepAllPreferredNodeName</sci:member>
																<sci:member>PrefixUsingProperty</sci:member>
																<sci:legalval selected="true">KeepAll</sci:legalval>
																<sci:legalval>KeepFirst</sci:legalval>
															</sci:arg>
															<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;When merging using KeepAll behavior, provides fine control over how multiple values are treated.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
																<sci:legalval>OverwriteOrCreate</sci:legalval>
																<sci:legalval>OverwriteExisting</sci:legalval>
																<sci:legalval>CreateIfNew</sci:legalval>
																<sci:legalval selected="true">AppendOrCreate</sci:legalval>
																<sci:legalval>AppendExisting</sci:legalval>
															</sci:arg>
															<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;This string is used during append using KeepAll &lt;i&gt;MergeBehavior&lt;/i&gt; to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
																<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
																<sci:value>None</sci:value>
															</sci:arg>
															<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;If defined, and &lt;i&gt;MergeBehavior&lt;/i&gt; is KeepAll, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first record with a given merge value is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
																<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
																<sci:value>Molecule</sci:value>
															</sci:arg>
															<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
															</sci:arg>
															<sci:arg name="OutputFrequency" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual records included in the resulting merged record.&lt;/p&gt;
</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Fri May 30 08:21:34 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Merge Data</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Merge Data</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>JOINNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1530 -1195</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Merges properties of all data records that share the same key property value into a single data record</sci:value>
																<sci:value>&lt;p&gt;Incoming data records are merged into a single data record if they have the same value for the &lt;i&gt;MergeUsing&lt;/i&gt; property.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Multiple &lt;i&gt;MergeUsing&lt;/i&gt; properties can be specified.  In this case, data records are merged if the value for each &lt;i&gt;MergeUsing&lt;/i&gt; property matches across the data records.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge records based on molecular structures, use &lt;a href=&quot;javascript:DoLink(&apos;{2E21E16B-6901-46F3-8780-F14D3D7057CE}&apos;)&quot;&gt;
Merge Molecules&lt;/a&gt; (which requires the Chemistry Collection).&lt;/p&gt;
&lt;/ul&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value>Data records that contain the properties being used for merging</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Data records that do not contain the properties being used for merging</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.1.0.5</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
																<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>12</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge Data</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.PropertyFunctions.1">
														<sci:component name="Remove Properties" version="2">
															<sci:arg name="PropertyList" type="TextType" required="true" visibility="visible" multi="false">
																<sci:help>The names of properties to remove from each data record entering the component</sci:help>
																<sci:value>RPredictionMergeIndex</sci:value>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>Remove</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 07 13:23:27 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Remove Properties</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>true</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>EXPRESSIONNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1818 -1195</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Removes the specified properties</sci:value>
																<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. To specify more than one property to be removed, use a comma separated list.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value>Data records with the specified properties removed</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.31</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>13</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.PropertyFunctions.1">
														<sci:component name="Remove Properties" version="2">
															<sci:arg name="PropertyList" type="TextType" required="true" visibility="visible" multi="false">
																<sci:help>The names of properties to remove from each data record entering the component</sci:help>
																<sci:value>$(IndexProperty),IsBadInputDataRecord</sci:value>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>Remove</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 07 13:23:27 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Remove Properties</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol AutoLayout</sci:help>
																<sci:value>true</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>EXPRESSIONNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>Component Revision</sci:help>
																<sci:value>100</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>SubProtocol</sci:value>
															</sci:arg>
															<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Scale</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>666 -1370</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Removes the specified properties</sci:value>
																<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. To specify more than one property to be removed, use a comma separated list.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value>Data records with the specified properties removed</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.31</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
																<sci:help>By Ref</sci:help>
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Protocol Sticky Notes</sci:help>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>10</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Filter (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>The PilotScript expression used to filter the data.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>#gotPredFile</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
																<sci:value>#gotPredFile := fileexists(&quot;$(PredictionsFile)&quot;);</sci:value>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:value>ComponentReturnsPass</sci:value>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Predictions file exists</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>FilterNode</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Filter (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>954 -1370</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>%VERSION 3%</sci:value>
																<sci:value>889 -1895 382 220</sci:value>
																<sci:value>255 255 0</sci:value>
																<sci:value>Skip needless Merge if there are no predictions</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>20</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
														<sci:proplist>
															<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
														</sci:proplist>
													</sci:data>
													<sci:data object="SciTegic.PropertyFunctions.1">
														<sci:component name="Data to Pass Port" version="2">
															<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
																<sci:legalval selected="true">LeaveData</sci:legalval>
																<sci:legalval>ClearData</sci:legalval>
																<sci:legalval>DeleteData</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>CustomErrorText</sci:help>
															</sci:arg>
															<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:help>the action to perform</sci:help>
																<sci:value>PassDataToPort</sci:value>
															</sci:arg>
															<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
																<sci:help>the port to pass data to</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>FilterNode</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Mar 29 17:36:03 2004</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Data to Pass Port</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Evaluate Expression</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{3162E91B-4C82-4303-BCF1-C4D59B36709E}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>1242 -1545</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Directs records to the Pass port for use in subprotocol building.</sci:value>
																<sci:value>Useful in a subprotocol for directing records that are passing through components in the subprotocol to the Pass port of the subprotocol.</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic Data</sci:value>
																<sci:value>All data records</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>4.0.4.0</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>21</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Data to Pass Port</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>if @badRecords eq &apos;none&apos; or @badRecords eq &apos;&apos; then
	@badRecords := -1;
end if;

$(IndexProperty) := @badRecords;
IsBadInputDataRecord := true;</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Put bad record indices on stream</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>EXPRESSIONNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -1920</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.35</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>14</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.SeparateValues.1">
														<sci:component name="Unmerge Data" version="2">
															<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The names of the one or more properties to separate and return as separate data records.  If no property names are given, then all properties with
multiple values will be unmerged. If multiple properties are unmerged, the number of unmerged records is the number of values of a property with the maximum number of values.</sci:help>
																<sci:value>$(IndexProperty)</sci:value>
															</sci:arg>
															<sci:arg name="Additional Options" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Contains less commonly used parameters</sci:help>
																<sci:member>Large Data Records</sci:member>
															</sci:arg>
															<sci:arg name="Large Data Records" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each of your records are particularly large, setting this parameter to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Fri Feb 27 15:13:59 2009</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Unmerge Data</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Unmerge Data</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>GENERATORNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{5E28C170-2FEC-4A3C-90A6-2DCEAA330E9D}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -1920</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Separates data records containing array properties into individual records with one array value per record</sci:value>
																<sci:value>&lt;p&gt;Each incoming data record with more than one value for the property or properties specified by &lt;i&gt;PropertyNames&lt;/i&gt; is duplicated for each of the values.  For example, an input data record with three values will generate three output data records.  Each output record will contain one of the values for the &lt;i&gt;PropertyNames&lt;/i&gt; property, and all other properties will be identical.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Large Data Records&lt;/i&gt;: When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each data record is particularly large, setting &lt;i&gt;Large Data Records&lt;/i&gt; to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.&lt;/p&gt;


&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If no property names are given, then all properties with multiple values are unmerged.  In this case, unexpected occurrences of arrays in a property will cause unintentional unmerge operations.  Try to specify a value for &lt;i&gt;PropertyNames&lt;/i&gt; if possible.&lt;/li&gt;
&lt;li&gt;If multiple unmerge properties are specified, the number of data records that result from unmerging a given incoming data record is equal to the number of values of the unmerge property that has the most values.  That is, if two unmerge properties, &quot;A&quot; and &quot;B&quot; are specified where A has 5 values and B has 7 values, then 7 data records will result.  The first 5 records will contain, in order, the 5 values of A.  For the last two records, A will be undefined.  All other properties will be duplicated on each record.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value>Data records containing the separated values for the property or properties specified.</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>15</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Data Manipulators\Unmerge Data</sci:value>
															</sci:arg>
														</sci:component>
														<sci:proplist>
															<sci:propval name="RegistrationVersion">6.0.0.44</sci:propval>
														</sci:proplist>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Filter (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>The PilotScript expression used to filter the data.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>fileexists(&quot;$(PredictionsFile)&quot;)</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval>ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/core</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Predictions file exists</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>FilterNode</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Filter (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>90 -2295</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
																<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
																<sci:value>None</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
																<sci:value>None</sci:value>
																<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>16</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
														<sci:proplist>
															<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
														</sci:proplist>
													</sci:data>
													<sci:data object="SciTegic.DelimitedReader.1">
														<sci:component name="Delimited Text Reader" version="2">
															<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
																<sci:help>The file(s) or URL source to read</sci:help>
																<sci:member>Maximum</sci:member>
																<sci:member>Keep Properties</sci:member>
																<sci:member>SourceTag</sci:member>
																<sci:member>HasColumnNames</sci:member>
																<sci:value>$(PredictionsFile)</sci:value>
															</sci:arg>
															<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
																<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
															</sci:arg>
															<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.</sci:help>
																<sci:legalval selected="true">None</sci:legalval>
																<sci:legalval>Filename</sci:legalval>
																<sci:legalval>FilenameAndExtension</sci:legalval>
																<sci:legalval>FullFilename</sci:legalval>
																<sci:legalval>ZipFilename</sci:legalval>
																<sci:legalval>Number</sci:legalval>
																<sci:legalval>Letter</sci:legalval>
																<sci:legalval>KeepCurrent</sci:legalval>
															</sci:arg>
															<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
																<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.</sci:help>
															</sci:arg>
															<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1,Column2, etc.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>Specifies the character that separates fields. Options include:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;FigureOut:&lt;/b&gt; Determines the type automatically (looks for, in order: tab, comma, space, colon, semicolon).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Tab:&lt;/b&gt; For tab-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Space:&lt;/b&gt; For space-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Comma:&lt;/b&gt; For comma-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Colon:&lt;/b&gt; For colon-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Semicolon:&lt;/b&gt; For semicolon-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;$:&lt;/b&gt; For fields delimited bty the &quot;$&quot; character.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
																<sci:member>MultipleValueDelimiter</sci:member>
																<sci:member>ParseNDimensionalArrayStrings</sci:member>
																<sci:legalval selected="true">FigureOut</sci:legalval>
																<sci:legalval>Tab</sci:legalval>
																<sci:legalval>Space</sci:legalval>
																<sci:legalval>Comma</sci:legalval>
																<sci:legalval>Colon</sci:legalval>
																<sci:legalval>Semicolon</sci:legalval>
																<sci:legalval>$</sci:legalval>
															</sci:arg>
															<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>The delimiter to use between multiple values contained in a single property. If the multiple value delimited exists in any of the input strings in any property, they are separated into an array of values. If &quot;None&quot;, 
values are never separated into multiple values.</sci:help>
																<sci:legalval selected="true">None</sci:legalval>
																<sci:legalval>Semicolon</sci:legalval>
																<sci:legalval>Colon</sci:legalval>
																<sci:legalval>Comma</sci:legalval>
																<sci:legalval>Linefeed</sci:legalval>
															</sci:arg>
															<sci:arg name="ParseNDimensionalArrayStrings" type="BoolType" required="false" visibility="visible" multi="false">
																<sci:help>Toggles whether to parse delimited N-Dimensional Array strings into N-Dimensional Array values.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
																<sci:help>Contains less commonly used parameters</sci:help>
																<sci:member>UndefinedString</sci:member>
																<sci:member>AllLines</sci:member>
																<sci:member>TrimWhitespace</sci:member>
																<sci:member>CheckSyntax</sci:member>
																<sci:member>CommentLines</sci:member>
																<sci:member>AddEmptyProperties</sci:member>
															</sci:arg>
															<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>A comma-separated list of line numbers and
line ranges to specify which lines should be 
ignored by the parser (column headers will be
read from the line that comes next).</sci:help>
															</sci:arg>
															<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
																<sci:help>Character or string used to represent an undefined string read in the file.  If you wish an empty string to be treated as an undefined value, then set the parameter value to &quot;EmptyString&quot;.</sci:help>
															</sci:arg>
															<sci:arg name="AllLines" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>When True, all lines of the text file become part of a single data record. The values for a column from each row become multiple [array] values for the property (column).</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Trims whitespace from the left and right ends of each value</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="CheckSyntax" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Whether to perform a quick syntax check at the beginning of the file when we open it, and if a problem is found, throw an error.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="AddEmptyProperties" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>If True, then if a row does not have as many values as the number of columns, the missing properties are added to the data record as empty properties</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:value>ComponentReturnsPass</sci:value>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval>ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Wed Mar 05 09:15:06 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Read predictions file</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Delimited Reader</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>DOCUMENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>378 -2295</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Reads data from text files containing one record per line with data separated by delimiters</sci:value>
																<sci:value>&lt;p&gt;The file or files are specified by &lt;i&gt;Source&lt;/i&gt;.  The file(s) should contain textual data formatted with a single record per line. Individual property values on each line should be separated by a delimiter character (e.g., space, comma, tab), as specified by &lt;i&gt;Delimiter&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;If &lt;i&gt;HasColumnNames&lt;/i&gt; is True, the values on the first line of the file are treated as the property names. Otherwise, &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, etc. are used as the property names.&lt;/p&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For Excel (.xls) files use either &lt;a href=&quot;javascript:DoLink(&apos;{F0D460F7-BF69-4D27-AAD9-A678E2EA6D50}&apos;)&quot;&gt;Excel Reader (on Server)&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{A8323ECE-4478-4A98-88C4-E21C6F9ED11B}&apos;)&quot;&gt;Excel Reader (on Client)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For non-delimited textual data, use &lt;a href=&quot;javascript:DoLink(&apos;{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}&apos;)&quot;&gt;Text Reader&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																<sci:value>Generic Data</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.51</sci:value>
															</sci:arg>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>17</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\File Readers\Delimited Text Reader</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.EvaluateExpression.1">
														<sci:component name="Custom Manipulator (PilotScript)" version="2">
															<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
																<sci:member>Initial Expression</sci:member>
																<sci:member>Final Expression</sci:member>
																<sci:member>Keep Calculated Properties</sci:member>
																<sci:value>#np := numproperties();
resize(RPredictionOutputValue, 0);

for #i in 1 .. #np loop
	#val := ithproperty(#i);
	if isnumber(#val) then
		#val := format(&apos;%.6g&apos;, #val);
	end if;
	
	append(RPredictionOutputValue, #val);
end loop;

contract(&apos;;&apos;, RPredictionOutputValue);
keep(&apos;RPredictionOutputValue&apos;);
</sci:value>
															</sci:arg>
															<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
															</sci:arg>
															<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
																<sci:legalval>True</sci:legalval>
																<sci:legalval selected="true">False</sci:legalval>
															</sci:arg>
															<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
																<sci:help>Version of expression parser to use.</sci:help>
																<sci:value>2</sci:value>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Contract predictions into 1 value with standard name</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>EXPRESSIONNODE</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>666 -2295</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Applies a PilotScript expression to each data record
</sci:value>
																<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>7.0.0.35</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>18</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:data object="SciTegic.CountRecords.1">
														<sci:component name="Count and Index Data" version="2">
															<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
																<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
																<sci:member>Start Index</sci:member>
																<sci:member>Check if Property Already in Use</sci:member>
																<sci:value>RPredictionMergeIndex</sci:value>
															</sci:arg>
															<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
																<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
																<sci:value>1</sci:value>
															</sci:arg>
															<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
																<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
																<sci:legalval selected="true">True</sci:legalval>
																<sci:legalval>False</sci:legalval>
															</sci:arg>
															<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
																<sci:help>Component Attributes</sci:help>
																<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
																<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
																<sci:legalval>ComponentReturnsFail</sci:legalval>
																<sci:legalval>ComponentRunsLocal</sci:legalval>
															</sci:arg>
															<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
																<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
																<sci:legalval selected="true">Halt</sci:legalval>
																<sci:legalval>Fail</sci:legalval>
																<sci:legalval>Pass</sci:legalval>
															</sci:arg>
															<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>Custom Error Message</sci:help>
															</sci:arg>
															<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The user who registered this component.</sci:help>
																<sci:value>scitegic/generic</sci:value>
															</sci:arg>
															<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The date this component was registered.</sci:help>
																<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
															</sci:arg>
															<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>Count and Index Data</sci:value>
															</sci:arg>
															<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
																<sci:value>COMPONENTNODE</sci:value>
															</sci:arg>
															<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The component this component is based upon.</sci:help>
																<sci:value>Count and Index Data</sci:value>
															</sci:arg>
															<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:value>0</sci:value>
															</sci:arg>
															<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:value>954 -2295</sci:value>
															</sci:arg>
															<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
																<sci:value>100</sci:value>
																<sci:value>Counts the number of data records and puts the count in a property</sci:value>
																<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>Generic</sci:value>
																<sci:value/>
																<sci:value>None</sci:value>
																<sci:value/>
															</sci:arg>
															<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The server version when this component was registered</sci:help>
																<sci:value>6.0.0.44</sci:value>
															</sci:arg>
															<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
															<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
																<sci:help>Local Component Identifier</sci:help>
																<sci:value>19</sci:value>
															</sci:arg>
															<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
																<sci:help>The original path within the database of this component.</sci:help>
																<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
															</sci:arg>
														</sci:component>
													</sci:data>
													<sci:connectid from="0" to="1" type="true"/>
													<sci:connectid from="2" to="0" type="true"/>
													<sci:connectid from="2" to="3" type="false"/>
													<sci:connectid from="8" to="9" type="true"/>
													<sci:connectid from="9" to="4" type="true"/>
													<sci:connectid from="9" to="10" type="false"/>
													<sci:connectid from="4" to="5" type="true"/>
													<sci:connectid from="5" to="6" type="true"/>
													<sci:connectid from="7" to="22" type="true"/>
													<sci:connectid from="22" to="8" type="true"/>
													<sci:connectid from="22" to="10" type="false"/>
													<sci:connectid from="11" to="12" type="true"/>
													<sci:connectid from="12" to="13" type="true"/>
													<sci:connectid from="10" to="20" type="true"/>
													<sci:connectid from="20" to="11" type="true"/>
													<sci:connectid from="20" to="21" type="false"/>
													<sci:connectid from="14" to="15" type="true"/>
													<sci:connectid from="15" to="8" type="true"/>
													<sci:connectid from="16" to="17" type="true"/>
													<sci:connectid from="17" to="18" type="true"/>
													<sci:connectid from="18" to="19" type="true"/>
													<sci:connectid from="19" to="12" type="true"/>
													<sci:version iVal="1"/>
												</sci:protocol>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>if @&apos;Learn Options&apos; is defined and contains(@&apos;Learn Options&apos;, &apos;Save Training Properties&apos;) then
	append(@&apos;Learn Options&apos;, &apos;Save Training Data&apos;);
end if;

@&apos;Learn Options&apos; is defined
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>***Got Learn Options?</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -3370</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>11</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.LearnDomain.1">
												<sci:component name="Internal Learn Domain" version="2">
													<sci:arg name="LearnedPropertyName" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The name of the learned model component</sci:help>
														<sci:value>$(LearnedPropertyName)</sci:value>
													</sci:arg>
													<sci:arg name="Name" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The name of the property to learn</sci:help>
														<sci:value>$(Name)</sci:value>
													</sci:arg>
													<sci:arg name="Prediction Property" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Optional name of input property contained predicted value(s).</sci:help>
														<sci:value>RPredictionOutputValue</sci:value>
													</sci:arg>
													<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The properties to learn from: 
  &apos;AllPropertiesOnFirstData&apos; uses all those that are found
on the first data object;
  &apos;CalculablePropertiesOnFirstData&apos; uses all those that are
found on the first data that can be calculated;
  &apos;PredefinedSet&apos; takes the properties selected by the user
on a pulldown list parameter named PredefinedSet;
  &apos;UserSet&apos; takes the list of properties from the parameter
UserSet.  Property ranges can be given by giving the first
and last property in the range separated by a hyphen; 
properties can be referred to by index using the word &quot;Column&quot;
followed by the index, i.e., Column3-Column10.
</sci:help>
														<sci:value>$(UseProperties)</sci:value>
													</sci:arg>
													<sci:arg name="PredefinedSet" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>A comma-separated list of properties to use for learning</sci:help>
														<sci:value>$(PredefinedSet)</sci:value>
													</sci:arg>
													<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma-separated list of properties to use for learning. 
If an item on the list contains a hyphen, and the names on either side are defined
on the first data item, then all properties in that range are added.</sci:help>
														<sci:value>$(UserSet)</sci:value>
													</sci:arg>
													<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma-separated list of properties to ignore.  This is used, for example, if UseProperties is AllPropertiesOnFirstData, but there is a small set of undesirable properties you don&apos;t wish to use but can&apos;t remove (i.e., record names)</sci:help>
														<sci:value>$(IgnoreProperties),RPredictionOutputValue</sci:value>
													</sci:arg>
													<sci:arg name="Extra Properties" type="StringType" required="false" visibility="visible" multi="false">
														<sci:value>$(ExtraProps)</sci:value>
													</sci:arg>
													<sci:arg name="New Learned Property" type="StringType" required="false" visibility="visible" multi="false"/>
													<sci:arg name="Old Learned Property" type="StringType" required="false" visibility="visible" multi="false"/>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>Contains less commonly used parameters</sci:help>
														<sci:member>Learn Options</sci:member>
														<sci:member>Additional Properties</sci:member>
														<sci:member>Numeric Distance Function</sci:member>
														<sci:member>Fingerprint Distance Function</sci:member>
													</sci:arg>
													<sci:arg name="Learn Options" type="StringType" required="false" visibility="visible" multi="true" expanded="true" uimpl="false">
														<sci:help>Specifies additional preferences affecting the building of the model and information saved with the model. Options are:
&lt;ul&gt;
&lt;li&gt;Save Training Properties: Saves the properties of the training data in the model component for later use. This allows you to use &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt; to rebuild the model with new data added to the original data. In addition, you can determine the distance of a sample to the closest training samples when making predictions with the model. (Use &lt;i&gt;Numeric Distance Function&lt;/i&gt; to specify the distance measure to use.) For identifying training samples, the model uses the &lt;b&gt;Name&lt;/b&gt; property. If no such property exists in your training data, the names &lt;b&gt;Train1&lt;/b&gt;, &lt;b&gt;Train2&lt;/b&gt;, etc. are used. The &quot;Save Training Properties&quot; option increases the on-disk size of the model component in proportion to the quantity of training data.
&lt;li&gt;Encrypt Data: If saving training properties, specifies that the data are to be encrypted to prevent direct access. The data will still be available for &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt;, but will not be recoverable in unencrypted form from the model component.
&lt;li&gt;Perform OPS Analysis: Performs a principal components analysis to determine the optimum prediction space (OPS) of the model in order to establish the model&apos;s applicability domain. Also records the range of each input property in your training data. If you then choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions with the model on new data, the model output indicates whether each new sample is within or outside the training data range.
&lt;li&gt;Track Fingerprint Features: Tracks the values of any categorical (string) input properties and features of the fingerprint specified by &lt;i&gt;Model Domain Fingerprint&lt;/i&gt;. If you choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions, you are warned when a sample contains any categorical property value or fingerprint feature not seen in the training data, or lacks any feature appearing in all of the training samples.
&lt;li&gt;Strings as Indicators: Except when building kNN models, this learner requires all input properties to be numeric, and normally ignores string properties. This option specifies that you wish the string properties to be expressed as indicator variables in order to allow them to be modeled. E.g., for a property named &quot;Process&quot; that takes on the value &quot;A&quot;, &quot;B&quot;, or &quot;C&quot;, indicator variables of the form &quot;Count&amp;lt;Process:A&amp;gt;&quot;, etc. are created. &quot;Count&amp;lt;Process:A&amp;gt;&quot; takes on the value 1 if &quot;Process&quot; has the value &quot;A&quot;, and 0 otherwise. (To avoid an overspecified system, k&amp;minus;1 indicator variables are created for a property that takes on k different values. The omitted value is the one present on the greatest number of data records. Thus, the other indicator variables represent contrasts to this reference value.)
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the optimum prediction space approach, see U.S. Patent 6,036,349, &quot;Method and apparatus for validation of model-based predictions.&quot; You can find it at &lt;a href=&quot;javascript:DoLink(&apos;http://patft.uspto.gov/netahtml/PTO/srchnum.htm&apos;)&quot;&gt;the US Patent Number Search site.&lt;/a&gt;
&lt;li&gt;For more on the use of indicator variables to represent categorical properties in regression models, see &lt;i&gt;Response Surface Methodology: Process and Product Optimization Using Designed Experiments&lt;/i&gt; (Second Edition), by R.H. Myers and D.C. Montgomery (Wiley, 2002), p. 65.
&lt;/ul&gt;</sci:help>
														<sci:member>Model Domain Fingerprint</sci:member>
														<sci:value>$(Learn Options)</sci:value>
													</sci:arg>
													<sci:arg name="Model Domain Fingerprint" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Name of fingerprint property to use in order to determine whether a test sample is within the applicability domain of the learned model. Any features seen in a test sample but not in any training sample will be noted in the &lt;i&gt;ModelName&lt;/i&gt;_Applicability property when making predictions with the model.</sci:help>
														<sci:value>$(Model Domain Fingerprint)</sci:value>
													</sci:arg>
													<sci:arg name="Additional Properties" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Comma-separated list of properties to be saved with the model when &quot;Save Training Properties&quot; is selected as one of the &lt;i&gt;Learn Options&lt;/i&gt;. These properties are in addition to those used to build the model, as specified by &lt;i&gt;UseProperties&lt;/i&gt;. When making predictions with the model, the values of the &lt;i&gt;Additional Properties&lt;/i&gt; are shown for the closest training samples when you select the &quot;_ClosestSample&quot; option from the list of available outputs on the model component.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;In the model output with the &quot;_ClosestSample&quot; option, each property in &lt;i&gt;Additional Properties&lt;/i&gt; is renamed to &lt;i&gt;ModelName&lt;/i&gt;_Closest_&lt;i&gt;PropertyName&lt;/i&gt; where &lt;i&gt;PropertyName&lt;/i&gt; is the original name of the property. 
&lt;li&gt;If you set &lt;i&gt;Number of Closest&lt;/i&gt; on the model component to a value greater than 1, the additional property values are appended to form arrays if possible. If this is not possible (e.g., for a binary image property), only the property value for the single closest sample is output.
&lt;/ul&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, select &quot;Save Training Properties&quot; as one of the Learn Options&apos;);

contains(Parameter(&apos;Learn Options&apos;), &apos;Save Training Properties&apos;)</sci:enabledscript>
														<sci:value>$(Additional Properties)</sci:value>
													</sci:arg>
													<sci:arg name="Numeric Distance Function" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
														<sci:help>For numeric properties and categorical properties other than fingerprints, specifies the function to use for computing the distance between two data records.  The expressions for the following distance functions assume that each record has numerical properties x&lt;sub&gt;1&lt;/sub&gt;, x&lt;sub&gt;2&lt;/sub&gt;,&amp;hellip;, with x&lt;sub&gt;1A&lt;/sub&gt;, x&lt;sub&gt;2A&lt;/sub&gt;,&amp;hellip; the values for record A and x&lt;sub&gt;1B&lt;/sub&gt;, x&lt;sub&gt;2B&lt;/sub&gt;,&amp;hellip; the values for record B. 
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Euclidean: Distance (D) is the square-root of the sum of squared differences between corresponding property values: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 upward.
&lt;li&gt;Manhattan: Distance is the sum of the absolute value of the differences between corresponding property values: D = &amp;sum;&amp;nbsp;|x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;|. Possible values range from 0 upward.
&lt;li&gt;Mahalanobis: A generalization of the Euclidean distance that accounts for correlations between different properties. The distance is defined as: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)(&lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt;)&lt;sub&gt;ij&lt;/sub&gt;(x&lt;sub&gt;jA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;jB&lt;/sub&gt;)]&lt;sup&gt;1/2&lt;/sup&gt;, where &lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt; is the inverse of the covariance matrix for the entire data set. Possible values range from 0 upward.
&lt;li&gt;One Minus Correlation: Distance is 1 minus the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Correlation&apos;)&quot;&gt;Pearson correlation coefficient&lt;/a&gt; between the vectors of property values for the two records. Possible values range from 0 to 2. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;One Minus Squared Correlation: Distance is 1 minus the square of the Pearson correlation coefficient between the vectors of property values for the two records. Use this function if you wish both strong correlation and strong anti-correlation to indicate that two records are &quot;near&quot;. Possible values range from 0 to 1. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;Cosine: Distance is 1 minus the cosine of the angle between the vectors defined by the properties of the two records: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;&amp;nbsp;&amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 2.
&lt;li&gt;Dice: Distance is a generalization to continuous properties of the Dice distance for binary fingerprints: D = 1 &amp;minus; 2 &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]. Possible values range from 0 to 2.
&lt;li&gt;Tanimoto: Distance is a generalization to continuous properties of the Tanimoto distance for binary fingerprints: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt;]. Possible values range from 0 to 1.3333.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For Euclidean, Manhattan, and Mahalanobis distances, the difference between two string (categorical) values is considered 0 if the strings are identical, or 1 if they are not.  For Cosine, Dice, and Tanimoto distances, the product of two string values is considered 1 if the strings are identical, or 0 if they are not. String properties are ignored for both correlation options.
&lt;li&gt;If a property is an array, then differences or products are taken element-by-element for the entire array. If the array on one record is shorter than on the other, unmatched elements of the longer array are ignored.
&lt;li&gt;For the Mahalanobis option, if the data are so highly-correlated that the covariance matrix is singular or nearly so, then the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Moore-Penrose_pseudoinverse&apos;)&quot;&gt;Moore-Penrose pseudoinverse&lt;/a&gt; is used instead of the inverse. If even the pseudoinverse cannot be computed (due to &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Singular_value_decomposition&apos;)&quot;&gt;SVD&lt;/a&gt; non-convergence), an error occurs. In this case, you must use an alternative distance function.
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on several of the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;.
&lt;li&gt;For more on the Mahalanobis distance, see &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Mahalanobis_distance&apos;)&quot;&gt;here&lt;/a&gt;.
&lt;/ul&gt;</sci:help>
														<sci:member>Numeric Scaling</sci:member>
														<sci:value>$(Numeric Distance Function)</sci:value>
													</sci:arg>
													<sci:arg name="Numeric Scaling" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
														<sci:help>Settings controlling the scaling of numeric data when computing distances.  Options are:
&lt;ul&gt;
&lt;li&gt;Mean-Center and Scale: Shifts and scales each property to have a mean of 0 and standard deviation of 1.  For Euclidean, Manhattan, Cosine, Dice, and Tanimoto distances, this is a recommended option, as it puts all numeric properties on equal footing.  Without such scaling, properties with a large typical magnitude (e.g., 1000) dominate the calculated distance, while properties with a small typical magnitude (e.g., 1) have minimal effect. (For Mahalanobis and correlation distances, this option has no effect on the calculated distance.)
&lt;li&gt;Scale by Number of Dimensions: For Euclidean, Manhattan, and Mahalanobis distances only, divides the computed distance by P (Manhattan) or P&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean and Mahalanobis), where P is the number of properties (or total number of elements if some properties are arrays). This ensures that the typical magnitude of computed distances remains unchanged as you vary the number of properties in the calculation.
&lt;li&gt;Correct for Missing Values: For Euclidean and Manhattan distances only, multiplies the computed distance by P&lt;sub&gt;exp&lt;/sub&gt;/P (Manhattan) or (P&lt;sub&gt;exp&lt;/sub&gt;/P)&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where P&lt;sub&gt;exp&lt;/sub&gt; is the expected number of properties (or expected total number of elements if some properties are arrays) in the absence of missing values. This ensures that the typical magnitude of computed distances remains unchanged when some properties are missing. Specifically, it ensures that distances to data records with missing properties are not unusually small as an artifact of the missing data. This option does not apply if &quot;Scale by Number of Dimensions&quot; is selected, as that option already corrects for missing properties implicitly.
&lt;/ul&gt;
If none of the above options are selected, no rescaling is applied to the data. This is appropriate if all numeric properties already have the same characteristic scale or represent components of a vector in the same space (e.g., spatial x, y, z coordinates), and no properties are missing from any of the data records.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you specify more than one fingerprint property to use in the distance calculation, then the &quot;Scale by Number of Dimensions&quot; and &quot;Correct for Missing Values&quot; options apply to the fingerprint component of distance as well as to the numeric component. Specifically, Pfp and Pfp&lt;sub&gt;exp&lt;/sub&gt; are used in the scaling of the summed fingerprint distances, where Pfp is the number of fingerprint properties and Pfp&lt;sub&gt;exp&lt;/sub&gt; is the expected number.
&lt;li&gt;&quot;Scale by Number of Dimensions&quot; also applies to fingerprint distances when you specify Euclidean or Manhattan as the &lt;i&gt;Fingerprint Distance Function&lt;/i&gt;. In this case, the distance for each fingerprint property is divided by C (Manhattan) or C&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where C is the total count of features over both data records (i.e., the &quot;or&quot; bit count).
&lt;/ul&gt;</sci:help>
														<sci:value>$(Numeric Scaling)</sci:value>
													</sci:arg>
													<sci:arg name="Fingerprint Distance Function" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>For fingerprint properties, specifies the function to use for computing the distance between two data records. The expressions for the following distance functions assume that each record has a single fingerprint property, with quantities SA, SB, and SC defined as follows:
&lt;p&gt;
SA: Number of fingerprint features common to both records. (Number of &quot;and&quot; bits.)&lt;br&gt;
SB: Number of features present in the first record but absent from the second.&lt;br&gt;
SC: Number of features present in the second record but absent from the first.
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Cosine: Distance (D) is 1 minus the cosine of the angle between the two fingerprints when treated as binary vectors (vectors whose elements must be 0 or 1): D = 1 &amp;minus; SA / [(SA + SB)(SA + SC)]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 1.
&lt;li&gt;Dice: Distance is 1 minus the number of &quot;and&quot; bits scaled by the mean number of &quot;on&quot; bits for both records: D = 1 &amp;minus; 2 SA / (2SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Tanimoto: Distance is 1 minus the number of &quot;and&quot; bits scaled by the number of &quot;or&quot; bits: D = 1 &amp;minus; SA / (SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Euclidean: Distance is the square-root of the number of &quot;on&quot; bits in the squared difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = (SB + SC)&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;li&gt;Manhattan: Distance is the number of &quot;on&quot; bits in the absolute difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = SB + SC. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When more than one fingerprint property is present, a separate distance value is computed for each, and the results are summed or averaged (depending on the &lt;i&gt;Numeric Scaling&lt;/i&gt; options).
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;. Also see: J.C. Gower, &quot;Measures of Similarity, Dissimilarity, and Distance,&quot; in &lt;i&gt;Encyclopedia of Statistical Sciences&lt;/i&gt;, S. Kotz, N.L. Johnson, Read C.B., eds., Vol. 5, p. 397 (1985).
&lt;/ul&gt;
</sci:help>
														<sci:value>$(Fingerprint Distance Function)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Relearn Parameters" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Parameters to persist onto the model to refresh when relearning</sci:help>
														<sci:value>LearnedPropertyName</sci:value>
														<sci:value>Name</sci:value>
														<sci:value>Learn Options</sci:value>
														<sci:value>Model Domain Fingerprint</sci:value>
														<sci:value>Numeric Distance Function</sci:value>
														<sci:value>Numeric Scaling</sci:value>
														<sci:value>Fingerprint Distance Function</sci:value>
														<sci:value>Additional Properties</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>dhoneycutt</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Mar 26 12:53:48 2009</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>***Internal Learn Domain</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Internal Learn Property</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>LEARNNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{38AC9D0C-F15F-4791-A8A6-C42EAED52282}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Internal Learn Property</sci:value>
														<sci:value>Internal Component</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -3370</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>%VERSION 3%</sci:value>
														<sci:value>1278 -3270 385 352</sci:value>
														<sci:value>255 255 0</sci:value>
														<sci:value>We need to bypass Calculate Properties when sending data here because we don&apos;t want the fingerprints folded.</sci:value>
													</sci:arg>
													<sci:arg name="Relearn Component" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component to use for relearning: Learn Property</sci:help>
														<sci:value>{6E0971E2-1096-48C0-9A7A-7051B124E191}</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.9.0.17</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>159</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Unknown</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@OutputLegalValues := @LearnedPropertyName;
@OutputHelp := &quot;Specifies properties to compute. Options are:\n&lt;ul&gt;\n&lt;li&gt;&quot; . 
			@LearnedPropertyName . &quot;: The model&apos;s prediction.\n&quot;;
			
if @&apos;Learn Options&apos; is defined and contains(@&apos;Learn Options&apos;, &apos;Single Prediction Analysis&apos;) then
	append(@OutputLegalValues, @LearnedPropertyName . &apos;_ExplainPredictions&apos;);
	@AnalysisMethod := @&apos;Explaining Single Predictions Method&apos;;
	@TemporaryPredictionFiles := @TemporaryPredictionFiles;
end if;


if vcModelDomain_Vars is defined then
	@vcModelDomain_Vars := converttobase64(vcModelDomain_Vars);
	@vcModelDomain_Constants := converttobase64(vcModelDomain_Constants);
	@vcModelDomain_Properties := vcModelDomain_Properties;
	@vcModelDomain_Loadings := converttobase64(vcModelDomain_Loadings);
	@vcModelDomain_ComponentStats := converttobase64(vcModelDomain_ComponentStats);
	@vcModelDomain_Variance := converttobase64(vcModelDomain_Variance);
	@vcModelDomain_FingerprintFeatures := converttobase64(vcModelDomain_FingerprintFeatures);
	@vcModelDomain_InverseCovariance := converttobase64(vcModelDomain_InverseCovariance);
	
	append(@OutputLegalValues, @LearnedPropertyName . &apos;_Applicability&apos;);
	@OutputHelp .= &quot;&lt;li&gt;&quot; . @LearnedPropertyName . 
			&quot;_Applicability: property containing information on the applicability of the &quot;
			&quot;model to each input sample. This includes a check of whether the sample&apos;s properties are &quot;
			&quot;within the same range as the properties in the model&apos;s training data set, and whether the &quot;
			&quot;sample is within the optimum prediction space (OPS) as defined by the principal components &quot;
			&quot;of the training data.\n&quot;;
else
	@vcModelDomain_Vars := &apos;vcModelDomain_Vars&apos;;
	@vcModelDomain_Constants := &apos;vcModelDomain_Constants&apos;;
	@vcModelDomain_Properties := &apos;vcModelDomain_Properties&apos;;
	@vcModelDomain_Loadings := &apos;vcModelDomain_Loadings&apos;;
	@vcModelDomain_ComponentStats := &apos;vcModelDomain_ComponentStats&apos;;
	@vcModelDomain_Variance := &apos;vcModelDomain_Variance&apos;;
	@vcModelDomain_FingerprintFeatures := &apos;vcModelDomain_FingerprintFeatures&apos;;
	@vcModelDomain_InverseCovariance := &apos;vcModelDomain_InverseCovariance&apos;;
end if;

if %&apos;Cache Properties&apos; is defined then
	@&apos;Cache Properties&apos; := %&apos;Cache Properties&apos;;
	@&apos;Cache Names&apos; := %&apos;Cache Names&apos;;
	@&apos;Cache Y Values&apos; := %&apos;Cache Y Values&apos;;

	if %&apos;Cache Additional Properties&apos; is defined then
		#gotAdditional := True;
		@&apos;Cache Additional Properties&apos; := %&apos;Cache Additional Properties&apos;;
	else
		#gotAdditional := False;
		@&apos;Cache Additional Properties&apos; := &apos;Cache Additional Properties&apos;;
	end if;

	append(@OutputLegalValues, @LearnedPropertyName . &apos;_ClosestDistance&apos;);
	append(@OutputLegalValues, @LearnedPropertyName . &apos;_ClosestSample&apos;);
	append(@OutputLegalValues, @LearnedPropertyName . &apos;_ClosestValue&apos;);

	@OutputHelp .= &quot;&lt;li&gt;&quot; . @LearnedPropertyName . &quot;_ClosestDistance: Distances to the &lt;i&gt;Number of Closest&lt;/i&gt; &quot;
		&quot;closest samples in the training data used to build the model.\n&quot;
		&quot;&lt;li&gt;&quot; . @LearnedPropertyName . &quot;_ClosestSample: Names of closest samples in the training data. &quot;;
		
	if #gotAdditional then
		@OutputHelp .= &quot;If you select this option, additional properties are also output for each of the &quot; .
		&apos;closest samples. The names of these properties are of the form &quot;&apos; . @LearnedPropertyName .
		&apos;_Closest_propname&quot;, where &quot;propname&quot; is the name of the property on the original samples.&apos;;
	end if;
		
	@OutputHelp .= &quot;\n&lt;li&gt;&quot; . @LearnedPropertyName . &quot;_ClosestValue: Values of the dependent property &quot;
		&quot;for the closest training samples.\n&quot;;

	if %&apos;Cache Predictions&apos; is defined then
		@&apos;Cache Predictions&apos; := %&apos;Cache Predictions&apos;;
		append(@OutputLegalValues, @LearnedPropertyName . &apos;_ClosestPredictedValue&apos;);
		@OutputHelp .= &quot;\n&lt;li&gt;&quot; . @LearnedPropertyName . &quot;_ClosestPredictedValue: Values predicted by the model &quot;
			&quot;for the closest training samples.\n&quot;;
	else
		@&apos;Cache Predictions&apos; := &apos;Cache Predictions&apos;;
	end if;
else
	@&apos;Cache Properties&apos; := &apos;Cache Properties&apos;;
	@&apos;Cache Additional Properties&apos; := &apos;Cache Additional Properties&apos;;
	@&apos;Cache Names&apos; := &apos;Cache Names&apos;;
	@&apos;Cache Y Values&apos; := &apos;Cache Y Values&apos;;
	@&apos;Cache Predictions&apos; := &apos;Cache Predictions&apos;;
end if;

if %&apos;Cache Data&apos; is defined then
	@&apos;Cache Data&apos; := %&apos;Cache Data&apos;;
else
	@&apos;Cache Data&apos; := &apos;Cache Data&apos;;
end if;

@OutputHelp .= &quot;&lt;/ul&gt;\n&quot;;
@HTMLHelpText := HTMLHelpText;
@DomainPointInfoText := PointInfoText;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>***Put domain info into globals</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -3370</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>160</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Binary Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>SourceTag</sci:member>
														<sci:value>$(Rmodelfile)</sci:value>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:member>Put Binary Data in Property</sci:member>
													</sci:arg>
													<sci:arg name="Put Binary Data in Property" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of property to hold file contents</sci:help>
														<sci:value>binary</sci:value>
													</sci:arg>
													<sci:arg name="Binary" type="BoolType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:help>Whether to read the file as binary bytes or as text. The entire file is read into a single property, as given by PutTextInProperty. The parameters DelimitUsing, BeginningText, and EndingText are ignored if this is set True.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Name of property to hold file contents. (Alias of &lt;i&gt;Put Binary Data in Property&lt;/i&gt;.)</sci:help>
														<sci:value>$(Put Binary Data in Property)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:value>ComponentReturnsPass</sci:value>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Mar 15 08:00:58 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read Binary R Model</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -3745</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DOCUMENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{B0B1B56C-3DF6-444C-BB78-B43211188F63}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads binary data from files</sci:value>
														<sci:value>&lt;p&gt;This component reads the binary file(s) specified by &lt;i&gt;Source&lt;/i&gt; and creates a data record for each file, with a single property (by default, named &lt;b&gt;Binary&lt;/b&gt;) containing the data.&lt;/p&gt;
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.10</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>19</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Binary Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@UncompressedRModelSize := numvalues(binary);
binary := compress(binary);
@RModelBin := converttobase64(binary);
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Apr 23 12:20:45 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Global Property with Binary R Model</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -3745</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.17</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>20</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>fileexists(&quot;$(Rmodelfile)&quot;) = true</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Model file exists</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -3920</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>21</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="Display R stdout and halt protocol" version="2">
													<sci:arg name="ControlProperty" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>ControlProperty</sci:help>
														<sci:value>@ShowRStdOutput</sci:value>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/rstats</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Wed Oct 22 12:08:22 2014</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Display R stdout and halt protocol</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ViewerNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{9E6F3C8B-E5AB-4d51-B5E5-C0F20559F6FF}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -4095</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Display R standard output</sci:value>
														<sci:value>Display the standard output generated by running an R script in a Notepad viewer. The standard output was captured in the specified file.

The output is only displayed if the control property is defined and set to true.</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>9.5.0.608</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>22</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Modified</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Display R stdout and halt protocol</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol/>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>fileexists(&quot;$(Rmodelfile)&quot;) = true</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Model file exists</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>4</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -4470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>23</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.ComponentReader.1">
												<sci:component name="Component Reader" version="2">
													<sci:arg name="Source" type="ComponentType" required="true" visibility="visible" multi="false">
														<sci:help>The name of the component to read
from the system</sci:help>
														<sci:value>$(RModelComponent)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Jul 24 13:25:46 2003</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read R Model component</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DataBaseNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{8922AE57-61B3-43A9-99BA-5D8511DDCCB8}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads a component into the system as a data object.</sci:value>
														<sci:value>Read a component into the system as a data object

Output Pass - Data records containing the component definitions</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Component Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -4470</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>24</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Component Utilities\Component Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>setparam(&quot;RModelScript&quot;, @RModelScript);
setparam(&quot;CalculatedProperties&quot;, @CalculatedProperties);
setparam(&quot;CompressedRModelBin&quot;, @RModelBin);
setparam(&quot;UncompressedRModelSize&quot;, @UncompressedRModelSize);
setparam(&quot;ComponentDisplayName&quot;, @LearnedPropertyName);

if @&apos;Learn Options&apos; is defined and contains(@&apos;Learn Options&apos;, &apos;Single Prediction Analysis&apos;) then
	setparam(&quot;AnalysisMethod&quot;, &apos;Shapley&apos;);
	resize(@PredictionMethods, 2);
	@PredictionMethods[1] := &apos;Shapley&apos;;
	@PredictionMethods[2] := &apos;LocalModel&apos;;
	SetParamLegalValues(&quot;AnalysisMethod&quot;, @PredictionMethods, false);
	setparam(&quot;TemporaryPredictionFiles&quot;, @TemporaryPredictionFiles);
	SetParamFlag(&apos;TemporaryPredictionFiles&apos;, 2, false);
end if;

setparamlegalvalues(&quot;Model Output&quot;, @OutputLegalValues, true);
setparamhelp(&quot;Model Output&quot;, @OutputHelp);
setparam(&quot;Model Output&quot;, @LearnedPropertyName);

setparam(&quot;vcModelDomain_Vars&quot;, @vcModelDomain_Vars);
setparam(&quot;vcModelDomain_Constants&quot;, @vcModelDomain_Constants);
setparam(&quot;vcModelDomain_Properties&quot;, @vcModelDomain_Properties);
setparam(&quot;vcModelDomain_Loadings&quot;, @vcModelDomain_Loadings);
setparam(&quot;vcModelDomain_ComponentStats&quot;, @vcModelDomain_ComponentStats);
setparam(&quot;vcModelDomain_Variance&quot;, @vcModelDomain_Variance);
setparam(&quot;vcModelDomain_FingerprintFeatures&quot;, @vcModelDomain_FingerprintFeatures);
setparam(&quot;vcModelDomain_InverseCovariance&quot;, @vcModelDomain_InverseCovariance);

setparam(&quot;Cache Data&quot;, @&apos;Cache Data&apos;);
setparamflag(&quot;Cache Data&quot;, 1, false);
setparamflag(&quot;Cache Data&quot;, 2, false);
setparam(&quot;Cache Properties&quot;, @&apos;Cache Properties&apos;);
setparam(&quot;Cache Additional Properties&quot;, @&apos;Cache Additional Properties&apos;);
setparam(&quot;Cache Names&quot;, @&apos;Cache Names&apos;);
setparam(&quot;Cache Y Values&quot;, @&apos;Cache Y Values&apos;);
setparam(&quot;Cache Predictions&quot;, @&apos;Cache Predictions&apos;);

expand(&apos;,&apos;, @&apos;Relearn Parameters&apos;);

if numvalues(@OutputLegalValues) &gt; 3 then
	/* We must be saving training data, so set the number of closest option and the relearn parameters. */
	setparamflag(&quot;Number of Closest&quot;, 2, true);
	setparamflag(&quot;Number of Closest&quot;, 4, false);
	setparam(&quot;Number of Closest&quot;, 5);
	setparam(&quot;Relearn Component&quot;, @&apos;Relearn Component&apos;);
	setparamflag(&quot;Relearn Component&quot;, 1, false);
	setparamflag(&quot;Relearn Component&quot;, 2, false);	
	setparam(&quot;Relearn CalculatedProperties&quot;, @CalculatedProperties);
	setparamflag(&quot;Relearn CalculatedProperties&quot;, 1, false);
	setparamflag(&quot;Relearn CalculatedProperties&quot;, 2, false);
	
	setparam(&quot;Relearn PointInfoText&quot;, @DomainPointInfoText);
	
	for #i in 1 .. numvalues(@&apos;Relearn Parameters&apos;) loop
		if globalproperty(@&apos;Relearn Parameters&apos;[#i]) is defined then
			setparam(&apos;Relearn &apos; . @&apos;Relearn Parameters&apos;[#i], globalproperty(@&apos;Relearn Parameters&apos;[#i]));
			setparamflag(&apos;Relearn &apos; . @&apos;Relearn Parameters&apos;[#i], 1, false);
			setparamflag(&apos;Relearn &apos; . @&apos;Relearn Parameters&apos;[#i], 2, false);
		end if;
	end loop;
end if;

setparamlegalvalues(&quot;LearnedPropertyName&quot;, @LearnedPropertyName, false);
setparam(&quot;LearnedPropertyName&quot;, @LearnedPropertyName);

/* The calculator pointInfoText is used in CalculateProperties for computing
required X&apos;s when making predictions. The domain point info text also includes 
Y and is used for relearning. The Learned Model Reader uses this to output 
properties. */
setparam(&quot;PointInfoText&quot;, @DomainPointInfoText);
setparam(&quot;CalculatorPointInfoText&quot;, @PointInfoText);
setparamflag(&quot;CalculatorPointInfoText&quot;, 1, false);
setparamflag(&quot;CalculatorPointInfoText&quot;, 2, false);

if @NumberOfVariables is defined then
	/* Set param to required, visible, non-advanced. */
	setparamflag(&quot;NumberOfVariables&quot;, 1, true);
	setparamflag(&quot;NumberOfVariables&quot;, 2, true);
	setparamflag(&quot;NumberOfVariables&quot;, 4, false);

	/*set the number of variables as either the suggested number (taken from the summary)
	  or the highest limit if given a range*/
	if @SuggestedNumberOfVariables is defined and @SuggestedNumberOfVariables ne &apos;&apos; then
		 setparam(&quot;NumberOfVariables&quot;, @SuggestedNumberOfVariables);
	else
		 setparam(&quot;NumberOfVariables&quot;, substring(@NumberOfVariables, findsubstring(@NumberOfVariables, &quot;:&quot;) + 1));
	end if;
end if;

setparam(&quot;IncludedProperties&quot;, @keptProperties);
setparam(&quot;ExcludedProperties&quot;, @excludedProperties);
setparam(&quot;R Version&quot;, @RVersion);

@keptProperties := strreplace(@keptProperties, &apos;,&apos;, &apos;, &apos;);
@excludedProperties := strreplace(@excludedProperties, &apos;,&apos;, &apos;, &apos;);

if stringlen(trim(@keptProperties)) == 0 then 
     @keptProperties := &apos;(none)&apos;;
end if;
if stringlen(trim(@excludedProperties)) == 0 then 
     @excludedProperties := &apos;(none)&apos;;
end if;

#extraInfo := &apos;&lt;p&gt;Properties included in fit of model: &apos; . @keptProperties . 
     &apos;&lt;p&gt;Properties excluded from fit (due to zero variance or colinearity): &apos; . @excludedProperties .
     &apos;&lt;p&gt;R version: &apos; . @RVersion . &apos;&lt;p&gt;&apos;;
	 
if @ExtraModelParameters is defined then 
	for #i in 1 .. numvalues(@ExtraModelParameters) loop
		/* Make param non-required, visible, non-advanced. */
//		setparamflag(@ExtraModelParameters[#i], 1, true); 
		setparamflag(@ExtraModelParameters[#i], 2, true);
		setparamflag(@ExtraModelParameters[#i], 4, false);
		
		/* legalvals get lost for some reason, so we need to put them back. */
		if getparamtype(@ExtraModelParameters[#i]) eq &apos;BoolType&apos; then
			#lvals := &apos;True&apos;;
			append(#lvals, &apos;False&apos;);
			setparamlegalvalues(@ExtraModelParameters[#i], #lvals, false);
		end if;
	end loop;
end if;

sethelp(&apos;ComponentHelpPurpose&apos;, &apos;Predict sample properties using the R model $(LearnedPropertyName)&apos;);

// Add learner-specific param info to @HTMLHelpText
#exclList := &apos;Name,UseProperties,PredefinedSet,UserSet,IgnoreProperties,Learn Options,Model Domain Fingerprint,Numeric Distance Function,Numeric Scaling,Fingerprint Distance Function,Additional Properties&apos;;
expand(&apos;,&apos;, #exclList);

#parhtml := &apos;&apos;;
for #i in 1 .. numvalues(@&apos;Relearn Parameters&apos;) loop
	#parname := @&apos;Relearn Parameters&apos;[#i];
	
	if (not contains(#exclList, #parname)) and globalproperty(#parname) is defined then
		#parval := globalproperty(#parname);
		if numvalues(#parval) &gt; 1 then
			contract(&apos;,&apos;, #parval);
		end if;
		#parhtml .= &apos;&lt;tr&gt;&lt;td&gt;&apos; . #parname . &apos;&lt;/td&gt;&lt;td&gt;&apos; . #parval . &quot;&lt;/td&gt;&lt;/tr&gt;\n&quot;;
	end if;
end loop;

#matchStr := &apos;&lt;tr&gt;&lt;td&gt;&lt;b&gt;Additional Options&apos;;
#replaceStr := &quot;&lt;tr&gt;&lt;td&gt;&lt;b&gt;R-related Options&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;\n&quot; . #parhtml . #matchStr;
@HTMLHelpText := strreplace(@HTMLHelpText, #matchStr, #replaceStr);

#help := &quot;&lt;pre&gt;Model summary from R:\n&quot; . @FitSummary . &apos; &lt;/pre&gt;&apos; . #extraInfo . &quot;\n&lt;p&gt;&quot; . @HTMLHelpText;
sethelp(&apos;ComponentHelpDescription&apos;, #help);
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Apr 23 12:20:45 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>***Set parameters for R Model</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -4470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.17</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>25</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.ComponentWriter.1">
												<sci:component name="Component Writer" version="2">
													<sci:arg name="Destination" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The file or URL data destination to write to.</sci:help>
														<sci:value>$(Destination Folder)/$(LearnedPropertyName)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>SciTegic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Jul 24 13:25:46 2003</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Write new R Model</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DataBaseNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{00E1B146-EFCE-4B03-A5C8-D3859AAD8E0B}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Component Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -4470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Writes a component into the system from a data object.</sci:value>
														<sci:value>Writes a component into the system from a data object

Input - Data records containing the component definitions</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>26</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Utilities\Component Utilities\Component Writer</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>fileexists(&quot;$(Routput1file)&quot;) = true and @RExitStatus==0</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Output1 file exists</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -4820</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>17</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Text Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>SourceTag</sci:member>
														<sci:member>Keep Properties</sci:member>
														<sci:value>$(Routput1file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
														<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.
</sci:help>
													</sci:arg>
													<sci:arg name="DelimitUsing" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Specifies which delimiting mechanism to use:&lt;/p&gt;

 - EndOfFile: All text is one record.

 - EndOfParagraph: Each paragraph becomes a separate record.

 - EndOfLine: Each line becomes a separate record.

 - DelimitText: Uses the parameters BeginningText and/or EndingText.

&lt;p&gt;If delimiter text is specified, it must be identical to that of the text in the file. For instance, if the text in the file has five whitespaces before the alphanumeric text, the delimiting text string must also have five whitespaces.&lt;/p&gt;
</sci:help>
														<sci:member>BeginningText</sci:member>
														<sci:member>EndingText</sci:member>
														<sci:legalval selected="true">EndOfFile</sci:legalval>
														<sci:legalval>EndOfParagraph</sci:legalval>
														<sci:legalval>EndOfLine</sci:legalval>
														<sci:legalval>DelimitText</sci:legalval>
													</sci:arg>
													<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The character indicating the beginning of a new record (only used when DelimitUsing set to &quot;DelimitText&quot;)</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set DelimitUsing to DelimitText&apos;);
Parameter(&apos;DelimitUsing&apos;) eq &apos;DelimitText&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The character indicating the end of a new record (only used when DelimitUsing is set to &quot;DelimitText&quot;)</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set DelimitUsing to DelimitText&apos;);
Parameter(&apos;DelimitUsing&apos;) eq &apos;DelimitText&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:help>Contains less commonly used parameters</sci:help>
														<sci:member>KeepEndOfLine</sci:member>
														<sci:member>PutTextInProperty</sci:member>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of property to hold the block of text</sci:help>
														<sci:value>Descriptors</sci:value>
													</sci:arg>
													<sci:arg name="KeepEndOfLine" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to keep the end of line character in the data when delimiting using end of line.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Mar 15 08:02:07 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read R file</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -4820</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads data from text files delimited by end of line, paragraph, or file</sci:value>
														<sci:value>&lt;p&gt;Reads data from the file or files specified by &lt;i&gt;Source&lt;/i&gt;, creating a data record for each block of text. &lt;i&gt;DelimitUsing&lt;/i&gt; determines how the text in the file is split into blocks. &lt;i&gt;PutTextInProperty&lt;/i&gt; specifies the name of the property in which the text blocks will be stored (the default is &lt;b&gt;Text&lt;/b&gt;).&lt;/p&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
  &lt;li&gt;For text files with one record per line and properties separated by a known delimiter (e.g., Excel CSV files), use &lt;a href=&quot;javascript:DoLink(&apos;{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}&apos;)&quot;&gt;Delimited Text Reader&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.10</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>14</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Text Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>RMergeIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -4820</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>28</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.MergeProperties.1">
												<sci:component name="Merge Data" version="2">
													<sci:arg name="MergeUsing" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
														<sci:member>MergeUsingListType</sci:member>
														<sci:member>MergePropertyType</sci:member>
														<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
														<sci:member>IgnoreCase</sci:member>
														<sci:value>RMergeIndex</sci:value>
													</sci:arg>
													<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:
&lt;ul&gt;
&lt;li&gt;&quot;UseFirstDefinedValue&quot;: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:legalval>UseFirstDefinedValue</sci:legalval>
														<sci:legalval selected="true">UseAllValues</sci:legalval>
													</sci:arg>
													<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:legalval>IsNumeric</sci:legalval>
														<sci:legalval selected="true">IsText</sci:legalval>
														<sci:legalval>IsDate</sci:legalval>
														<sci:legalval>IsFingerprint</sci:legalval>
													</sci:arg>
													<sci:arg name="IgnoreCase" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &quot;MergeUsing&quot; property values.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
														<sci:member>WhenMerging</sci:member>
														<sci:member>KeepAllNullString</sci:member>
														<sci:member>KeepAllPreferredNodeName</sci:member>
														<sci:member>PrefixUsingProperty</sci:member>
														<sci:legalval selected="true">KeepAll</sci:legalval>
														<sci:legalval>KeepFirst</sci:legalval>
													</sci:arg>
													<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;When merging using KeepAll behavior, provides fine control over how multiple values are treated.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
														<sci:legalval>OverwriteOrCreate</sci:legalval>
														<sci:legalval>OverwriteExisting</sci:legalval>
														<sci:legalval>CreateIfNew</sci:legalval>
														<sci:legalval selected="true">AppendOrCreate</sci:legalval>
														<sci:legalval>AppendExisting</sci:legalval>
													</sci:arg>
													<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;This string is used during append using KeepAll &lt;i&gt;MergeBehavior&lt;/i&gt; to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
														<sci:value>None</sci:value>
													</sci:arg>
													<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;If defined, and &lt;i&gt;MergeBehavior&lt;/i&gt; is KeepAll, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first record with a given merge value is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
														<sci:value>Molecule</sci:value>
													</sci:arg>
													<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
													</sci:arg>
													<sci:arg name="OutputFrequency" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual records included in the resulting merged record.&lt;/p&gt;
</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Nov 10 15:27:48 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Merge Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>JOINNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -4820</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Merges properties of all data records that share the same key property value into a single data record
</sci:value>
														<sci:value>&lt;p&gt;Incoming data records are merged into a single data record if they have the same value for the &lt;i&gt;MergeUsing&lt;/i&gt; property.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Multiple &lt;i&gt;MergeUsing&lt;/i&gt; properties can be specified.  In this case, data records are merged if the value for each &lt;i&gt;MergeUsing&lt;/i&gt; property matches across the data records.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge records based on molecular structures, use &lt;a href=&quot;javascript:DoLink(&apos;{2E21E16B-6901-46F3-8780-F14D3D7057CE}&apos;)&quot;&gt;
Merge Molecules&lt;/a&gt; (which requires the Chemistry Collection).&lt;/p&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records that contain the properties being used for merging</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records that do not contain the properties being used for merging</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.1.8</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>29</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.PropertyFunctions.1">
												<sci:component name="Remove Properties" version="2">
													<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The names of properties to remove from each data record entering the component</sci:help>
														<sci:value>RMergeIndex</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>the action to perform</sci:help>
														<sci:value>Remove</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 15 10:06:31 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Remove properties</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>true</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ExpressionNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1242 -4820</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Removes the specified properties</sci:value>
														<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. To specify more than one property to be removed, use a comma separated list.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records with the specified properties removed</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.46</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>30</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>fileexists(&quot;$(Routput16file)&quot;) = true and @RExitStatus==0</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Output16 file exists</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -5195</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>103</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Text Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>SourceTag</sci:member>
														<sci:member>Keep Properties</sci:member>
														<sci:value>$(Routput16file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
														<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.
</sci:help>
													</sci:arg>
													<sci:arg name="DelimitUsing" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Specifies which delimiting mechanism to use:&lt;/p&gt;

 - EndOfFile: All text is one record.

 - EndOfParagraph: Each paragraph becomes a separate record.

 - EndOfLine: Each line becomes a separate record.

 - DelimitText: Uses the parameters BeginningText and/or EndingText.

&lt;p&gt;If delimiter text is specified, it must be identical to that of the text in the file. For instance, if the text in the file has five whitespaces before the alphanumeric text, the delimiting text string must also have five whitespaces.&lt;/p&gt;
</sci:help>
														<sci:member>BeginningText</sci:member>
														<sci:member>EndingText</sci:member>
														<sci:legalval selected="true">EndOfFile</sci:legalval>
														<sci:legalval>EndOfParagraph</sci:legalval>
														<sci:legalval>EndOfLine</sci:legalval>
														<sci:legalval>DelimitText</sci:legalval>
													</sci:arg>
													<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The character indicating the beginning of a new record (only used when DelimitUsing set to &quot;DelimitText&quot;)</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set DelimitUsing to DelimitText&apos;);
Parameter(&apos;DelimitUsing&apos;) eq &apos;DelimitText&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The character indicating the end of a new record (only used when DelimitUsing is set to &quot;DelimitText&quot;)</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set DelimitUsing to DelimitText&apos;);
Parameter(&apos;DelimitUsing&apos;) eq &apos;DelimitText&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:help>Contains less commonly used parameters</sci:help>
														<sci:member>KeepEndOfLine</sci:member>
														<sci:member>PutTextInProperty</sci:member>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of property to hold the block of text</sci:help>
														<sci:value>Columns</sci:value>
													</sci:arg>
													<sci:arg name="KeepEndOfLine" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to keep the end of line character in the data when delimiting using end of line.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Mar 15 08:02:07 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read R file</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -5195</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads data from text files delimited by end of line, paragraph, or file</sci:value>
														<sci:value>&lt;p&gt;Reads data from the file or files specified by &lt;i&gt;Source&lt;/i&gt;, creating a data record for each block of text. &lt;i&gt;DelimitUsing&lt;/i&gt; determines how the text in the file is split into blocks. &lt;i&gt;PutTextInProperty&lt;/i&gt; specifies the name of the property in which the text blocks will be stored (the default is &lt;b&gt;Text&lt;/b&gt;).&lt;/p&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
  &lt;li&gt;For text files with one record per line and properties separated by a known delimiter (e.g., Excel CSV files), use &lt;a href=&quot;javascript:DoLink(&apos;{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}&apos;)&quot;&gt;Delimited Text Reader&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.10</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>104</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Text Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>RMergeIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -5195</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>105</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>fileexists(&quot;$(Routput10file)&quot;) = true</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Output10 exists</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -5545</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>50</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Text Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>SourceTag</sci:member>
														<sci:member>Keep Properties</sci:member>
														<sci:value>$(Routput10file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
														<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.
</sci:help>
													</sci:arg>
													<sci:arg name="DelimitUsing" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Specifies which delimiting mechanism to use:&lt;/p&gt;

 - EndOfFile: All text is one record.

 - EndOfParagraph: Each paragraph becomes a separate record.

 - EndOfLine: Each line becomes a separate record.

 - DelimitText: Uses the parameters BeginningText and/or EndingText.

&lt;p&gt;If delimiter text is specified, it must be identical to that of the text in the file. For instance, if the text in the file has five whitespaces before the alphanumeric text, the delimiting text string must also have five whitespaces.&lt;/p&gt;
</sci:help>
														<sci:member>BeginningText</sci:member>
														<sci:member>EndingText</sci:member>
														<sci:legalval selected="true">EndOfFile</sci:legalval>
														<sci:legalval>EndOfParagraph</sci:legalval>
														<sci:legalval>EndOfLine</sci:legalval>
														<sci:legalval>DelimitText</sci:legalval>
													</sci:arg>
													<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The character indicating the beginning of a new record (only used when DelimitUsing set to &quot;DelimitText&quot;)</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set DelimitUsing to DelimitText&apos;);
Parameter(&apos;DelimitUsing&apos;) eq &apos;DelimitText&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The character indicating the end of a new record (only used when DelimitUsing is set to &quot;DelimitText&quot;)</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set DelimitUsing to DelimitText&apos;);
Parameter(&apos;DelimitUsing&apos;) eq &apos;DelimitText&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:help>Contains less commonly used parameters</sci:help>
														<sci:member>KeepEndOfLine</sci:member>
														<sci:member>PutTextInProperty</sci:member>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of property to hold the block of text</sci:help>
														<sci:value>Build Model Summary</sci:value>
													</sci:arg>
													<sci:arg name="KeepEndOfLine" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to keep the end of line character in the data when delimiting using end of line.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Mar 15 08:02:07 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read R file</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -5545</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads data from text files delimited by end of line, paragraph, or file</sci:value>
														<sci:value>&lt;p&gt;Reads data from the file or files specified by &lt;i&gt;Source&lt;/i&gt;, creating a data record for each block of text. &lt;i&gt;DelimitUsing&lt;/i&gt; determines how the text in the file is split into blocks. &lt;i&gt;PutTextInProperty&lt;/i&gt; specifies the name of the property in which the text blocks will be stored (the default is &lt;b&gt;Text&lt;/b&gt;).&lt;/p&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
  &lt;li&gt;For text files with one record per line and properties separated by a known delimiter (e.g., Excel CSV files), use &lt;a href=&quot;javascript:DoLink(&apos;{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}&apos;)&quot;&gt;Delimited Text Reader&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.10</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>51</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Text Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>RMergeIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -5545</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>54</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>fileexists(&quot;$(Routput11file)&quot;) = true</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Output11 exists</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -5920</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>52</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Text Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>SourceTag</sci:member>
														<sci:member>Keep Properties</sci:member>
														<sci:value>$(Routput11file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
														<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.
</sci:help>
													</sci:arg>
													<sci:arg name="DelimitUsing" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Specifies which delimiting mechanism to use:&lt;/p&gt;

 - EndOfFile: All text is one record.

 - EndOfParagraph: Each paragraph becomes a separate record.

 - EndOfLine: Each line becomes a separate record.

 - DelimitText: Uses the parameters BeginningText and/or EndingText.

&lt;p&gt;If delimiter text is specified, it must be identical to that of the text in the file. For instance, if the text in the file has five whitespaces before the alphanumeric text, the delimiting text string must also have five whitespaces.&lt;/p&gt;
</sci:help>
														<sci:member>BeginningText</sci:member>
														<sci:member>EndingText</sci:member>
														<sci:legalval selected="true">EndOfFile</sci:legalval>
														<sci:legalval>EndOfParagraph</sci:legalval>
														<sci:legalval>EndOfLine</sci:legalval>
														<sci:legalval>DelimitText</sci:legalval>
													</sci:arg>
													<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The character indicating the beginning of a new record (only used when DelimitUsing set to &quot;DelimitText&quot;)</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set DelimitUsing to DelimitText&apos;);
Parameter(&apos;DelimitUsing&apos;) eq &apos;DelimitText&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The character indicating the end of a new record (only used when DelimitUsing is set to &quot;DelimitText&quot;)</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set DelimitUsing to DelimitText&apos;);
Parameter(&apos;DelimitUsing&apos;) eq &apos;DelimitText&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:help>Contains less commonly used parameters</sci:help>
														<sci:member>KeepEndOfLine</sci:member>
														<sci:member>PutTextInProperty</sci:member>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of property to hold the block of text</sci:help>
														<sci:value>Cross Validation Summary</sci:value>
													</sci:arg>
													<sci:arg name="KeepEndOfLine" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to keep the end of line character in the data when delimiting using end of line.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Mar 15 08:02:07 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read R file</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -5920</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads data from text files delimited by end of line, paragraph, or file</sci:value>
														<sci:value>&lt;p&gt;Reads data from the file or files specified by &lt;i&gt;Source&lt;/i&gt;, creating a data record for each block of text. &lt;i&gt;DelimitUsing&lt;/i&gt; determines how the text in the file is split into blocks. &lt;i&gt;PutTextInProperty&lt;/i&gt; specifies the name of the property in which the text blocks will be stored (the default is &lt;b&gt;Text&lt;/b&gt;).&lt;/p&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
  &lt;li&gt;For text files with one record per line and properties separated by a known delimiter (e.g., Excel CSV files), use &lt;a href=&quot;javascript:DoLink(&apos;{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}&apos;)&quot;&gt;Delimited Text Reader&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.10</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>53</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Text Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>RMergeIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -5920</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>55</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>@ShowTSNE</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Do TSNE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -6270</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>63</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.DataCacheIO.1">
												<sci:component name="Cache Reader" version="2">
													<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The name of the cache to read, which should refer to a cache already written in the protocol containing this component.  Use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to provide an ID for temporary caches, then refer to the temporary ID with $(globalname)</sci:help>
														<sci:member>RangeMinimum</sci:member>
														<sci:member>RangeMaximum</sci:member>
														<sci:member>Scope</sci:member>
														<sci:member>JobId</sci:member>
														<sci:value>tSNE</sci:value>
													</sci:arg>
													<sci:arg name="RangeMinimum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The lower limit of data records to read from the cache. Numbering starts at 1.  A blank value or a value less than 1 means start reading at the first cached record.
               </sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="RangeMaximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The upper limit of data records to read from the cache. Numbering starts at 1.  A blank value or a value less than 1 means read to the end of the set of cached records.
               </sci:help>
													</sci:arg>
													<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to the same values as were used in the &lt;/i&gt;Cache Writer&lt;/i&gt;.
			</sci:help>
														<sci:legalval selected="true">Job Only</sci:legalval>
														<sci:legalval>User Only</sci:legalval>
														<sci:legalval>All Users</sci:legalval>
													</sci:arg>
													<sci:arg name="DeleteWhenFinished" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>If True, then delete the cache when finished reading</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Additional parameters to control the component behavior.</sci:help>
														<sci:member>Read Globals</sci:member>
														<sci:member>Password</sci:member>
													</sci:arg>
													<sci:arg name="Read Globals" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;Defines if the component should read globals from the cache.&lt;/p&gt;
&lt;p&gt;Any globals read from the cache will overwrite the existing globals.&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:help>&lt;p&gt;Enter a password, if one was assigned when the cache was written.
&lt;/p&gt;
&lt;p&gt;Note that a password is not required, if the current user originally wrote the password-protected cache.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:value>ComponentReturnsPass</sci:value>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="JobId" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>If the scope is set to &lt;I&gt;Job Only&lt;/I&gt;, then this is the job that owns the cache, if it is different from this job. The job must have been run by the same user as this job. If not specified, then the current job is assumed to contain the cache.
               </sci:help>
														<sci:enabledscript>parameter(&apos;Scope&apos;) eq &apos;Job Only&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
													</sci:arg>
													<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
														<sci:legalval>Writer</sci:legalval>
														<sci:legalval selected="true">Reader</sci:legalval>
														<sci:legalval>Writer/Reader</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Aug 28 09:15:02 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;CacheID&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>
#displayName := Parameter(&apos;CacheID&apos;, 2);
if(StrLength(#displayName) &gt; 0) then	
	&apos;Read cache &apos; . #displayName;
else
	&apos;&apos;;
end if;
			</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -6270</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DATABASENODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{704E3781-33EA-42BB-9099-05B44C3D08E6}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Cache Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads data records from a named cache</sci:value>
														<sci:value>&lt;p&gt;A data cache is a place where you can temporarily store data records without losing information.  This component is used to read data from a named cache created by the &lt;a href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache Writer&lt;/a&gt; component.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache to read.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;This component is typically used as a mechanism for retrieving temporary data stored within a protocol.&lt;/li&gt;
&lt;li&gt;To access a cache created in a different protocol, use &lt;i&gt;Scope&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To join data from a cache to streaming data records use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To list available caches use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-7077-05B44C3D08E6}&apos;)&quot;&gt;List Caches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To create a temporary cacheID use &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1563</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>62</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Cache Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>RMergeIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -6270</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>64</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>fileexists(&apos;$(Routput12file)&apos;)</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>GA plot exists?</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -6645</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>154</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Binary Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>SourceTag</sci:member>
														<sci:value>$(Routput12file)</sci:value>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:member>Put Binary Data in Property</sci:member>
													</sci:arg>
													<sci:arg name="Put Binary Data in Property" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of property to hold file contents</sci:help>
														<sci:value>Genetic Feature Selection</sci:value>
													</sci:arg>
													<sci:arg name="Binary" type="BoolType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:help>Whether to read the file as binary bytes or as text. The entire file is read into a single property, as given by PutTextInProperty. The parameters DelimitUsing, BeginningText, and EndingText are ignored if this is set True.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Name of property to hold file contents. (Alias of &lt;i&gt;Put Binary Data in Property&lt;/i&gt;.)</sci:help>
														<sci:value>$(Put Binary Data in Property)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:value>ComponentReturnsPass</sci:value>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Mar 15 08:00:58 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Binary Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -6645</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DOCUMENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{B0B1B56C-3DF6-444C-BB78-B43211188F63}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads binary data from files</sci:value>
														<sci:value>&lt;p&gt;This component reads the binary file(s) specified by &lt;i&gt;Source&lt;/i&gt; and creates a data record for each file, with a single property (by default, named &lt;b&gt;Binary&lt;/b&gt;) containing the data.&lt;/p&gt;
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.10</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>155</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Binary Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>RMergeIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -6645</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>156</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>fileexists(&apos;$(Routput13file)&apos;)</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Stepwise plot exists?</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -6995</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>151</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Binary Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>SourceTag</sci:member>
														<sci:value>$(Routput13file)</sci:value>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:member>Put Binary Data in Property</sci:member>
													</sci:arg>
													<sci:arg name="Put Binary Data in Property" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of property to hold file contents</sci:help>
														<sci:value>Stepwise Feature Selection</sci:value>
													</sci:arg>
													<sci:arg name="Binary" type="BoolType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:help>Whether to read the file as binary bytes or as text. The entire file is read into a single property, as given by PutTextInProperty. The parameters DelimitUsing, BeginningText, and EndingText are ignored if this is set True.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Name of property to hold file contents. (Alias of &lt;i&gt;Put Binary Data in Property&lt;/i&gt;.)</sci:help>
														<sci:value>$(Put Binary Data in Property)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:value>ComponentReturnsPass</sci:value>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Mar 15 08:00:58 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Binary Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -6995</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DOCUMENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{B0B1B56C-3DF6-444C-BB78-B43211188F63}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads binary data from files</sci:value>
														<sci:value>&lt;p&gt;This component reads the binary file(s) specified by &lt;i&gt;Source&lt;/i&gt; and creates a data record for each file, with a single property (by default, named &lt;b&gt;Binary&lt;/b&gt;) containing the data.&lt;/p&gt;
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.10</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>152</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Binary Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>RMergeIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -6995</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>157</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>fileexists(&apos;$(Routput22file)&apos;)</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>CV Fit plot exists?</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -7370</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>139</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Binary Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>SourceTag</sci:member>
														<sci:value>$(Routput22file)</sci:value>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:member>Put Binary Data in Property</sci:member>
													</sci:arg>
													<sci:arg name="Put Binary Data in Property" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of property to hold file contents</sci:help>
														<sci:value>CVFitPlot</sci:value>
													</sci:arg>
													<sci:arg name="Binary" type="BoolType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:help>Whether to read the file as binary bytes or as text. The entire file is read into a single property, as given by PutTextInProperty. The parameters DelimitUsing, BeginningText, and EndingText are ignored if this is set True.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Name of property to hold file contents. (Alias of &lt;i&gt;Put Binary Data in Property&lt;/i&gt;.)</sci:help>
														<sci:value>$(Put Binary Data in Property)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:value>ComponentReturnsPass</sci:value>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Mar 15 08:00:58 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Binary Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -7370</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DOCUMENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{B0B1B56C-3DF6-444C-BB78-B43211188F63}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads binary data from files</sci:value>
														<sci:value>&lt;p&gt;This component reads the binary file(s) specified by &lt;i&gt;Source&lt;/i&gt; and creates a data record for each file, with a single property (by default, named &lt;b&gt;Binary&lt;/b&gt;) containing the data.&lt;/p&gt;
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.10</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>140</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Binary Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>RMergeIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -7370</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>141</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>fileexists(&apos;$(Routput23file)&apos;)</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>CV Residuals plot exists?</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -7720</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>142</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Binary Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>SourceTag</sci:member>
														<sci:value>$(Routput23file)</sci:value>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:member>Put Binary Data in Property</sci:member>
													</sci:arg>
													<sci:arg name="Put Binary Data in Property" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of property to hold file contents</sci:help>
														<sci:value>CVResidualsPlot</sci:value>
													</sci:arg>
													<sci:arg name="Binary" type="BoolType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:help>Whether to read the file as binary bytes or as text. The entire file is read into a single property, as given by PutTextInProperty. The parameters DelimitUsing, BeginningText, and EndingText are ignored if this is set True.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Name of property to hold file contents. (Alias of &lt;i&gt;Put Binary Data in Property&lt;/i&gt;.)</sci:help>
														<sci:value>$(Put Binary Data in Property)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:value>ComponentReturnsPass</sci:value>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Mar 15 08:00:58 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Binary Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -7720</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DOCUMENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{B0B1B56C-3DF6-444C-BB78-B43211188F63}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads binary data from files</sci:value>
														<sci:value>&lt;p&gt;This component reads the binary file(s) specified by &lt;i&gt;Source&lt;/i&gt; and creates a data record for each file, with a single property (by default, named &lt;b&gt;Binary&lt;/b&gt;) containing the data.&lt;/p&gt;
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.10</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>143</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Binary Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>RMergeIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -7720</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>144</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>fileexists(&apos;$(Routput19file)&apos;)</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>CompFit plot exists?</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -8095</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>127</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Binary Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>SourceTag</sci:member>
														<sci:value>$(Routput19file)</sci:value>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:member>Put Binary Data in Property</sci:member>
													</sci:arg>
													<sci:arg name="Put Binary Data in Property" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of property to hold file contents</sci:help>
														<sci:value>Component Fits</sci:value>
													</sci:arg>
													<sci:arg name="Binary" type="BoolType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:help>Whether to read the file as binary bytes or as text. The entire file is read into a single property, as given by PutTextInProperty. The parameters DelimitUsing, BeginningText, and EndingText are ignored if this is set True.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Name of property to hold file contents. (Alias of &lt;i&gt;Put Binary Data in Property&lt;/i&gt;.)</sci:help>
														<sci:value>$(Put Binary Data in Property)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:value>ComponentReturnsPass</sci:value>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Mar 15 08:00:58 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Binary Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -8095</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DOCUMENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{B0B1B56C-3DF6-444C-BB78-B43211188F63}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads binary data from files</sci:value>
														<sci:value>&lt;p&gt;This component reads the binary file(s) specified by &lt;i&gt;Source&lt;/i&gt; and creates a data record for each file, with a single property (by default, named &lt;b&gt;Binary&lt;/b&gt;) containing the data.&lt;/p&gt;
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.10</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>128</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Binary Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>RMergeIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -8095</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>129</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value> fileexists(&apos;$(Routput20file)&apos;)</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Comp RMSE plot exists?</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -8445</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>130</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Binary Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>SourceTag</sci:member>
														<sci:value>$(Routput20file)</sci:value>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:member>Put Binary Data in Property</sci:member>
													</sci:arg>
													<sci:arg name="Put Binary Data in Property" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of property to hold file contents</sci:help>
														<sci:value>R2 of Components</sci:value>
													</sci:arg>
													<sci:arg name="Binary" type="BoolType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:help>Whether to read the file as binary bytes or as text. The entire file is read into a single property, as given by PutTextInProperty. The parameters DelimitUsing, BeginningText, and EndingText are ignored if this is set True.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Name of property to hold file contents. (Alias of &lt;i&gt;Put Binary Data in Property&lt;/i&gt;.)</sci:help>
														<sci:value>$(Put Binary Data in Property)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:value>ComponentReturnsPass</sci:value>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Mar 15 08:00:58 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Binary Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -8445</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DOCUMENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{B0B1B56C-3DF6-444C-BB78-B43211188F63}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads binary data from files</sci:value>
														<sci:value>&lt;p&gt;This component reads the binary file(s) specified by &lt;i&gt;Source&lt;/i&gt; and creates a data record for each file, with a single property (by default, named &lt;b&gt;Binary&lt;/b&gt;) containing the data.&lt;/p&gt;
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.10</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>131</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Binary Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>RMergeIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -8445</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>132</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>fileexists(&apos;$(Routput21file)&apos;)</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Comp RMSE plot exists?</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -8820</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>133</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Binary Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>SourceTag</sci:member>
														<sci:value>$(Routput21file)</sci:value>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:member>Put Binary Data in Property</sci:member>
													</sci:arg>
													<sci:arg name="Put Binary Data in Property" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of property to hold file contents</sci:help>
														<sci:value>RMSE of Components</sci:value>
													</sci:arg>
													<sci:arg name="Binary" type="BoolType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:help>Whether to read the file as binary bytes or as text. The entire file is read into a single property, as given by PutTextInProperty. The parameters DelimitUsing, BeginningText, and EndingText are ignored if this is set True.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Name of property to hold file contents. (Alias of &lt;i&gt;Put Binary Data in Property&lt;/i&gt;.)</sci:help>
														<sci:value>$(Put Binary Data in Property)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:value>ComponentReturnsPass</sci:value>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Mar 15 08:00:58 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Binary Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -8820</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DOCUMENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{B0B1B56C-3DF6-444C-BB78-B43211188F63}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads binary data from files</sci:value>
														<sci:value>&lt;p&gt;This component reads the binary file(s) specified by &lt;i&gt;Source&lt;/i&gt; and creates a data record for each file, with a single property (by default, named &lt;b&gt;Binary&lt;/b&gt;) containing the data.&lt;/p&gt;
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.10</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>134</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Binary Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>RMergeIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -8820</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>135</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>fileexists(&quot;$(Routput17file)&quot;) = true</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Output17 file exists (Y-scrambling)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -9170</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>148</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Binary Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>SourceTag</sci:member>
														<sci:value>$(Routput17file)</sci:value>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:member>Put Binary Data in Property</sci:member>
													</sci:arg>
													<sci:arg name="Put Binary Data in Property" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of property to hold file contents</sci:help>
														<sci:value>Y-scrambling</sci:value>
													</sci:arg>
													<sci:arg name="Binary" type="BoolType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:help>Whether to read the file as binary bytes or as text. The entire file is read into a single property, as given by PutTextInProperty. The parameters DelimitUsing, BeginningText, and EndingText are ignored if this is set True.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Name of property to hold file contents. (Alias of &lt;i&gt;Put Binary Data in Property&lt;/i&gt;.)</sci:help>
														<sci:value>$(Put Binary Data in Property)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:value>ComponentReturnsPass</sci:value>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Mar 15 08:00:58 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Binary Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -9170</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DOCUMENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{B0B1B56C-3DF6-444C-BB78-B43211188F63}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads binary data from files</sci:value>
														<sci:value>&lt;p&gt;This component reads the binary file(s) specified by &lt;i&gt;Source&lt;/i&gt; and creates a data record for each file, with a single property (by default, named &lt;b&gt;Binary&lt;/b&gt;) containing the data.&lt;/p&gt;
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.10</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>149</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Binary Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>RMergeIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -9170</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>150</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>fileexists(&quot;$(Routput8file)&quot;) = true</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Output8 file exists (importance plot)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -9545</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>112</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Binary Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>SourceTag</sci:member>
														<sci:value>$(Routput8file)</sci:value>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:member>Put Binary Data in Property</sci:member>
													</sci:arg>
													<sci:arg name="Put Binary Data in Property" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of property to hold file contents</sci:help>
														<sci:value>ImportancePlot</sci:value>
													</sci:arg>
													<sci:arg name="Binary" type="BoolType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:help>Whether to read the file as binary bytes or as text. The entire file is read into a single property, as given by PutTextInProperty. The parameters DelimitUsing, BeginningText, and EndingText are ignored if this is set True.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Name of property to hold file contents. (Alias of &lt;i&gt;Put Binary Data in Property&lt;/i&gt;.)</sci:help>
														<sci:value>$(Put Binary Data in Property)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:value>ComponentReturnsPass</sci:value>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Mar 15 08:00:58 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Binary Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -9545</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DOCUMENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{B0B1B56C-3DF6-444C-BB78-B43211188F63}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads binary data from files</sci:value>
														<sci:value>&lt;p&gt;This component reads the binary file(s) specified by &lt;i&gt;Source&lt;/i&gt; and creates a data record for each file, with a single property (by default, named &lt;b&gt;Binary&lt;/b&gt;) containing the data.&lt;/p&gt;
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.10</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>113</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Binary Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>RMergeIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -9545</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>116</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>fileexists(&quot;$(Routput9file)&quot;) = true</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Output file exists (accuracy importance plot)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -9895</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>114</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Binary Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>SourceTag</sci:member>
														<sci:value>$(Routput9file)</sci:value>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:member>Put Binary Data in Property</sci:member>
													</sci:arg>
													<sci:arg name="Put Binary Data in Property" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of property to hold file contents</sci:help>
														<sci:value>AccuracyImportancePlot</sci:value>
													</sci:arg>
													<sci:arg name="Binary" type="BoolType" required="true" visibility="visible" multi="false" uimpl="true">
														<sci:help>Whether to read the file as binary bytes or as text. The entire file is read into a single property, as given by PutTextInProperty. The parameters DelimitUsing, BeginningText, and EndingText are ignored if this is set True.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>Name of property to hold file contents. (Alias of &lt;i&gt;Put Binary Data in Property&lt;/i&gt;.)</sci:help>
														<sci:value>$(Put Binary Data in Property)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:value>ComponentReturnsPass</sci:value>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Mar 15 08:00:58 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Binary Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -9895</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DOCUMENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{B0B1B56C-3DF6-444C-BB78-B43211188F63}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads binary data from files</sci:value>
														<sci:value>&lt;p&gt;This component reads the binary file(s) specified by &lt;i&gt;Source&lt;/i&gt; and creates a data record for each file, with a single property (by default, named &lt;b&gt;Binary&lt;/b&gt;) containing the data.&lt;/p&gt;
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.10</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>115</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Binary Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>RMergeIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -9895</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>117</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>fileexists(&quot;$(Routput14file)&quot;) = true</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Output14 exists</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -10270</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>106</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Text Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>SourceTag</sci:member>
														<sci:member>Keep Properties</sci:member>
														<sci:value>$(Routput14file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
														<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.
</sci:help>
													</sci:arg>
													<sci:arg name="DelimitUsing" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Specifies which delimiting mechanism to use:&lt;/p&gt;

 - EndOfFile: All text is one record.

 - EndOfParagraph: Each paragraph becomes a separate record.

 - EndOfLine: Each line becomes a separate record.

 - DelimitText: Uses the parameters BeginningText and/or EndingText.

&lt;p&gt;If delimiter text is specified, it must be identical to that of the text in the file. For instance, if the text in the file has five whitespaces before the alphanumeric text, the delimiting text string must also have five whitespaces.&lt;/p&gt;
</sci:help>
														<sci:member>BeginningText</sci:member>
														<sci:member>EndingText</sci:member>
														<sci:legalval selected="true">EndOfFile</sci:legalval>
														<sci:legalval>EndOfParagraph</sci:legalval>
														<sci:legalval>EndOfLine</sci:legalval>
														<sci:legalval>DelimitText</sci:legalval>
													</sci:arg>
													<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The character indicating the beginning of a new record (only used when DelimitUsing set to &quot;DelimitText&quot;)</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set DelimitUsing to DelimitText&apos;);
Parameter(&apos;DelimitUsing&apos;) eq &apos;DelimitText&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The character indicating the end of a new record (only used when DelimitUsing is set to &quot;DelimitText&quot;)</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set DelimitUsing to DelimitText&apos;);
Parameter(&apos;DelimitUsing&apos;) eq &apos;DelimitText&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:help>Contains less commonly used parameters</sci:help>
														<sci:member>KeepEndOfLine</sci:member>
														<sci:member>PutTextInProperty</sci:member>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of property to hold the block of text</sci:help>
														<sci:value>Genetic Algorithm Summary</sci:value>
													</sci:arg>
													<sci:arg name="KeepEndOfLine" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to keep the end of line character in the data when delimiting using end of line.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Mar 15 08:02:07 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read R file</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -10270</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads data from text files delimited by end of line, paragraph, or file</sci:value>
														<sci:value>&lt;p&gt;Reads data from the file or files specified by &lt;i&gt;Source&lt;/i&gt;, creating a data record for each block of text. &lt;i&gt;DelimitUsing&lt;/i&gt; determines how the text in the file is split into blocks. &lt;i&gt;PutTextInProperty&lt;/i&gt; specifies the name of the property in which the text blocks will be stored (the default is &lt;b&gt;Text&lt;/b&gt;).&lt;/p&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
  &lt;li&gt;For text files with one record per line and properties separated by a known delimiter (e.g., Excel CSV files), use &lt;a href=&quot;javascript:DoLink(&apos;{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}&apos;)&quot;&gt;Delimited Text Reader&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.10</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>107</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Text Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>RMergeIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -10270</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>108</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>fileexists(&quot;$(Routput15file)&quot;) = true</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Output15 exists</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -10620</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>109</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Text Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>SourceTag</sci:member>
														<sci:member>Keep Properties</sci:member>
														<sci:value>$(Routput15file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
														<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.
</sci:help>
													</sci:arg>
													<sci:arg name="DelimitUsing" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Specifies which delimiting mechanism to use:&lt;/p&gt;

 - EndOfFile: All text is one record.

 - EndOfParagraph: Each paragraph becomes a separate record.

 - EndOfLine: Each line becomes a separate record.

 - DelimitText: Uses the parameters BeginningText and/or EndingText.

&lt;p&gt;If delimiter text is specified, it must be identical to that of the text in the file. For instance, if the text in the file has five whitespaces before the alphanumeric text, the delimiting text string must also have five whitespaces.&lt;/p&gt;
</sci:help>
														<sci:member>BeginningText</sci:member>
														<sci:member>EndingText</sci:member>
														<sci:legalval selected="true">EndOfFile</sci:legalval>
														<sci:legalval>EndOfParagraph</sci:legalval>
														<sci:legalval>EndOfLine</sci:legalval>
														<sci:legalval>DelimitText</sci:legalval>
													</sci:arg>
													<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The character indicating the beginning of a new record (only used when DelimitUsing set to &quot;DelimitText&quot;)</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set DelimitUsing to DelimitText&apos;);
Parameter(&apos;DelimitUsing&apos;) eq &apos;DelimitText&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The character indicating the end of a new record (only used when DelimitUsing is set to &quot;DelimitText&quot;)</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set DelimitUsing to DelimitText&apos;);
Parameter(&apos;DelimitUsing&apos;) eq &apos;DelimitText&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:help>Contains less commonly used parameters</sci:help>
														<sci:member>KeepEndOfLine</sci:member>
														<sci:member>PutTextInProperty</sci:member>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of property to hold the block of text</sci:help>
														<sci:value>Stepwise Summary</sci:value>
													</sci:arg>
													<sci:arg name="KeepEndOfLine" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to keep the end of line character in the data when delimiting using end of line.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Mar 15 08:02:07 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read R file</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -10620</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads data from text files delimited by end of line, paragraph, or file</sci:value>
														<sci:value>&lt;p&gt;Reads data from the file or files specified by &lt;i&gt;Source&lt;/i&gt;, creating a data record for each block of text. &lt;i&gt;DelimitUsing&lt;/i&gt; determines how the text in the file is split into blocks. &lt;i&gt;PutTextInProperty&lt;/i&gt; specifies the name of the property in which the text blocks will be stored (the default is &lt;b&gt;Text&lt;/b&gt;).&lt;/p&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
  &lt;li&gt;For text files with one record per line and properties separated by a known delimiter (e.g., Excel CSV files), use &lt;a href=&quot;javascript:DoLink(&apos;{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}&apos;)&quot;&gt;Delimited Text Reader&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.10</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>110</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Text Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>RMergeIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -10620</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>111</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>fileexists(&quot;$(Routput18file)&quot;) = true</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Output18 exists</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FilterNode</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -10995</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>None</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>124</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.TextReader.1">
												<sci:component name="Text Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
														<sci:help>The file or URL source to read</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>SourceTag</sci:member>
														<sci:member>Keep Properties</sci:member>
														<sci:value>$(Routput18file)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
														<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.
</sci:help>
													</sci:arg>
													<sci:arg name="DelimitUsing" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Specifies which delimiting mechanism to use:&lt;/p&gt;

 - EndOfFile: All text is one record.

 - EndOfParagraph: Each paragraph becomes a separate record.

 - EndOfLine: Each line becomes a separate record.

 - DelimitText: Uses the parameters BeginningText and/or EndingText.

&lt;p&gt;If delimiter text is specified, it must be identical to that of the text in the file. For instance, if the text in the file has five whitespaces before the alphanumeric text, the delimiting text string must also have five whitespaces.&lt;/p&gt;
</sci:help>
														<sci:member>BeginningText</sci:member>
														<sci:member>EndingText</sci:member>
														<sci:legalval selected="true">EndOfFile</sci:legalval>
														<sci:legalval>EndOfParagraph</sci:legalval>
														<sci:legalval>EndOfLine</sci:legalval>
														<sci:legalval>DelimitText</sci:legalval>
													</sci:arg>
													<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The character indicating the beginning of a new record (only used when DelimitUsing set to &quot;DelimitText&quot;)</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set DelimitUsing to DelimitText&apos;);
Parameter(&apos;DelimitUsing&apos;) eq &apos;DelimitText&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>The character indicating the end of a new record (only used when DelimitUsing is set to &quot;DelimitText&quot;)</sci:help>
														<sci:enabledscript>SetDisabledDetails(&apos;To enable, set DelimitUsing to DelimitText&apos;);
Parameter(&apos;DelimitUsing&apos;) eq &apos;DelimitText&apos;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:help>Contains less commonly used parameters</sci:help>
														<sci:member>KeepEndOfLine</sci:member>
														<sci:member>PutTextInProperty</sci:member>
													</sci:arg>
													<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Name of property to hold the block of text</sci:help>
														<sci:value>Parameter Optimization Summary</sci:value>
													</sci:arg>
													<sci:arg name="KeepEndOfLine" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Whether to keep the end of line character in the data when delimiting using end of line.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Mar 15 08:02:07 2007</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Read R file</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -10995</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DocumentNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Text Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads data from text files delimited by end of line, paragraph, or file</sci:value>
														<sci:value>&lt;p&gt;Reads data from the file or files specified by &lt;i&gt;Source&lt;/i&gt;, creating a data record for each block of text. &lt;i&gt;DelimitUsing&lt;/i&gt; determines how the text in the file is split into blocks. &lt;i&gt;PutTextInProperty&lt;/i&gt; specifies the name of the property in which the text blocks will be stored (the default is &lt;b&gt;Text&lt;/b&gt;).&lt;/p&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
  &lt;li&gt;For text files with one record per line and properties separated by a known delimiter (e.g., Excel CSV files), use &lt;a href=&quot;javascript:DoLink(&apos;{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}&apos;)&quot;&gt;Delimited Text Reader&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic Data</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.1.0.10</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>125</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Text Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.CountRecords.1">
												<sci:component name="Count and Index Data" version="2">
													<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
														<sci:member>Start Index</sci:member>
														<sci:member>Check if Property Already in Use</sci:member>
														<sci:value>RMergeIndex</sci:value>
													</sci:arg>
													<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
														<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/core</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>COMPONENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Count and Index Data</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -10995</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Counts the number of data records and puts the count in a property</sci:value>
														<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>6.0.0.44</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>126</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:connectid from="1" to="37" type="true"/>
											<sci:connectid from="37" to="36" type="true"/>
											<sci:connectid from="37" to="38" type="false"/>
											<sci:connectid from="147" to="1" type="true"/>
											<sci:connectid from="147" to="4" type="true"/>
											<sci:connectid from="147" to="1" type="false"/>
											<sci:connectid from="147" to="4" type="false"/>
											<sci:connectid from="39" to="147" type="true"/>
											<sci:connectid from="39" to="7" type="true"/>
											<sci:connectid from="4" to="44" type="true"/>
											<sci:connectid from="44" to="5" type="true"/>
											<sci:connectid from="7" to="8" type="true"/>
											<sci:connectid from="40" to="41" type="true"/>
											<sci:connectid from="41" to="42" type="true"/>
											<sci:connectid from="42" to="43" type="true"/>
											<sci:connectid from="10" to="11" type="true"/>
											<sci:connectid from="11" to="159" type="true"/>
											<sci:connectid from="159" to="160" type="true"/>
											<sci:connectid from="19" to="20" type="true"/>
											<sci:connectid from="21" to="19" type="true"/>
											<sci:connectid from="21" to="22" type="false"/>
											<sci:connectid from="23" to="24" type="true"/>
											<sci:connectid from="24" to="25" type="true"/>
											<sci:connectid from="25" to="26" type="true"/>
											<sci:connectid from="17" to="14" type="true"/>
											<sci:connectid from="14" to="28" type="true"/>
											<sci:connectid from="28" to="29" type="true"/>
											<sci:connectid from="29" to="30" type="true"/>
											<sci:connectid from="103" to="104" type="true"/>
											<sci:connectid from="104" to="105" type="true"/>
											<sci:connectid from="105" to="29" type="true"/>
											<sci:connectid from="50" to="51" type="true"/>
											<sci:connectid from="51" to="54" type="true"/>
											<sci:connectid from="54" to="29" type="true"/>
											<sci:connectid from="52" to="53" type="true"/>
											<sci:connectid from="53" to="55" type="true"/>
											<sci:connectid from="55" to="29" type="true"/>
											<sci:connectid from="63" to="62" type="true"/>
											<sci:connectid from="62" to="64" type="true"/>
											<sci:connectid from="64" to="29" type="true"/>
											<sci:connectid from="154" to="155" type="true"/>
											<sci:connectid from="155" to="156" type="true"/>
											<sci:connectid from="156" to="29" type="true"/>
											<sci:connectid from="151" to="152" type="true"/>
											<sci:connectid from="152" to="157" type="true"/>
											<sci:connectid from="157" to="29" type="true"/>
											<sci:connectid from="139" to="140" type="true"/>
											<sci:connectid from="140" to="141" type="true"/>
											<sci:connectid from="141" to="29" type="true"/>
											<sci:connectid from="142" to="143" type="true"/>
											<sci:connectid from="143" to="144" type="true"/>
											<sci:connectid from="144" to="29" type="true"/>
											<sci:connectid from="127" to="128" type="true"/>
											<sci:connectid from="128" to="129" type="true"/>
											<sci:connectid from="129" to="29" type="true"/>
											<sci:connectid from="130" to="131" type="true"/>
											<sci:connectid from="131" to="132" type="true"/>
											<sci:connectid from="132" to="29" type="true"/>
											<sci:connectid from="133" to="134" type="true"/>
											<sci:connectid from="134" to="135" type="true"/>
											<sci:connectid from="135" to="29" type="true"/>
											<sci:connectid from="148" to="149" type="true"/>
											<sci:connectid from="149" to="150" type="true"/>
											<sci:connectid from="150" to="29" type="true"/>
											<sci:connectid from="112" to="113" type="true"/>
											<sci:connectid from="113" to="116" type="true"/>
											<sci:connectid from="116" to="29" type="true"/>
											<sci:connectid from="114" to="115" type="true"/>
											<sci:connectid from="115" to="117" type="true"/>
											<sci:connectid from="117" to="29" type="true"/>
											<sci:connectid from="106" to="107" type="true"/>
											<sci:connectid from="107" to="108" type="true"/>
											<sci:connectid from="108" to="29" type="true"/>
											<sci:connectid from="109" to="110" type="true"/>
											<sci:connectid from="110" to="111" type="true"/>
											<sci:connectid from="111" to="29" type="true"/>
											<sci:connectid from="124" to="125" type="true"/>
											<sci:connectid from="125" to="126" type="true"/>
											<sci:connectid from="126" to="29" type="true"/>
											<sci:version iVal="1"/>
										</sci:protocol>
									</sci:data>
									<sci:data object="SciTegic.PropertyFunctions.1">
										<sci:component name="No-op" version="2">
											<sci:arg name="Action to Take" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>There are four possible values of this parameter, indicating the diverse range of actions that may be taken.  Possible values and their actions are as follows:
&lt;ul&gt;
&lt;li&gt;Nothing: does nothing
&lt;li&gt;Nada: does nothing
&lt;li&gt;Zilch: does nothing
&lt;li&gt;Dont Even Think About It: does nothing
&lt;/ul&gt;
</sci:help>
												<sci:legalval selected="true">Nothing</sci:legalval>
												<sci:legalval>Nada</sci:legalval>
												<sci:legalval>Zilch</sci:legalval>
												<sci:legalval>Dont Even Think About It</sci:legalval>
											</sci:arg>
											<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
												<sci:legalval selected="true">LeaveData</sci:legalval>
												<sci:legalval>ClearData</sci:legalval>
												<sci:legalval>DeleteData</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>the action to perform</sci:help>
												<sci:value>PassDataToPort</sci:value>
											</sci:arg>
											<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>the port to pass data to</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>COMPONENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Wed Sep 20 08:23:31 2006</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>No-op</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Evaluate Expression</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -720</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
												<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>6.0.1.0</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>8</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:connectid from="0" to="1" type="true"/>
									<sci:connectid from="1" to="2" type="true"/>
									<sci:connectid from="2" to="3" type="true"/>
									<sci:connectid from="4" to="5" type="true"/>
									<sci:connectid from="5" to="6" type="true"/>
									<sci:connectid from="6" to="0" type="true"/>
									<sci:connectid from="6" to="7" type="true"/>
									<sci:connectid from="8" to="0" type="true"/>
									<sci:connectid from="8" to="7" type="true"/>
									<sci:version iVal="1"/>
								</sci:protocol>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Get R Model Importance Output" version="2">
									<sci:arg name="Sort By" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Property 1</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>The property to sort by.</sci:help>
										<sci:value>Importance (Accuracy)</sci:value>
									</sci:arg>
									<sci:arg name="FeatureProperty" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Name of property containing the feature names. May be &quot;Property&quot; if it directly corresponds to a PP property, or &quot;Feature&quot; if it&apos;s better described as a feature -- e.g., a specific value of a categorical property.</sci:help>
										<sci:value>Property</sci:value>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
										<sci:member>RunToCompletion Categorize Using</sci:member>
										<sci:legalval selected="true">False</sci:legalval>
										<sci:legalval>True - For Each Data Record</sci:legalval>
										<sci:legalval>True - For Each Category</sci:legalval>
									</sci:arg>
									<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
										<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
										<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Run subprotocol on grid engine if available.</sci:help>
										<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval>ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Get R Model Importance Output</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>SUBPROTOCOLNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>790</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{543C95E8-9879-4D81-92E6-E5FEAFC49E0D}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -1920</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Internal component for getting importance output</sci:value>
										<sci:value>Used by R Forest and XGBoost learners. Designed to work closely with &quot;Learn R RF or XGB Model Internal&quot;. Keys off of @RFfpname and the existence of @Routput6file, with a local cache ID @RModelfile.</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
										<sci:value>None</sci:value>
										<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>18.1.0.1418</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/rstats</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue May 30 14:45:52 2017</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>50</sci:value>
									</sci:arg>
									<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>OriginalPackage</sci:help>
										<sci:value>scitegic/coreutils</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Modified</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Get R Model Importance Output</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol/>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Filter (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>The PilotScript expression used to filter the data.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>@TypeOfPropertyToLearn eq &apos;Categorical&apos;</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval>ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Doing Classification?</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FILTERNODE</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Filter (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -2295</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>38</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Filter (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>The PilotScript expression used to filter the data.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>fileexists(&quot;$(Routput5file)&quot;) = true</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:value>ComponentReturnsPass</sci:value>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Output5 file exists (records with only 1 level)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FilterNode</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Filter (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>378 -2295</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
										<sci:value>None</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>39</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.DelimitedReader.1">
								<sci:component name="Delimited Text Reader" version="2">
									<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
										<sci:help>The file(s) or URL source to read</sci:help>
										<sci:member>Maximum</sci:member>
										<sci:member>Keep Properties</sci:member>
										<sci:member>SourceTag</sci:member>
										<sci:member>HasColumnNames</sci:member>
										<sci:member>CommentLines</sci:member>
										<sci:value>$(Routput5file)</sci:value>
									</sci:arg>
									<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
									</sci:arg>
									<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.</sci:help>
										<sci:legalval selected="true">None</sci:legalval>
										<sci:legalval>Filename</sci:legalval>
										<sci:legalval>FilenameAndExtension</sci:legalval>
										<sci:legalval>FullFilename</sci:legalval>
										<sci:legalval>ZipFilename</sci:legalval>
										<sci:legalval>Number</sci:legalval>
										<sci:legalval>Letter</sci:legalval>
										<sci:legalval>KeepCurrent</sci:legalval>
									</sci:arg>
									<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
										<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.</sci:help>
									</sci:arg>
									<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1,Column2, etc.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma-separated list of line numbers and
line ranges to specify which lines should be 
ignored by the parser (column headers will be
read from the line that comes next).</sci:help>
									</sci:arg>
									<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Specifies the character that separates fields. Options include:

 - FigureOut: Determines the type automatically.
 - Tab: For tab-delimited fields.
 - Space: For space-delimited fields.
 - Comma: For comma-delimited fields.
 - Colon: For colon-delimited fields.
 - Semicolon: For semicolon-delimited fields.</sci:help>
										<sci:member>MultipleValueDelimiter</sci:member>
										<sci:legalval>FigureOut</sci:legalval>
										<sci:legalval>Tab</sci:legalval>
										<sci:legalval>Space</sci:legalval>
										<sci:legalval selected="true">Comma</sci:legalval>
										<sci:legalval>Colon</sci:legalval>
										<sci:legalval>Semicolon</sci:legalval>
									</sci:arg>
									<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>The delimiter to use between multiple values contained in a single property. If the multiple value delimited exists in any of the input strings in any property, they are separated into an array of values. If &quot;None&quot;, 
values are never separated into multiple values.</sci:help>
										<sci:legalval selected="true">None</sci:legalval>
										<sci:legalval>Semicolon</sci:legalval>
										<sci:legalval>Colon</sci:legalval>
										<sci:legalval>Comma</sci:legalval>
										<sci:legalval>Linefeed</sci:legalval>
									</sci:arg>
									<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Contains additional options that are occasionally used to modify the behavior of this component</sci:help>
										<sci:member>UndefinedString</sci:member>
										<sci:member>AllLines</sci:member>
										<sci:member>TrimWhitespace</sci:member>
										<sci:member>CheckSyntax</sci:member>
									</sci:arg>
									<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Character or string used to represent an undefined string read in the file.  If you wish an empty string to be treated as an undefined value, then set the parameter value to &quot;EmptyString&quot;.</sci:help>
									</sci:arg>
									<sci:arg name="AllLines" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>When True, all lines of the text file become part of a single data record. The values for a column from each row become multiple [array] values for the property (column).</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>Trims whitespace from the left and right ends of each value</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="CheckSyntax" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>Whether to perform a quick syntax check at the beginning of the file when we open it, and if a problem is found, throw an error.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/core</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed Apr 06 11:28:29 2005</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Delimited Text
Reader</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Delimited Reader</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>DocumentNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>666 -2295</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Reads text files containing one record per line with data separated by delimiters.</sci:value>
										<sci:value>&lt;p&gt;Use this component to read comma-delimited text files from Microsoft Excel 
  (.csv). It reads textual data from one or more files formatted with a single 
  record per line. Individual data records on each line should be separated by 
  a delimiter character (a space, comma, or tab). &lt;/p&gt;
&lt;p&gt;Records in the first line of the file are treated as the column names for defining 
  property names. If column names are not declared, the records use generic names 
  (Column1, Column2, etc.). &lt;/p&gt;</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>5.0.0.10</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>40</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\File Readers\Delimited Text Reader</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>ErrorText := &quot;&apos;$(Name)&apos; value appears only once in data&quot;;
</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/core</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Error text</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>ExpressionNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>954 -2295</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>4.1.1.400</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>41</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.PropertyFunctions.1">
								<sci:component name="Data to Fail Port" version="2">
									<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
										<sci:legalval selected="true">LeaveData</sci:legalval>
										<sci:legalval>ClearData</sci:legalval>
										<sci:legalval>DeleteData</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:help>the action to perform</sci:help>
										<sci:value>PassDataToPort</sci:value>
									</sci:arg>
									<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>the port to pass data to</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FilterNode</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/core</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Mar 29 17:36:03 2004</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Data to Fail Port</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Evaluate Expression</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{A718CDEE-EE7D-4B75-9346-C3780D347090}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1242 -2295</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Directs records to the Fail port for use in subprotocol building.</sci:value>
										<sci:value>Useful in a subprotocol for directing records that are passing through components in the subprotocol to the Fail port of the subprotocol.
</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value>All data records</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>4.0.4.0</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>42</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Data to Fail Port</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Delete R Tempfiles" version="2">
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
										<sci:member>RunToCompletion Categorize Using</sci:member>
										<sci:legalval selected="true">False</sci:legalval>
										<sci:legalval>True - For Each Data Record</sci:legalval>
										<sci:legalval>True - For Each Category</sci:legalval>
									</sci:arg>
									<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
										<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
										<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Run subprotocol on grid engine if available.</sci:help>
										<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
										<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval>ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Delete R Tempfiles</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>SUBPROTOCOLNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>790</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{32BF0BCE-DA1E-4B49-A224-05B4FE7344AB}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -2645</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Deletes tempfiles used by an R Statistics component</sci:value>
										<sci:value>&lt;b&gt;THIS IS AN INTERNAL COMPONENT&lt;/b&gt;</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
										<sci:value>None</sci:value>
										<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>8.1.0.10</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/rstats</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Thu Sep 16 13:37:34 2010</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>43</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Modified</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Delete R Tempfiles</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol/>
							</sci:data>
							<sci:connectid from="51" to="52" type="true"/>
							<sci:connectid from="52" to="53" type="true"/>
							<sci:connectid from="53" to="54" type="true"/>
							<sci:connectid from="61" to="58" type="true"/>
							<sci:connectid from="58" to="56" type="true"/>
							<sci:connectid from="66" to="67" type="true"/>
							<sci:connectid from="67" to="65" type="true"/>
							<sci:connectid from="38" to="39" type="true"/>
							<sci:connectid from="39" to="40" type="true"/>
							<sci:connectid from="40" to="41" type="true"/>
							<sci:connectid from="41" to="42" type="true"/>
							<sci:version iVal="1"/>
						</sci:protocol>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="HTML Table Viewer" version="2">
							<sci:arg name="Maximum Rows" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies the maximum number of table rows in the HTML page</sci:help>
								<sci:value>11</sci:value>
							</sci:arg>
							<sci:arg name="Rows Per Page" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The number of rows displayed on each page</sci:help>
								<sci:value>11</sci:value>
							</sci:arg>
							<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The optional title of the HTML document</sci:help>
								<sci:value>wrong output..</sci:value>
							</sci:arg>
							<sci:arg name="Freeze Table Header" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;When set to True, this table&apos;s header and title will remain visible when the table is scrolled vertically.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This feature only applies to HTML reports.&lt;/li&gt;
	&lt;li&gt;The fixed header behavior depends on what container (e.g., plain browser window, Tile component, Dynamic Content Container) that the Table is piped into.&lt;/li&gt; 
	&lt;li&gt;To create a table of fixed pixel height, set this parameter to True and pipe this table into a Dynamic Content Container of fixed (i.e., non-percentage) height.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Use Default Browser" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
								<sci:metaproplist>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Browser</sci:value>
									</sci:mpropval>
								</sci:metaproplist>
								<sci:help>&lt;p&gt;
This parameter is only relevant when running the protocol in the Pipeline Pilot Professional Client.
&lt;/p&gt;
&lt;p&gt;
The value specifies whether to use your default desktop web browser to view the HTML table. When set to False, Internet Explorer is used as a standard fallback option. If IE is your default browser, it is used in either case.
&lt;/p&gt;
</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
								<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
								<sci:value>temphtml</sci:value>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
								<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
								<sci:value>HTML Filename</sci:value>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
								<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Internet Explorer" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>The location for Internet Explorer</sci:help>
								<sci:value>internetexplorer.application</sci:value>
							</sci:arg>
							<sci:arg name="Chrome" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>The location for Chrome</sci:help>
								<sci:value>&quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot;</sci:value>
							</sci:arg>
							<sci:arg name="Firefox" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
								<sci:help>The location for Firefox</sci:help>
								<sci:value>&quot;C:\Program Files (x86)\Mozilla Firefox\firefox.exe&quot;</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
								<sci:legalval>Cant Replace With Copy</sci:legalval>
								<sci:legalval>Cant Open</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Oct 23 17:05:34 2015</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>HTML Table Viewer</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -395</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ViewerNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolCommentSize" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>ProtocolCommentSize</sci:help>
								<sci:value>1100 500</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{F6A20C96-BC1C-48f3-82E9-4D8F023F82EE}</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Displays data records as HTML in a web browser</sci:value>
								<sci:value>&lt;p&gt;Generates and displays an HTML table page of data records, with one record per row. Each property becomes a column in the table and each value a cell.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Molecules will be displayed if present.&lt;/li&gt;
&lt;li&gt;For hierarchical data records, only top level properties are displayed.&lt;/li&gt;
&lt;li&gt;Any grouped data is displayed in nested tables.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you prefer not to view the grouped data, use &lt;a href=&quot;javascript:DoLink(&apos;{ACCDEEEF-FEED-4B27-B263-BA531EABFC9C}&apos;)&quot;&gt;Delete Children&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For more control over the display of molecules, use &lt;a href=&quot;javascript:DoLink(&apos;{485D30CD-737C-4AD3-89C9-F81CB20E47AE}&apos;)&quot;&gt;HTML Molecular Table Viewer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>16.1.0.1089</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>96</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Viewers\HTML Table Viewer</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:connectid from="68" to="95" type="true"/>
					<sci:connectid from="68" to="96" type="false"/>
					<sci:version iVal="1"/>
				</sci:protocol>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="HTML Table Viewer" version="2">
					<sci:arg name="Maximum Rows" type="LongType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies the maximum number of table rows in the HTML page</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Rows Per Page" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The number of rows displayed on each page</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The optional title of the HTML document</sci:help>
					</sci:arg>
					<sci:arg name="Freeze Table Header" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;When set to True, this table&apos;s header and title will remain visible when the table is scrolled vertically.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This feature only applies to HTML reports.&lt;/li&gt;
	&lt;li&gt;The fixed header behavior depends on what container (e.g., plain browser window, Tile component, Dynamic Content Container) that the Table is piped into.&lt;/li&gt; 
	&lt;li&gt;To create a table of fixed pixel height, set this parameter to True and pipe this table into a Dynamic Content Container of fixed (i.e., non-percentage) height.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Use Default Browser" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Browser</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;
This parameter is only relevant when running the protocol in the Pipeline Pilot Professional Client.
&lt;/p&gt;
&lt;p&gt;
The value specifies whether to use your default desktop web browser to view the HTML table. When set to False, Internet Explorer is used as a standard fallback option. If IE is your default browser, it is used in either case.
&lt;/p&gt;
</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
						<sci:value>temphtml</sci:value>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
						<sci:value>HTML Filename</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
						<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Internet Explorer" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>The location for Internet Explorer</sci:help>
						<sci:value>internetexplorer.application</sci:value>
					</sci:arg>
					<sci:arg name="Chrome" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>The location for Chrome</sci:help>
						<sci:value>&quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot;</sci:value>
					</sci:arg>
					<sci:arg name="Firefox" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:help>The location for Firefox</sci:help>
						<sci:value>&quot;C:\Program Files (x86)\Mozilla Firefox\firefox.exe&quot;</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Cant Replace With Copy</sci:legalval>
						<sci:legalval>Cant Open</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Oct 23 17:05:34 2015</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>HTML Table Viewer</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>true</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1530 -1920</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>4</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ViewerNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolCommentSize" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>ProtocolCommentSize</sci:help>
						<sci:value>1100 500</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{F6A20C96-BC1C-48f3-82E9-4D8F023F82EE}</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Displays data records as HTML in a web browser</sci:value>
						<sci:value>&lt;p&gt;Generates and displays an HTML table page of data records, with one record per row. Each property becomes a column in the table and each value a cell.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Molecules will be displayed if present.&lt;/li&gt;
&lt;li&gt;For hierarchical data records, only top level properties are displayed.&lt;/li&gt;
&lt;li&gt;Any grouped data is displayed in nested tables.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you prefer not to view the grouped data, use &lt;a href=&quot;javascript:DoLink(&apos;{ACCDEEEF-FEED-4B27-B263-BA531EABFC9C}&apos;)&quot;&gt;Delete Children&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For more control over the display of molecules, use &lt;a href=&quot;javascript:DoLink(&apos;{485D30CD-737C-4AD3-89C9-F81CB20E47AE}&apos;)&quot;&gt;HTML Molecular Table Viewer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1089</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>20</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Viewers\HTML Table Viewer</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.MDLSDReader.1">
				<sci:component name="SD Reader" version="2">
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The file or URL source to read</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>SourceTag</sci:member>
						<sci:member>Keep Properties</sci:member>
						<sci:member>UTF-8 Auto Detect</sci:member>
						<sci:value>$(UserDir)/PP/IonModel/NETSN100TemporalSplitTest.sd.gz</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
					</sci:arg>
					<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called 
&lt;b&gt;SourceTag&lt;/b&gt; is created and holds the value indicated.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;None&lt;/b&gt;: 
No SourceTag property is created and any existing ones are removed.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Filename&lt;/b&gt;: 
The name of the file read.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FilenameAndExtension&lt;/b&gt;: The name of the 
file read with its file extension.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FullFilename&lt;/b&gt;: The name of the 
file read, including the directory path.&lt;/li&gt;&lt;li&gt;&lt;b&gt;ZipFilename&lt;/b&gt;: When reading 
a compressed zip file, the filename within the compressed archive.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Number&lt;/b&gt;: 
When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;&lt;li&gt;&lt;b&gt;Letter&lt;/b&gt;: 
When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;&lt;li&gt;&lt;b&gt;KeepCurrent&lt;/b&gt;: 
Keeps the current value of SourceTag.&lt;/li&gt;&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Filename</sci:legalval>
						<sci:legalval>FilenameAndExtension</sci:legalval>
						<sci:legalval>FullFilename</sci:legalval>
						<sci:legalval>ZipFilename</sci:legalval>
						<sci:legalval>Number</sci:legalval>
						<sci:legalval>Letter</sci:legalval>
						<sci:legalval>KeepCurrent</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
						<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.</sci:help>
					</sci:arg>
					<sci:arg name="UTF-8 Auto Detect" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;UTF-8 is a type of character encoding used to represent international characters with multiple bytes whereas basic Latin characters remain as a single byte.  Files can be stored with a Byte Order Mark (BOM) to indicate that the type of character encoding.&lt;/p&gt;
&lt;p&gt;When reading files that do not have a BOM, this parameter allows the reader to attempt to automatically detect UTF-8 encodings and convert as needed.  However, be aware that automatic detection is not always reliable.  In some cases, valid text stored in different character encodings can appear to be valid UTF-8.  In these cases, the automatic detection will result in garbled text.  When this occurs, you can consider using the &lt;a href=&quot;javascript:DoLink(&apos;{B0B1B56C-3DF6-444C-BB78-B43211188F63}&apos;)&quot;&gt;Binary Reader&lt;/a&gt; to read the file, then converting using the Pilotscript function &lt;b&gt;ConvertBytesToString&lt;/b&gt;&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>ReadProperties</sci:member>
						<sci:member>PutNameInProperty</sci:member>
						<sci:member>ReadQueryInfo</sci:member>
						<sci:member>PutCommentInProperty</sci:member>
						<sci:member>SD Format Options</sci:member>
						<sci:member>Global Templates</sci:member>
					</sci:arg>
					<sci:arg name="SD Format Options" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>&lt;p&gt;Options available for the SD Reader:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Properties Can Contain $$$$:&lt;/b&gt;  By the CTFile standard, a property can contain a &apos;$$$$&apos;-line.  
Properties or data field values are terminated by a blank line.  Only then will the &apos;$$$$&apos;-line 
terminate the full data block.  Setting this option off will terminate the data block upon any read of 
a &apos;$$$$&apos;-line.  This option is available to provide compatibility with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;One-space Lines Terminate Properties:&lt;/b&gt;  By the CTFile standard, properties or data fields values are 
terminated by a blank line. Selecting this option will terminate the data block when encountering a line 
containing a space as the only character in the line.  This option is available to provide compatibility 
with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Unwrap Long Property Lines:&lt;/b&gt;  By the CTFile standard, lines in property fields cannot exceed 200 characters.  When this option is selected and a property line of exactly 200 characters is found, the newline character will be ignored and property string will continue on the next line.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Read Unknown Stereo Parity:&lt;/b&gt;  When selected, the SD Reader will use the &apos;Atom Parity&apos; value (parity of 
&apos;3&apos;) to mark unknown stereo centers in 3D mol files.  This will leave these atoms marked as 
&apos;unknown stereo&apos; and will not calculate the stereo from the coordinates.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Process Complex Data Header Lines:&lt;/b&gt; Data header lines are the lines in the SD format that precede the actual data. They can contain the data field name (enclosed in angular brackets &lt;&gt;), the data field number (as DTn), the external registry number (enclosed in parentheses), and other optional information. When this parameter is set to False, only the data field name is parsed and used to set the corresponding property name. All the other information in the line is ignored. When the parameter is set to true, all the information is parsed. The property name is set from either the field name in &lt;&gt; or the DTn. If both are present the field name takes priority and the DTn number is saved as an additional property named &lt;b&gt;FieldName#DTn&lt;/b&gt;. The external registry number is saved as &lt;b&gt;FieldName#ExtRegNum&lt;/b&gt; and any other information is saved as &lt;b&gt;FieldName#OtherDataFieldInfo&lt;/b&gt;. When the molecules are written to an SD file, the data header lines are reconstructed from these properties. The default state of this parameter is False, as parsing, preserving, and eventually writing all the information in the data header lines can be costly, specially for SD files with many data fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert From H2 And H+ Atom Types:&lt;/b&gt; &apos;H2&apos; and &apos;H+&apos; are two non-standard element types that can be assigned to atoms by the BIOVIA Draw sketcher. They represent unattached Hydrogen (a Hydrogen molecule) and charged Hydrogen (a proton), respectively. When this parameter is selected, these atom types are converted to standard hydrogen atoms upon reading, with charges of 0 for H2 and +1 for H+. Otherwise, these atoms are read and perceived as unknown atom types, with &apos;H2&apos; and &apos;H+&apos; as the atom labels.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert Radicals To Pi Systems:&lt;/b&gt; When selected, pi bonds will be perceived between adjacent atoms marked with radicals and any adjacent metal atom.  Once pi bonds are perceived, subsequent exports will represent the pi bonds using the V3000 format and one-to-many coordination bonds (type 9) unless the writer&apos;s &lt;i&gt;Convert Pi Systems To Radicals&lt;/i&gt; option is used to convert the pi systems back. &lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert GEN+DAT to Polymer Repeat Units:&lt;/b&gt; When selected, this option will automatically convert input GEN sgroups with linked DAT sgroups having the special fieldname of &apos;rc&apos; and numeric or numeric range data internally into polymer repeat sgroups.  This usage is a special type of NONS (Non-Specific Structure) convention that was prototyped in previous releases.  Disabling this conversion will have a higher likelihood of producing a structure that can be registered into Direct databases. &lt;/li&gt;
&lt;li&gt;&lt;b&gt;Always Keep Enhanced Stereo:&lt;/b&gt; Preserves any enhanced stereo collections that are read in from V3000 MOL file.  When disabled, stereo structures will be checked to see if they can be represented more simply using only the Chiral Flag.  That is, structures with only ABS centers can be represented without enhanced stereo by setting the Chiral Flag on and structures with all centers in a single AND group can be represented without enhanced stereo by setting the Chiral Flag off.  Enhanced stereo collections that do not fit into the above cases are always preserved.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Properties Can Contain $$$$</sci:legalval>
						<sci:legalval>One-space Lines Terminate Properties</sci:legalval>
						<sci:legalval selected="true">Unwrap Long Property Lines</sci:legalval>
						<sci:legalval>Read Unknown Stereo Parity</sci:legalval>
						<sci:legalval>Process Complex Data Header Lines</sci:legalval>
						<sci:legalval selected="true">Convert From H2 And H+ Atom Types</sci:legalval>
						<sci:legalval>Convert Radicals To Pi Systems</sci:legalval>
						<sci:legalval selected="true">Convert GEN+DAT to Polymer Repeat Units</sci:legalval>
						<sci:legalval>Always Keep Enhanced Stereo</sci:legalval>
					</sci:arg>
					<sci:arg name="ReadProperties" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Select True to read the properties for each molecule (in addition to the structures)</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ReadQueryInfo" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If properties starting with &quot;QueryInfo&quot; are present, use them to set up query information on the atoms and bonds. (This is how, for example, SMARTS query information can be preserved when writing to an SD format file.) For molecules saved in MOL/SD format, this information only contains information that cannot be written out in the connection table.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="PutNameInProperty" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>What to call the property that holds the name of each molecule</sci:help>
						<sci:value>Name</sci:value>
					</sci:arg>
					<sci:arg name="PutCommentInProperty" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>What to call the property that holds the comment associated with each molecule</sci:help>
					</sci:arg>
					<sci:arg name="Global Templates" type="URLType" required="false" visibility="visible" multi="false">
						<sci:help>V3000 SD or MOL files containing template definitions for amino acid, nucleic acid or other residues or monomers. These templates can then be refered to by molecules read by the SD reader.&lt;p&gt;
The default template file included in the Chemistry collection, &lt;i&gt;data\Direct\Direct_templates.mol&lt;/i&gt; contains definitions for 22 amino acids and 8 DNA and RNA templates.</sci:help>
						<sci:value>data\HELM\SCSRtemplates.mol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="HasConvertPiSystemOption" type="BoolType" required="false" visibility="nevershow" multi="false" legalvalsenforced="false">
						<sci:help>Hidden flag specifying the presence of the &quot;Convert Radicals To Pi Systems&quot; option.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="AllowUnknownDoubleBondsFromCoordinates" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>According to the CTfile specifications, the cis/trans character of double bonds with bond stereo set to zero is determined from the coordinates. This parameter controls whether or not to assign unknown bond stereo to double bonds for which the stereo could not be determined from the coordinates, either because there are no coordinates or because of colinearity issues.  When the parameter is set to False and the stereo could not be determined, no specific stereo configuration is assigned to the double bond, but it is not marked as unknown stereo.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/chemistry</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed Apr 06 11:41:13 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>SD Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{CA65B896-4FE6-4E3A-B884-DC16B53B8D26}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SD Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -2295</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Reads MOL (molecule CTAB) files and SD (structured data) files</sci:value>
						<sci:value>&lt;p&gt;Creates a molecular data record for each molecule represented in the &lt;i&gt;Source&lt;/i&gt; 
data file.  All properties contained in the file are read into the data records.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;This 
component can also read zipped (.zip) and URL-based files.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;See 
Also:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;To write files in MOL or SD format, use the &lt;a href=&quot;javascript:DoLink(&apos;{DC8EE7B0-0620-42FE-944C-B4CD1E79480E}&apos;)&quot;&gt;SD 
Writer&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;To convert a molecule to and from between text properties in CTAB 
format, use &lt;a href=&quot;javascript:DoLink(&apos;{E622FBD9-9FA9-451A-A102-1800B5F28B6D}&apos;)&quot;&gt;Molecule 
to CTAB&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{7D354B65-DDD8-4EA4-83A7-21501A8A6852}&apos;)&quot;&gt;Molecule 
from CTAB&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Other related CTFile format file readers include &lt;a href=&quot;javascript:DoLink(&apos;{169AB4E5-A470-477B-AA65-50464411036C}&apos;)&quot;&gt;RG 
Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{036731AA-0015-4606-9750-7D9D020F21C8}&apos;)&quot;&gt;RXN 
Reader&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{55431CCB-06EA-4741-B95B-633C877E3E9B}&apos;)&quot;&gt;RD 
Reader&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt;</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Molecule</sci:value>
						<sci:value>Data fields in the SD file will be added to the property fields</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>17.1.0.59</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>15</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Chemistry\Data Access and Manipulation\Readers\SD Reader</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Subprotocol" version="2">
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
						<sci:value>10000</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:value>localhost</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:value>10</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;DD:MM:SS&amp;gt; - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Predict</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ComponentNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>378 -2295</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>17.2.0.1267</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>16</sci:value>
					</sci:arg>
					<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Checkpoint Identifier</sci:help>
						<sci:legalval selected="true">{184543AC-4BCF-430B-B551-6CBF96B2DE42}</sci:legalval>
						<sci:legalval selected="true">1</sci:legalval>
						<sci:legalval selected="true">-1</sci:legalval>
						<sci:legalval selected="true">1</sci:legalval>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>@SuppressRVersionWarning  := true;</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.MDLSDReader.1">
						<sci:component name="SD Reader" version="2">
							<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>The file or URL source to read</sci:help>
								<sci:member>Maximum</sci:member>
								<sci:member>SourceTag</sci:member>
								<sci:member>Keep Properties</sci:member>
								<sci:member>UTF-8 Auto Detect</sci:member>
								<sci:value>$(UserDir)/PP/IonModel/FinalProtdesc.sd.gz</sci:value>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
							</sci:arg>
							<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called 
&lt;b&gt;SourceTag&lt;/b&gt; is created and holds the value indicated.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;None&lt;/b&gt;: 
No SourceTag property is created and any existing ones are removed.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Filename&lt;/b&gt;: 
The name of the file read.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FilenameAndExtension&lt;/b&gt;: The name of the 
file read with its file extension.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FullFilename&lt;/b&gt;: The name of the 
file read, including the directory path.&lt;/li&gt;&lt;li&gt;&lt;b&gt;ZipFilename&lt;/b&gt;: When reading 
a compressed zip file, the filename within the compressed archive.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Number&lt;/b&gt;: 
When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;&lt;li&gt;&lt;b&gt;Letter&lt;/b&gt;: 
When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;&lt;li&gt;&lt;b&gt;KeepCurrent&lt;/b&gt;: 
Keeps the current value of SourceTag.&lt;/li&gt;&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>Filename</sci:legalval>
								<sci:legalval>FilenameAndExtension</sci:legalval>
								<sci:legalval>FullFilename</sci:legalval>
								<sci:legalval>ZipFilename</sci:legalval>
								<sci:legalval>Number</sci:legalval>
								<sci:legalval>Letter</sci:legalval>
								<sci:legalval>KeepCurrent</sci:legalval>
							</sci:arg>
							<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
								<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.</sci:help>
							</sci:arg>
							<sci:arg name="UTF-8 Auto Detect" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;UTF-8 is a type of character encoding used to represent international characters with multiple bytes whereas basic Latin characters remain as a single byte.  Files can be stored with a Byte Order Mark (BOM) to indicate that the type of character encoding.&lt;/p&gt;
&lt;p&gt;When reading files that do not have a BOM, this parameter allows the reader to attempt to automatically detect UTF-8 encodings and convert as needed.  However, be aware that automatic detection is not always reliable.  In some cases, valid text stored in different character encodings can appear to be valid UTF-8.  In these cases, the automatic detection will result in garbled text.  When this occurs, you can consider using the &lt;a href=&quot;javascript:DoLink(&apos;{B0B1B56C-3DF6-444C-BB78-B43211188F63}&apos;)&quot;&gt;Binary Reader&lt;/a&gt; to read the file, then converting using the Pilotscript function &lt;b&gt;ConvertBytesToString&lt;/b&gt;&lt;/p&gt;</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>ReadProperties</sci:member>
								<sci:member>PutNameInProperty</sci:member>
								<sci:member>ReadQueryInfo</sci:member>
								<sci:member>PutCommentInProperty</sci:member>
								<sci:member>SD Format Options</sci:member>
								<sci:member>Global Templates</sci:member>
							</sci:arg>
							<sci:arg name="SD Format Options" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>&lt;p&gt;Options available for the SD Reader:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Properties Can Contain $$$$:&lt;/b&gt;  By the CTFile standard, a property can contain a &apos;$$$$&apos;-line.  
Properties or data field values are terminated by a blank line.  Only then will the &apos;$$$$&apos;-line 
terminate the full data block.  Setting this option off will terminate the data block upon any read of 
a &apos;$$$$&apos;-line.  This option is available to provide compatibility with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;One-space Lines Terminate Properties:&lt;/b&gt;  By the CTFile standard, properties or data fields values are 
terminated by a blank line. Selecting this option will terminate the data block when encountering a line 
containing a space as the only character in the line.  This option is available to provide compatibility 
with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Unwrap Long Property Lines:&lt;/b&gt;  By the CTFile standard, lines in property fields cannot exceed 200 characters.  When this option is selected and a property line of exactly 200 characters is found, the newline character will be ignored and property string will continue on the next line.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Read Unknown Stereo Parity:&lt;/b&gt;  When selected, the SD Reader will use the &apos;Atom Parity&apos; value (parity of 
&apos;3&apos;) to mark unknown stereo centers in 3D mol files.  This will leave these atoms marked as 
&apos;unknown stereo&apos; and will not calculate the stereo from the coordinates.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Process Complex Data Header Lines:&lt;/b&gt; Data header lines are the lines in the SD format that precede the actual data. They can contain the data field name (enclosed in angular brackets &lt;&gt;), the data field number (as DTn), the external registry number (enclosed in parentheses), and other optional information. When this parameter is set to False, only the data field name is parsed and used to set the corresponding property name. All the other information in the line is ignored. When the parameter is set to true, all the information is parsed. The property name is set from either the field name in &lt;&gt; or the DTn. If both are present the field name takes priority and the DTn number is saved as an additional property named &lt;b&gt;FieldName#DTn&lt;/b&gt;. The external registry number is saved as &lt;b&gt;FieldName#ExtRegNum&lt;/b&gt; and any other information is saved as &lt;b&gt;FieldName#OtherDataFieldInfo&lt;/b&gt;. When the molecules are written to an SD file, the data header lines are reconstructed from these properties. The default state of this parameter is False, as parsing, preserving, and eventually writing all the information in the data header lines can be costly, specially for SD files with many data fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert From H2 And H+ Atom Types:&lt;/b&gt; &apos;H2&apos; and &apos;H+&apos; are two non-standard element types that can be assigned to atoms by the BIOVIA Draw sketcher. They represent unattached Hydrogen (a Hydrogen molecule) and charged Hydrogen (a proton), respectively. When this parameter is selected, these atom types are converted to standard hydrogen atoms upon reading, with charges of 0 for H2 and +1 for H+. Otherwise, these atoms are read and perceived as unknown atom types, with &apos;H2&apos; and &apos;H+&apos; as the atom labels.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert Radicals To Pi Systems:&lt;/b&gt; When selected, pi bonds will be perceived between adjacent atoms marked with radicals and any adjacent metal atom.  Once pi bonds are perceived, subsequent exports will represent the pi bonds using the V3000 format and one-to-many coordination bonds (type 9) unless the writer&apos;s &lt;i&gt;Convert Pi Systems To Radicals&lt;/i&gt; option is used to convert the pi systems back. &lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert GEN+DAT to Polymer Repeat Units:&lt;/b&gt; When selected, this option will automatically convert input GEN sgroups with linked DAT sgroups having the special fieldname of &apos;rc&apos; and numeric or numeric range data internally into polymer repeat sgroups.  This usage is a special type of NONS (Non-Specific Structure) convention that was prototyped in previous releases.  Disabling this conversion will have a higher likelihood of producing a structure that can be registered into Direct databases. &lt;/li&gt;
&lt;li&gt;&lt;b&gt;Always Keep Enhanced Stereo:&lt;/b&gt; Preserves any enhanced stereo collections that are read in from V3000 MOL file.  When disabled, stereo structures will be checked to see if they can be represented more simply using only the Chiral Flag.  That is, structures with only ABS centers can be represented without enhanced stereo by setting the Chiral Flag on and structures with all centers in a single AND group can be represented without enhanced stereo by setting the Chiral Flag off.  Enhanced stereo collections that do not fit into the above cases are always preserved.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">Properties Can Contain $$$$</sci:legalval>
								<sci:legalval>One-space Lines Terminate Properties</sci:legalval>
								<sci:legalval selected="true">Unwrap Long Property Lines</sci:legalval>
								<sci:legalval>Read Unknown Stereo Parity</sci:legalval>
								<sci:legalval>Process Complex Data Header Lines</sci:legalval>
								<sci:legalval selected="true">Convert From H2 And H+ Atom Types</sci:legalval>
								<sci:legalval>Convert Radicals To Pi Systems</sci:legalval>
								<sci:legalval selected="true">Convert GEN+DAT to Polymer Repeat Units</sci:legalval>
								<sci:legalval>Always Keep Enhanced Stereo</sci:legalval>
							</sci:arg>
							<sci:arg name="ReadProperties" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Select True to read the properties for each molecule (in addition to the structures)</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ReadQueryInfo" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>If properties starting with &quot;QueryInfo&quot; are present, use them to set up query information on the atoms and bonds. (This is how, for example, SMARTS query information can be preserved when writing to an SD format file.) For molecules saved in MOL/SD format, this information only contains information that cannot be written out in the connection table.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="PutNameInProperty" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>What to call the property that holds the name of each molecule</sci:help>
								<sci:value>Name</sci:value>
							</sci:arg>
							<sci:arg name="PutCommentInProperty" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>What to call the property that holds the comment associated with each molecule</sci:help>
							</sci:arg>
							<sci:arg name="Global Templates" type="URLType" required="false" visibility="visible" multi="false">
								<sci:help>V3000 SD or MOL files containing template definitions for amino acid, nucleic acid or other residues or monomers. These templates can then be refered to by molecules read by the SD reader.&lt;p&gt;
The default template file included in the Chemistry collection, &lt;i&gt;data\Direct\Direct_templates.mol&lt;/i&gt; contains definitions for 22 amino acids and 8 DNA and RNA templates.</sci:help>
								<sci:value>data\HELM\SCSRtemplates.mol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="HasConvertPiSystemOption" type="BoolType" required="false" visibility="nevershow" multi="false" legalvalsenforced="false">
								<sci:help>Hidden flag specifying the presence of the &quot;Convert Radicals To Pi Systems&quot; option.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="AllowUnknownDoubleBondsFromCoordinates" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>According to the CTfile specifications, the cis/trans character of double bonds with bond stereo set to zero is determined from the coordinates. This parameter controls whether or not to assign unknown bond stereo to double bonds for which the stereo could not be determined from the coordinates, either because there are no coordinates or because of colinearity issues.  When the parameter is set to False and the stereo could not be determined, no specific stereo configuration is assigned to the double bond, but it is not marked as unknown stereo.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/chemistry</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Apr 06 11:41:13 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>SD Reader</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{CA65B896-4FE6-4E3A-B884-DC16B53B8D26}</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SD Reader</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -470</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Reads MOL (molecule CTAB) files and SD (structured data) files</sci:value>
								<sci:value>&lt;p&gt;Creates a molecular data record for each molecule represented in the &lt;i&gt;Source&lt;/i&gt; 
data file.  All properties contained in the file are read into the data records.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;This 
component can also read zipped (.zip) and URL-based files.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;See 
Also:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;To write files in MOL or SD format, use the &lt;a href=&quot;javascript:DoLink(&apos;{DC8EE7B0-0620-42FE-944C-B4CD1E79480E}&apos;)&quot;&gt;SD 
Writer&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;To convert a molecule to and from between text properties in CTAB 
format, use &lt;a href=&quot;javascript:DoLink(&apos;{E622FBD9-9FA9-451A-A102-1800B5F28B6D}&apos;)&quot;&gt;Molecule 
to CTAB&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{7D354B65-DDD8-4EA4-83A7-21501A8A6852}&apos;)&quot;&gt;Molecule 
from CTAB&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Other related CTFile format file readers include &lt;a href=&quot;javascript:DoLink(&apos;{169AB4E5-A470-477B-AA65-50464411036C}&apos;)&quot;&gt;RG 
Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{036731AA-0015-4606-9750-7D9D020F21C8}&apos;)&quot;&gt;RXN 
Reader&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{55431CCB-06EA-4741-B95B-633C877E3E9B}&apos;)&quot;&gt;RD 
Reader&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt;</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>Molecule</sci:value>
								<sci:value>Data fields in the SD file will be added to the property fields</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.59</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>3</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Chemistry\Data Access and Manipulation\Readers\SD Reader</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.DataCacheIO.1">
						<sci:component name="Cache Writer" version="2">
							<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>The name of the cache to write, for example: A, 1234 or MyCache.  To create a temporary cacheID use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component.
</sci:help>
								<sci:member>Maximum</sci:member>
								<sci:member>Append</sci:member>
								<sci:member>Scope</sci:member>
								<sci:value>protdesc</sci:value>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The maximum number of data records to write to the cache.</sci:help>
							</sci:arg>
							<sci:arg name="Append" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>If True, append to a currently-existing cache if possible; if False, clear any current contents of the cache</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. &lt;I&gt;Job Only&lt;/I&gt; creates a cache that is visible
only to components in the currently-running protocol, and which is deleted when the protocol finishes.
&lt;I&gt;User Only&lt;/I&gt; creates a cache that is visible to components in any protocol a particular user runs;  
&lt;I&gt;All Users&lt;/I&gt; creates a cache that is visible to any user on the Pipeline Pilot server. 
&lt;P&gt;Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to fully determine a particular cache.&lt;/P&gt;
&lt;P&gt;Since the caches created with scopes &lt;I&gt;User Only&lt;/I&gt; and &lt;I&gt;All Users&lt;/I&gt;
may be accessed by multiple jobs, you should use caution, as problems may arise if two jobs try to write to 
the same shared cache at once. Also, to save disk space, you are responsible for deleting these caches
when finished, using the &lt;I&gt;Delete Cache&lt;/I&gt; component. &lt;/P&gt;
			</sci:help>
								<sci:legalval selected="true">Job Only</sci:legalval>
								<sci:legalval>User Only</sci:legalval>
								<sci:legalval>All Users</sci:legalval>
							</sci:arg>
							<sci:arg name="Create Index for Join" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>If set to True, creates an index for the cache that can be used by subsequent &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  As long as the later Join components use identical settings, the created index will greatly improve the performance of the join.  When set to true, you will also need to update &lt;i&gt;JoinUsing&lt;/i&gt;, &lt;i&gt;JoinUsingListType&lt;/i&gt;, &lt;i&gt;JoinPropertyType&lt;/i&gt;, and &lt;i&gt;IgnoreCase&lt;/i&gt; to match your Join component.</sci:help>
								<sci:member>JoinUsing</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:member>JoinPropertyType</sci:member>
								<sci:member>JoinUsingListType</sci:member>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinUsing" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The name of the property or properties to index for use by &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
								<sci:value>accession</sci:value>
							</sci:arg>
							<sci:arg name="JoinUsingListType" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted for creating a cache index when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: The join will use only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: The join will use the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;
&lt;p&gt;This parameter must match the identically named parameter on the Join component in order to benefit from the created index.&lt;/p&gt;</sci:help>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinPropertyType" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The data type of the &lt;i&gt;JoinUsing&lt;/i&gt; property. This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
								<sci:legalval>IsNumeric</sci:legalval>
								<sci:legalval selected="true">IsText</sci:legalval>
								<sci:legalval>IsDate</sci:legalval>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Additional parameters to control the component behavior.</sci:help>
								<sci:member>Write Globals</sci:member>
								<sci:member>Enable Compression</sci:member>
							</sci:arg>
							<sci:arg name="Write Globals" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>&lt;p&gt;Specifies which globals, if any, are written into the cache.&lt;/p&gt;
&lt;p&gt;The value is an array of top-level global names or global nodes specified using XPath notation. Note that node names should end with a forward slash (/).&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Enable Compression" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
								<sci:help>&lt;p&gt;Specifies if compression of the data should be enabled whenever available.&lt;/p&gt;
&lt;b&gt;Warning:&lt;b&gt; Due to the resulting larger size of the cache files when using uncompressed files, this option should typically only be used for smaller data sets.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
							</sci:arg>
							<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
								<sci:legalval selected="true">Writer</sci:legalval>
								<sci:legalval>Reader</sci:legalval>
								<sci:legalval>Writer/Reader</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Oct 03 14:48:02 2012</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Cache Writer</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -470</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DATABASENODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{674E3781-33EA-42BB-9099-49CB4C3D08E6}</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Cache Writer</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Writes data records to a named cache</sci:value>
								<sci:value>&lt;p&gt;A data cache is place where you can temporarily store data records without losing information.  Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache.  A cache can contain records of different types.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To avoid clashes with other cache names, you can use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to obtain a global with a unique cacheID.  For example, you could have a temporary cacheID identified by MYCACHE and set &lt;i&gt;CacheID&lt;/i&gt; to $(MYCACHE).&lt;/li&gt;
&lt;li&gt;Typically, a cache is scoped to only be visible to component in the currently-running job.  To create caches that outlive a job, and may be seen by other users, use the &lt;I&gt;Scope&lt;/I&gt; parameter.&lt;/li&gt;
&lt;li&gt;Caches can be used with the &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; component to add properties to a separate data stream.  To improve the performance of the join, the cache can be indexed during creation by using the &lt;i&gt;Create Index for Join&lt;/i&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To retrieve data from a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9099-05B44C3D08E6}&apos;)&quot;&gt;Cache Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To join against a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>%VERSION 3%</sci:value>
								<sci:value>741 -489 305 176</sci:value>
								<sci:value>255 255 0</sci:value>
								<sci:value>Protein Descriptors</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>9.0.0.100</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>5</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Writers\Cache Writer</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="No-op" version="2">
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>CustomErrorText</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>PassDataToPort</sci:value>
							</sci:arg>
							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>the port to pass data to</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>No-op</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -820</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.1.1</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>20</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="No-op" version="2">
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>CustomErrorText</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>PassDataToPort</sci:value>
							</sci:arg>
							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>the port to pass data to</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>No-op</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>666 -820</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.1.1</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>21</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="No-op" version="2">
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>CustomErrorText</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>PassDataToPort</sci:value>
							</sci:arg>
							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>the port to pass data to</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>No-op</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>954 -820</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.1.1</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>22</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="No-op" version="2">
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>CustomErrorText</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>PassDataToPort</sci:value>
							</sci:arg>
							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>the port to pass data to</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>No-op</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1242 -820</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.1.1</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>19</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="No-op" version="2">
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>CustomErrorText</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>PassDataToPort</sci:value>
							</sci:arg>
							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>the port to pass data to</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>No-op</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1530 -820</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.1.1</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>18</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="No-op" version="2">
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>CustomErrorText</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>PassDataToPort</sci:value>
							</sci:arg>
							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>the port to pass data to</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>No-op</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1818 -820</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.1.1</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>16</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.MergeProperties.1">
						<sci:component name="Merge One from Each Input" version="2">
							<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;This provides fine control over how multiple values are treated.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
								<sci:legalval selected="true">OverwriteOrCreate</sci:legalval>
								<sci:legalval>OverwriteExisting</sci:legalval>
								<sci:legalval>CreateIfNew</sci:legalval>
								<sci:legalval>AppendOrCreate</sci:legalval>
								<sci:legalval>AppendExisting</sci:legalval>
							</sci:arg>
							<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;This contains a name that is used to prioritize which underlying data record should be kept when merging one from each input.  If not defined, the first record is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="MergeUsing" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
								<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
								<sci:member>MergeUsingListType</sci:member>
								<sci:member>MergePropertyType</sci:member>
								<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:value>A9DF3E7E971B4ECFBEB6121169A7AE01</sci:value>
							</sci:arg>
							<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="hidden" multi="false">
								<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UseFirstDefinedValue: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:legalval>IsNumeric</sci:legalval>
								<sci:legalval selected="true">IsText</sci:legalval>
								<sci:legalval>IsDate</sci:legalval>
								<sci:legalval>IsFingerprint</sci:legalval>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="hidden" multi="false">
								<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;MergeUsing&lt;/i&gt; property values.&lt;/p&gt;
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
								<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
								<sci:member>KeepAllNullString</sci:member>
								<sci:member>PrefixUsingProperty</sci:member>
								<sci:member>Data Are Sorted</sci:member>
								<sci:legalval selected="true">KeepAll</sci:legalval>
								<sci:legalval>KeepFirst</sci:legalval>
							</sci:arg>
							<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="hidden" multi="false">
								<sci:help>&lt;p&gt;This string is used during append using KeepAll &lt;i&gt;MergeBehavior&lt;/i&gt; to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
								<sci:value>None</sci:value>
							</sci:arg>
							<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="hidden" multi="false">
								<sci:help>&lt;p&gt;When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
							</sci:arg>
							<sci:arg name="Data Are Sorted" type="BoolType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>Specifies whether the input data are already sorted by the &lt;i&gt;MergeUsing&lt;/i&gt; properties. If so, then the merge can be done much faster with less memory impact. Use this option only if you are certain that the input data are sorted.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you set &lt;i&gt;Data Are Sorted&lt;/i&gt; to True and the input data are &lt;b&gt;not&lt;/b&gt; sorted, an error is generated.
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OutputFrequency" type="BoolType" required="true" visibility="hidden" multi="false">
								<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual records included in the resulting merged record.&lt;/p&gt;
</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="hidden" multi="false">
								<sci:help>This parameter controls the order in which the input data records are accepted from the various input pipes. 
In this case, we want to take one from each input pipe, going top to bottom, then continue that until all pipes are empty.</sci:help>
								<sci:value>One From Each Input, Top to Bottom</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Apr 19 11:14:47 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Merge One from Each Input</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;MergeUsing&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>if (strlength(trim(parameter(&apos;MergeUsing&apos;, 2))) &gt; 0) then
	&quot;Merge on &quot; . trim(parameter(&apos;MergeUsing&apos;, 2));
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Merge Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>JOINNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{D203139A-526A-4A2A-9FAE-0739291286EA}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2106 -820</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Accept one data record from each input pipeline and merge their properties. Repeat until all input pipelines are finished.</sci:value>
								<sci:value>&lt;p&gt;Incoming data records, one from each pipeline, are merged into a single data record.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;WhenMerging&lt;/i&gt; controls how the properties of each group of input records are combined.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;KeepAllPreferredNodeNode&lt;/i&gt; is used to determine the base data record. If not provided, the data record from the first pipeline is used.&lt;/p&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records that contain the properties being used for merging</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records that do not contain the properties being used for merging</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.73</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
								<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>17</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge One from Each Input</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.CalculateSmiles.1">
						<sci:component name="Molecule from SMILES" version="2">
							<sci:arg name="FromProperty" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the property in the data
which holds the SMILES information</sci:help>
								<sci:member>KekulizeAromaticBonds</sci:member>
								<sci:member>Send Empty SMILES to Fail Port</sci:member>
								<sci:member>Parse RAtoms from CXSMILES</sci:member>
								<sci:value>canonical_smiles</sci:value>
							</sci:arg>
							<sci:arg name="KekulizeAromaticBonds" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Turn aromatic bonds into single/double bonds (set to True) or into aromatic query bonds (set to False). Molecules created with aromatic query bonds are more suitable as queries than as specific molecules. They should not be used as input for property calculators such as Molecular Weight, pKa and others, which require the structure to be uniquely defined.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Send Empty SMILES to Fail Port" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>When set to True, data records with SMILES represented by empty strings or strings with only blank characters are sent to the Fail port. 
&lt;p&gt;
When set to False, empty SMILES strings generate empty molecules with no atoms or bonds.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parse RAtoms from CXSMILES" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>Set this parameter to True to parse any Rgroup information from ChemAxon SMILES extentions (CXSMILES), if present. The extension is separated from the actual SMILES by a space or tab. When the parameter is set to False (the default state) the extension is ignored.
&lt;p&gt;
Examples
&lt;br&gt;
C1O[*]CO[*]1 |$;;_R2;;;_R1$,RG:_R1={C},{N},_R2={C},{N}|
&lt;br&gt;
Cl[*](Br)I |$;_R1;;$,RG:_R1={*CCCC(C*)CC*|
&lt;br&gt;
[*]N[C@@H](C=O)C([*])=O |$_R1;;;;;;_R2;$|
&lt;br&gt;
NC(=N)NCCC[C@H](N[*])C([*])=O |$;;;;;;;;;_R1;;_R2;$|
&lt;p&gt;
The star atoms (unknown atom type) in the SMILES are replaced by the corresponding numbered R atoms from the extension. Any RG fragment information present in the Rgroup extension is ignored.
&lt;p&gt;
Only the Rgroup information in the CXSMILES extension is parsed, any other extension is ignored.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval>Halt</sci:legalval>
								<sci:legalval selected="true">Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval>Halt</sci:legalval>
								<sci:legalval selected="true">Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/chemistry</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Mar 30 15:06:09 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Molecule from SMILES</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Molecule from SMILES</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{AC8262DA-E648-4D24-9CD1-D731A8F53F9D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -1020</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Converts a Daylight SMILES text property to a molecule</sci:value>
								<sci:value>&lt;p&gt;Builds a molecular representation for each data record from the SMILES string found in the property list. If a molecular representation is already present, it is overwritten by the new molecule. The input SMILES string is preserved.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To create a string property containing SMILES data, use &lt;a href=&quot;javascript:DoLink(&apos;{0C60C40A-5189-42DA-A3C0-4EA44BFF7D15}&apos;)&quot;&gt;Molecule to SMILES&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{0C60C40A-5189-42DA-A3C0-4EA44BC27D15}&apos;)&quot;&gt;Canonical Smiles&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To read and write SMILES files, use &lt;a href=&quot;javascript:DoLink(&apos;{60FC1A04-61FD-4D4F-AC3F-A818AB614C78}&apos;)&quot;&gt;SMILES Reader&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{72A5A427-651F-4847-9525-54CB438A7166}&apos;)&quot;&gt;SMILES Writer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Molecule</sci:value>
								<sci:value>Molecular data record created from SMILES string</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.51</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>6</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Chemistry\Data Access and Manipulation\Converters\Molecule From Text\Molecule from SMILES</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="6 only Molecular Fingerprints" version="2">
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval selected="true">False</sci:legalval>
								<sci:legalval>True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
								<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;DD:MM:SS&amp;gt; - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Convert Fingerprints To" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Convert Fingerprints To</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>This option controls the automatic conversion of fingerprint properties into different format</sci:help>
								<sci:member>Fixed Length</sci:member>
								<sci:legalval>Leave As-Is</sci:legalval>
								<sci:legalval>Fixed-Length Array of Bits</sci:legalval>
								<sci:legalval selected="true">Fixed-Length Array of Counts</sci:legalval>
							</sci:arg>
							<sci:arg name="Fixed Length" type="LongType" required="false" visibility="visible" multi="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Fixed Length</sci:value>
									</sci:mpropval>
								</sci:metaproplist>
								<sci:help>If Convert Fingerprints To is given a fixed-length type, then this is the fixed-length.  Bits larger than this length are folded into this range using a mod operation.</sci:help>
								<sci:value>1024</sci:value>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Final Model Ion Fingerprints</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>CalculatorNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{189EB20A-2776-FE4A-9E57-6CC84D7C92A8}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -1195</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>6 only Molecular Fingerprints</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.100.11</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>peter</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Sep 11 09:45:36 2019</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>15</sci:value>
							</sci:arg>
							<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>OriginalPackage</sci:help>
								<sci:value>scitegic/coreutils</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Unknown</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol>
							<sci:data object="SciTegic.CalculateECFP.2">
								<sci:component name="Molecular Fingerprints" version="2">
									<sci:arg name="Type" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>The type of fingerprint to generate:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;ExtendedConnectivity&lt;/b&gt;: Generates higher-order features.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Path&lt;/b&gt;: Generates higher-order features.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;AtomEnvironment&lt;/b&gt;: Generates higher-order features using a method developed by Bender &lt;i&gt;et al&lt;/i&gt;.  This generates a String Fingerprint.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;HashedAtomEnvironment&lt;/b&gt;: Uses a hash code to create an Integer Fingerprint representation of the &lt;b&gt;AtomEnvironment&lt;/b&gt; fingerprints for ease of use (e.g. learned models, etc.).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;UserKeys&lt;/b&gt;:  Fingerprints derived from user-defined substructures. These substructure queries are stored in MOL or SD query format in &quot;data\Queries\UserQueries&quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on Extended-Connectivity fingerprints, see Rogers, D. and Hahn, M, Extended-Connectivity Fingerprints. J. Chem. Inf. Model. 2010, 50(5), 742-754&lt;/li&gt;
&lt;li&gt;For more information on AtomEnvironment fingerprints, see Bender, A., Mussa, H.Y., and Glen, R.C., Molecular Similarity Searching Using Atom Environments, Information-Based Feature Selection, and a Naive Bayesian Classifier. J. Chem. Inf. Comput. Sci. 2004, 44, 170-178&lt;/li&gt;
&lt;li&gt;The &lt;b&gt;MDLPublicKeys&lt;/b&gt; fingerprint previously found here is a native Pipeline Pilot implementation of the MDL fingerprint which does not always match the results obtained from legacy-MDL products such as the Direct Cartridge.  This fingerprint has been deprecated in favor of an implementation using MDL libraries which is available in the &lt;a href=&quot;javascript:DoLink(&apos;{6352F5A7-9C1C-4934-930E-F96B1E785E92}&apos;)&quot;&gt;MDL Key Fingerprints&lt;/a&gt; component as the &lt;b&gt;MDL2DKeys166&lt;/b&gt; descriptor.  &lt;b&gt;MDLPublicKeys&lt;/b&gt; is now available only as a calculable property (i.e. pilotscript: calculate(&quot;MDLPublicKeys&quot;);)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">ExtendedConnectivity</sci:legalval>
										<sci:legalval>Path</sci:legalval>
										<sci:legalval>AtomEnvironment</sci:legalval>
										<sci:legalval>HashedAtomEnvironment</sci:legalval>
										<sci:legalval>UserKeys</sci:legalval>
									</sci:arg>
									<sci:arg name="AtomAbstraction" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Method used to assign initial category for atom classes.
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;AtomType&lt;/b&gt;: (First letter: &quot;E&quot;) Uses atom type, charge and hybridization.&lt;/li&gt;

&lt;li&gt;&lt;b&gt;ALogPCode&lt;/b&gt;: (First letter: &quot;L&quot;) Uses ALogP category of atoms.&lt;/li&gt;

&lt;li&gt;&lt;b&gt;FunctionalClass&lt;/b&gt;: (First letter: &quot;F&quot;) Uses the following groups:
&lt;ul&gt;
&lt;li&gt;H-bond acceptor&lt;/li&gt;
&lt;li&gt;H-bond donor&lt;/li&gt;
&lt;li&gt;Positive ionizable&lt;/li&gt;
&lt;li&gt;Negative ionizable&lt;/li&gt; 
&lt;li&gt;Halogen&lt;/li&gt;
&lt;li&gt;Aromatic&lt;/li&gt;
&lt;li&gt;None of the above&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Sybyl&lt;/b&gt;: (First letter: &quot;S&quot;) Uses the Sybyl atom types used in the Tripos Mol2 File Format.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;UserAtomTypes&lt;/b&gt;: (First letter: &quot;U&quot;) Assumes that the property &lt;b&gt;UserAtomTypes&lt;/b&gt; is defined on the molecule, and contains an array of integers, one for each atom in the molecule.  The i&apos;th value in the array is the user atom type for the i&apos;th atom in the molecule.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Reaction&lt;/b&gt;: (First letter: &quot;R&quot;) Uses type, charge, hybridization, reactant or product, and &quot;reaction site&quot; information. Atoms are in the reaction site if they are changed by the reaction or attached to bonds that change. This information is perceived from the the reaction&apos;s atom-atom mappings. Only reaction site atoms are selected to be bit centers but atoms outside the site can be included for higher-distance bits. Can only be used for reaction inputs.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;ReactionSiteOnly&lt;/b&gt;:  (First letter: &quot;Q&quot;) Similar to &lt;b&gt;Reaction&lt;/b&gt; (see above). Only reaction site atoms are selected to be bit centers and atoms outside the reaction site are &lt;i&gt;excluded&lt;/i&gt; from any higher-distance bits. Can only be used for reaction inputs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Information about Sybyl atom types is available from Tripos:
&lt;a href=&quot;javascript:DoLink(&apos;http://www.tripos.com/mol2/atom_types.html&apos;)&quot;&gt;http://www.tripos.com/mol2/atom_types.html&lt;/a&gt;.
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;This parameter does not apply to MDLPublicKeys or UserKeys&apos;);
Parameter(&apos;Type&apos;) ne &apos;MDLPublicKeys&apos; and Parameter(&apos;Type&apos;) ne &apos;UserKeys&apos;</sci:enabledscript>
										<sci:legalval>FunctionalClass</sci:legalval>
										<sci:legalval>AtomType</sci:legalval>
										<sci:legalval>ALogPCode</sci:legalval>
										<sci:legalval selected="true">Sybyl</sci:legalval>
										<sci:legalval>UserAtomTypes</sci:legalval>
										<sci:legalval>Reaction</sci:legalval>
										<sci:legalval>ReactionSiteOnly</sci:legalval>
									</sci:arg>
									<sci:arg name="MaximumDistance" type="LongType" required="true" visibility="visible" multi="false">
										<sci:help>The maximum bond distance in the substructures represented in the fingerprint.
&lt;ul&gt;
&lt;li&gt;For extended connectivity fingerprints, this is the diameter of the neighborhood surrounding the central atom, and should be an even number.&lt;/li&gt; 
&lt;li&gt;For path fingerprints, this is the maximum number of bonds in the paths.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;This parameter does not apply to MDLPublicKeys or UserKeys&apos;);
Parameter(&apos;Type&apos;) ne &apos;MDLPublicKeys&apos; and Parameter(&apos;Type&apos;) ne &apos;UserKeys&apos;</sci:enabledscript>
										<sci:value>6</sci:value>
									</sci:arg>
									<sci:arg name="OutputType" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Controls the way the fingerprint is presented:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Fingerprint&lt;/b&gt;: A list of the features present in the molecule, with duplicates removed.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Counts&lt;/b&gt;: A list of the features present in the molecule, with duplicates retained; if a feature occurs more than once in a molecule, that bit value is included more than once in the output list.&lt;/li&gt;
&lt;/ul&gt;

</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;This parameter does not apply to MDLPublicKeys or UserKeys&apos;);
Parameter(&apos;Type&apos;) ne &apos;MDLPublicKeys&apos; and Parameter(&apos;Type&apos;) ne &apos;UserKeys&apos;</sci:enabledscript>
										<sci:legalvalscript>#legalVals := &apos;Fingerprint&apos;;
if parameter(&apos;Type&apos;) ne &apos;MDLPublicKeys&apos; then
	append(#legalVals, &apos;Counts&apos;);
end if;
	
setLegalValues(#legalVals);</sci:legalvalscript>
										<sci:value>Counts</sci:value>
									</sci:arg>
									<sci:arg name="Options" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Options for the fingerprint calculation. &lt;b&gt;IncludeStereo&lt;/b&gt; changes the fingerprint. The other options cause the calculation of other properties with associated information. The options are:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;IncludeStereo&lt;/b&gt;: (#S) include information from stereoatoms into fingerprint calculation.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;OutputBitDistance&lt;/b&gt;: (#D) output an array with the length or diameter of each bit.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;OutputBitSubstructure&lt;/b&gt;: (#C) output an array with an example of SMARTS of the fragment.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;OutputBitExactSubstructure&lt;/b&gt;: (#X) output an array with the SMARTS of the fragment, in this molecule.  (This is slower than OutputBitSubstructure, since the former can cache the first example it finds in a data set, and re-use it.)&lt;/li&gt;
&lt;li&gt;&lt;b&gt;OutputBitAllAtoms&lt;/b&gt;: (#A) output an array with the set of all atoms involved with a feature anywhere in the molecule.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;OutputBitFeatureAtoms&lt;/b&gt;: (#F) output an array with the set of atoms showing one example of the feature bit.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;OutputBitCentralAtom&lt;/b&gt;: (#Z) output an array with the number of the central atom for each bit.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;AddBitsToCentralAtom&lt;/b&gt;: (#P) output, to each central atoms&apos;s property collection, a list of its generated bits. (The atom property name is the name of the fingerprint.)&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
										<sci:legalval>IncludeStereo</sci:legalval>
										<sci:legalval>OutputBitDistance</sci:legalval>
										<sci:legalval>OutputBitSubstructure</sci:legalval>
										<sci:legalval>OutputBitExactSubstructure</sci:legalval>
										<sci:legalval>OutputBitAllAtoms</sci:legalval>
										<sci:legalval>OutputBitFeatureAtoms</sci:legalval>
										<sci:legalval>OutputBitCentralAtom</sci:legalval>
										<sci:legalval>AddBitsToCentralAtom</sci:legalval>
									</sci:arg>
									<sci:arg name="UserKeyDirectory" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>If given, use this directory (instead of &quot;data/Queries/UserQueries/&quot;) for the source of the user keys.  The name of the directory must end in a slash or backslash.

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;&lt;li&gt;The substructure queries defined here must be in either MOL or SD query format.&lt;/li&gt;
&lt;li&gt;The &quot;ReadQueryInfo&quot; parameter on the internal SD reader is enabled to allow the import of any non-CTAB atom and bond tests persisted in the property block.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
									</sci:arg>
									<sci:arg name="ForReactionsInclude" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Determines which part of inputs to examine.</sci:help>
										<sci:legalval selected="true">ReactantsAndProducts</sci:legalval>
										<sci:legalval>ReactantsOnly</sci:legalval>
										<sci:legalval>ProductsOnly</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/chemistry</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue May 21 13:30:28 2013</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>SCFC6</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Molecular Fingerprints</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>CALCULATORNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{C5873CBC-62ED-4F93-A565-13027A5B3512}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Calculates a variety of molecular and reaction fingerprints</sci:value>
										<sci:value>Uses one the following algorithms to calculate fingerprints on input molecules and reactions:
&lt;ul&gt;
&lt;li&gt;SciTegic extended-connectivity fingerprints
&lt;li&gt;Daylight-style path fingerprints
&lt;li&gt;Fingerprints derived from user-defined substructures. These substructure queries are stored in MOL or SD query format in &quot;data\Queries\UserQueries&quot;.
&lt;/ul&gt; 

For both the extended-connectivity and path fingerprints, a number of methods are available to define the atom abstraction used to generate the initial atom code. You should also specify the maximum path distance (such as number of bonds) that will be used to index an individual fragment.




</sci:value>
										<sci:value>Molecule</sci:value>
										<sci:value/>
										<sci:value>Molecule</sci:value>
										<sci:value>Records augmented with the molecular fingerprint property</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>9.0.1.28</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>17</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Chemistry\Property Calculators\Structural\Molecular Fingerprints</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.CalculateFP25D.1">
								<sci:component name="Molecular Pharmacophore Fingerprints" version="2">
									<sci:arg name="Size" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Number of features: pairs, triplets or quartets</sci:help>
										<sci:legalval selected="true">Pairs</sci:legalval>
										<sci:legalval>Triplets</sci:legalval>
										<sci:legalval>Quartets</sci:legalval>
									</sci:arg>
									<sci:arg name="MolecularFeatures" type="StringType" required="true" visibility="visible" multi="true">
										<sci:help>Molecular features to perceive and include in the pharmacophore keys</sci:help>
										<sci:legalval selected="true">HBondAcceptor</sci:legalval>
										<sci:legalval selected="true">HBondDonor</sci:legalval>
										<sci:legalval selected="true">PositiveCharge</sci:legalval>
										<sci:legalval selected="true">NegativeCharge</sci:legalval>
										<sci:legalval selected="true">PositiveIonizable</sci:legalval>
										<sci:legalval selected="true">NegativeIonizable</sci:legalval>
										<sci:legalval selected="true">Hydrophobe</sci:legalval>
										<sci:legalval selected="true">AromaticRing</sci:legalval>
										<sci:legalval selected="true">AttachmentPoint</sci:legalval>
									</sci:arg>
									<sci:arg name="ShortestPathInfo" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Level of detail about the shortest path between two features</sci:help>
										<sci:legalval>NumBondsOnly</sci:legalval>
										<sci:legalval selected="true">NumBondsAndNumRotBonds</sci:legalval>
										<sci:legalval>NumBondsAndBondTypes</sci:legalval>
									</sci:arg>
									<sci:arg name="MinimumDistance" type="LongType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Minimum number of bonds between two molecular features to be included in a pharmacophore key</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="MaximumDistance" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>Maximum number of bonds between two molecular features to be included in a pharmacophore key</sci:help>
										<sci:value>15</sci:value>
									</sci:arg>
									<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:member>OutputType</sci:member>
										<sci:member>MaxNumberPharmacophores</sci:member>
										<sci:member>OutputFeatureInfo</sci:member>
										<sci:member>MustHaveAttachmentPoint</sci:member>
										<sci:member>Hydrophobic Factor</sci:member>
										<sci:member>Allow NonHydrophobic Atoms in Hydrophobic Rings</sci:member>
									</sci:arg>
									<sci:arg name="OutputType" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Controls the way the fingerprint is presented:

 - Fingerprint: A list of the features present in the molecule, with duplicates removed.

 - Counts: A list of the features present in the molecule, with duplicates retained; if a feature occurs more than once in a molecule, that bit value is included more than once in the output list.

</sci:help>
										<sci:legalval selected="true">Fingerprints</sci:legalval>
										<sci:legalval>Counts</sci:legalval>
									</sci:arg>
									<sci:arg name="MaxNumberPharmacophores" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>Maximum number of keys to be generated for an individual molecule</sci:help>
										<sci:value>5000</sci:value>
									</sci:arg>
									<sci:arg name="OutputFeatureInfo" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>Output detailed information about the molecular features perceived in the molecule and the pharmacophore pairs, triplets or quartets generated</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="MustHaveAttachmentPoint" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>Whether or not to impose the restriction that any pharmacophore must include an attachment point feature as at least one of the features.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Hydrophobic Factor" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Factor to use in the perception of hydrophobic features. A group of atoms is classified as a hydrophobic feature if their surface area is equal or greater than the area of a methyl group multiplied by this factor. The default is 1.50. </sci:help>
										<sci:enabledscript>contains(parameter(&quot;MolecularFeatures&quot;), &quot;Hydrophobe&quot;)</sci:enabledscript>
										<sci:value>1.50</sci:value>
									</sci:arg>
									<sci:arg name="Allow NonHydrophobic Atoms in Hydrophobic Rings" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>When set to True, the perception of hydrophobic rings allows the presence of atoms with low hydrophobic factors, as long as the total hydrophobicity of the ring is high enough. Otherwise, the presence of even one heteroatom or other atom with low hydrophobicity disqualifies the ring as hydrophobic.</sci:help>
										<sci:enabledscript>contains(parameter(&quot;MolecularFeatures&quot;), &quot;Hydrophobe&quot;)</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Comment</sci:help>
										<sci:value>Calculates a number of different molecular fingerprints, including extended-connectivity fingerprints, daylight-style path fingerprints, and MDL public key fingerprints.</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/chemistry</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Aug 19 13:06:35 2014</sci:value>
									</sci:arg>
									<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Component Usage</sci:help>
										<sci:value>&apos;Type&apos; gives the type of fingerprint we wish to calculate:
    ExtendedConnectivity generates extended-connectivity fingerprints
    Path generates Daylight-style path-based fingerprints
    MDLPublicKeys generates the MDL Public key fingerprints
    UserKeys generates fingerprints derived from user-defined substructures
&apos;AtomAbstraction&apos; is used by ExtendedConnectivity and Path fingerprints, and defines the abstraction used to generate the initial atom-based codes.
&apos;MaximumDistance&apos; is used by ExtendedConnectivity and Path fingerprints, and gives either the diameter of the neighborhoods considered (if ExtendedConnectivity type) or of the paths (if Path type).

Input            - Molecule data records
Output Pass - Molecule data records augmented with fingerprint information</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Molecular Pharmacophore Fingerprints</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Molecular Fingerprints</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>CALCULATORNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{CD9BD04A-BB3D-405B-9F96-4BD83AB7814D}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>378 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Calculates molecular pharmacophore fingerprints for the input molecules</sci:value>
										<sci:value>Calculate pharmacophore fingerprints using topological (bond) distances. Pharmacophores consist of pairs, triplets or quartets of molecular features and the corresponding bond distances among them.
&lt;p&gt;
Molecular features include:
&lt;ul&gt;
&lt;li&gt;HBond Acceptor
&lt;li&gt;HBond Donor
&lt;li&gt;Positive Charge
&lt;li&gt;Negative Charge
&lt;li&gt;Positive Ionizable
&lt;li&gt;Negative Ionizable
&lt;li&gt;Aromatic Ring
&lt;li&gt;Hydrophobic
&lt;li&gt;AttachmentPoint
&lt;/ul&gt;
&lt;p&gt;
The output type can be either fingerprints (each individual pharmacophore is counted only once) or counts (each individual pharmacophore is counted as many times as it appears in the molecule.
&lt;p&gt;
Pharmacophore keys can contain only information about the number of bonds in the path between two molecular features, or can include also the number of rotatable bonds in the path or the types of bonds in the path (single, double, triple, ring, aromatic)
&lt;p&gt;
The name of the calculated pharmacophore keys encodes the type of fingerprint:
&lt;ul&gt;
&lt;li&gt;PHFP_2, PHFP_3, PHFP_4: pairs, triplets or quartets including only number of bonds in the shortest path between features
&lt;li&gt;PHRFP_2, PHRFP_3, PHRFP_4: pairs, triplets or quartets including number of bonds and number of rotatable bonds in the path
&lt;li&gt;PHPFP_2, PHPFP_3, PHPFP_4: pairs, triplets or quartets including  number of bonds and types of bonds in the path
&lt;/ul&gt;
The counts have similar names, but with &apos;FP&apos; replaced by &apos;FC&apos;. For example, PHFC_3 represents counts of triplets with information only about the number of bonds in the path.





</sci:value>
										<sci:value>Molecule</sci:value>
										<sci:value/>
										<sci:value>Molecule</sci:value>
										<sci:value>Records augmented with the molecular pharmacophore fingerprint property</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>9.5.0.547</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>18</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Chemistry\Property Calculators\Structural\Molecular Pharmacophore Fingerprints</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.CalculateFP25D.1">
								<sci:component name="Molecular Pharmacophore Fingerprints" version="2">
									<sci:arg name="Size" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Number of features: pairs, triplets or quartets</sci:help>
										<sci:legalval selected="true">Pairs</sci:legalval>
										<sci:legalval>Triplets</sci:legalval>
										<sci:legalval>Quartets</sci:legalval>
									</sci:arg>
									<sci:arg name="MolecularFeatures" type="StringType" required="true" visibility="visible" multi="true">
										<sci:help>Molecular features to perceive and include in the pharmacophore keys</sci:help>
										<sci:legalval selected="true">HBondAcceptor</sci:legalval>
										<sci:legalval selected="true">HBondDonor</sci:legalval>
										<sci:legalval selected="true">PositiveCharge</sci:legalval>
										<sci:legalval selected="true">NegativeCharge</sci:legalval>
										<sci:legalval selected="true">PositiveIonizable</sci:legalval>
										<sci:legalval selected="true">NegativeIonizable</sci:legalval>
										<sci:legalval selected="true">Hydrophobe</sci:legalval>
										<sci:legalval selected="true">AromaticRing</sci:legalval>
										<sci:legalval selected="true">AttachmentPoint</sci:legalval>
									</sci:arg>
									<sci:arg name="ShortestPathInfo" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Level of detail about the shortest path between two features</sci:help>
										<sci:legalval>NumBondsOnly</sci:legalval>
										<sci:legalval>NumBondsAndNumRotBonds</sci:legalval>
										<sci:legalval selected="true">NumBondsAndBondTypes</sci:legalval>
									</sci:arg>
									<sci:arg name="MinimumDistance" type="LongType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Minimum number of bonds between two molecular features to be included in a pharmacophore key</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="MaximumDistance" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>Maximum number of bonds between two molecular features to be included in a pharmacophore key</sci:help>
										<sci:value>15</sci:value>
									</sci:arg>
									<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:member>OutputType</sci:member>
										<sci:member>MaxNumberPharmacophores</sci:member>
										<sci:member>OutputFeatureInfo</sci:member>
										<sci:member>MustHaveAttachmentPoint</sci:member>
										<sci:member>Hydrophobic Factor</sci:member>
										<sci:member>Allow NonHydrophobic Atoms in Hydrophobic Rings</sci:member>
									</sci:arg>
									<sci:arg name="OutputType" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Controls the way the fingerprint is presented:

 - Fingerprint: A list of the features present in the molecule, with duplicates removed.

 - Counts: A list of the features present in the molecule, with duplicates retained; if a feature occurs more than once in a molecule, that bit value is included more than once in the output list.

</sci:help>
										<sci:legalval>Fingerprints</sci:legalval>
										<sci:legalval selected="true">Counts</sci:legalval>
									</sci:arg>
									<sci:arg name="MaxNumberPharmacophores" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>Maximum number of keys to be generated for an individual molecule</sci:help>
										<sci:value>5000</sci:value>
									</sci:arg>
									<sci:arg name="OutputFeatureInfo" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>Output detailed information about the molecular features perceived in the molecule and the pharmacophore pairs, triplets or quartets generated</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="MustHaveAttachmentPoint" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>Whether or not to impose the restriction that any pharmacophore must include an attachment point feature as at least one of the features.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Hydrophobic Factor" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Factor to use in the perception of hydrophobic features. A group of atoms is classified as a hydrophobic feature if their surface area is equal or greater than the area of a methyl group multiplied by this factor. The default is 1.50. </sci:help>
										<sci:enabledscript>contains(parameter(&quot;MolecularFeatures&quot;), &quot;Hydrophobe&quot;)</sci:enabledscript>
										<sci:value>1.50</sci:value>
									</sci:arg>
									<sci:arg name="Allow NonHydrophobic Atoms in Hydrophobic Rings" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>When set to True, the perception of hydrophobic rings allows the presence of atoms with low hydrophobic factors, as long as the total hydrophobicity of the ring is high enough. Otherwise, the presence of even one heteroatom or other atom with low hydrophobicity disqualifies the ring as hydrophobic.</sci:help>
										<sci:enabledscript>contains(parameter(&quot;MolecularFeatures&quot;), &quot;Hydrophobe&quot;)</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentComment" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Comment</sci:help>
										<sci:value>Calculates a number of different molecular fingerprints, including extended-connectivity fingerprints, daylight-style path fingerprints, and MDL public key fingerprints.</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/chemistry</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Aug 19 13:06:35 2014</sci:value>
									</sci:arg>
									<sci:arg name="ComponentUsage" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Component Usage</sci:help>
										<sci:value>&apos;Type&apos; gives the type of fingerprint we wish to calculate:
    ExtendedConnectivity generates extended-connectivity fingerprints
    Path generates Daylight-style path-based fingerprints
    MDLPublicKeys generates the MDL Public key fingerprints
    UserKeys generates fingerprints derived from user-defined substructures
&apos;AtomAbstraction&apos; is used by ExtendedConnectivity and Path fingerprints, and defines the abstraction used to generate the initial atom-based codes.
&apos;MaximumDistance&apos; is used by ExtendedConnectivity and Path fingerprints, and gives either the diameter of the neighborhoods considered (if ExtendedConnectivity type) or of the paths (if Path type).

Input            - Molecule data records
Output Pass - Molecule data records augmented with fingerprint information</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Molecular Pharmacophore Fingerprints</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Molecular Fingerprints</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>CALCULATORNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{CD9BD04A-BB3D-405B-9F96-4BD83AB7814D}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>666 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Calculates molecular pharmacophore fingerprints for the input molecules</sci:value>
										<sci:value>Calculate pharmacophore fingerprints using topological (bond) distances. Pharmacophores consist of pairs, triplets or quartets of molecular features and the corresponding bond distances among them.
&lt;p&gt;
Molecular features include:
&lt;ul&gt;
&lt;li&gt;HBond Acceptor
&lt;li&gt;HBond Donor
&lt;li&gt;Positive Charge
&lt;li&gt;Negative Charge
&lt;li&gt;Positive Ionizable
&lt;li&gt;Negative Ionizable
&lt;li&gt;Aromatic Ring
&lt;li&gt;Hydrophobic
&lt;li&gt;AttachmentPoint
&lt;/ul&gt;
&lt;p&gt;
The output type can be either fingerprints (each individual pharmacophore is counted only once) or counts (each individual pharmacophore is counted as many times as it appears in the molecule.
&lt;p&gt;
Pharmacophore keys can contain only information about the number of bonds in the path between two molecular features, or can include also the number of rotatable bonds in the path or the types of bonds in the path (single, double, triple, ring, aromatic)
&lt;p&gt;
The name of the calculated pharmacophore keys encodes the type of fingerprint:
&lt;ul&gt;
&lt;li&gt;PHFP_2, PHFP_3, PHFP_4: pairs, triplets or quartets including only number of bonds in the shortest path between features
&lt;li&gt;PHRFP_2, PHRFP_3, PHRFP_4: pairs, triplets or quartets including number of bonds and number of rotatable bonds in the path
&lt;li&gt;PHPFP_2, PHPFP_3, PHPFP_4: pairs, triplets or quartets including  number of bonds and types of bonds in the path
&lt;/ul&gt;
The counts have similar names, but with &apos;FP&apos; replaced by &apos;FC&apos;. For example, PHFC_3 represents counts of triplets with information only about the number of bonds in the path.





</sci:value>
										<sci:value>Molecule</sci:value>
										<sci:value/>
										<sci:value>Molecule</sci:value>
										<sci:value>Records augmented with the molecular pharmacophore fingerprint property</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>9.5.0.547</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>19</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Chemistry\Property Calculators\Structural\Molecular Pharmacophore Fingerprints</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.CalculateMDLKeysNative.1">
								<sci:component name="MDL Key Fingerprints" version="2">
									<sci:arg name="Output" type="StringType" required="true" visibility="visible" multi="true">
										<sci:help>Type of output to generate:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;MDL2DKeys960:&lt;/b&gt; Fingerprint bitset of 960 molecule substructure/similarity search keys&lt;/li&gt;
&lt;li&gt;&lt;b&gt;MDL2DKeys166:&lt;/b&gt; Fingerprint bitset of 166 publicly defined molecule keys, a subset of MDL2DKeys960&lt;/li&gt;
&lt;li&gt;&lt;b&gt;MDLRxnCenterKeys:&lt;/b&gt; Fingerprint bitset of 654 reaction substructure/similarity search keys encoding only the reacting center (transform) features&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:legalval type="LongFingerprintType" selected="true">MDL2DKeys960</sci:legalval>
										<sci:legalval type="LongFingerprintType">MDL2DKeys166</sci:legalval>
										<sci:legalval type="LongFingerprintType">MDLRxnCenterKeys</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{6CC6EEFE-0CC7-40F9-919D-E6135D529532}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>MDL Key Fingerprints</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>CALCULATORNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>954 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Computes MDL keys from an input molecule or reaction</sci:value>
										<sci:value>Calculates molecule or reaction fingerprints used by the BIOVIA Direct Data Cartridge:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;MDL2DKeys960:&lt;/b&gt; Fingerprint bitset of 960 molecule substructure/similarity search keys&lt;/li&gt;
&lt;li&gt;&lt;b&gt;MDL2DKeys166:&lt;/b&gt; Fingerprint bitset of 166 publicly defined molecule keys, a subset of MDL2DKeys960&lt;/li&gt;
&lt;li&gt;&lt;b&gt;MDLRxnCenterKeys:&lt;/b&gt; Fingerprint bitset of 654 reaction substructure/similarity search keys encoding only the reacting center (transform) features&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;MDL2DKeys166&lt;/b&gt; is a replacement for the deprecated &lt;b&gt;MDLPublicKeys&lt;/b&gt; fingerprint which was previously available in the &lt;a href=&quot;javascript:DoLink(&apos;{C5873CBC-62ED-4F93-A565-13027A5B3512}&apos;)&quot;&gt;Molecular Fingerprints&lt;/a&gt; component and now available only as a calculable property. &lt;b&gt;MDL2DKeys166&lt;/b&gt; generates the actual MDL public keys, &lt;b&gt;MDLPublicKeys&lt;/b&gt; uses a native-Pipeline Pilot implementation to generate an approximation of these keys.&lt;/li&gt;
&lt;li&gt;For more information on MDL keys see: Durant J. L.; Leland B. A.; Henry D. R.; Nourse J. G. Reoptimization of MDL Keys for Use in Drug Discovery.&lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;2002&lt;/b&gt;, &lt;i&gt;42&lt;/i&gt;, 1273-1280.&lt;/li&gt;
&lt;li&gt;More details on MDL key technology is available at here: &lt;a href=&quot;javascript:DoLink(&apos;http://accelrys.com/products/pdf/keys-to-keyset-technology.pdf&apos;)&quot;&gt;MDL Keys whitepaper&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
										<sci:value>Generic,Molecule</sci:value>
										<sci:value>Input molecule or reaction</sci:value>
										<sci:value>Generic,Molecule</sci:value>
										<sci:value>Data records augmented with a property containing the requested fingerprints</sci:value>
										<sci:value>Generic,Molecule</sci:value>
										<sci:value>Data records that could not have the fingerprints computed</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>17.2.0.0</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>6</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/chemistry</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jul 11 11:26:46 2016</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Chemistry\Property Calculators\Structural\MDL Key Fingerprints</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="MDL2DKeys960|Category">Fingerprints</sci:propval>
									<sci:propval name="MDL2DKeys166|Category">Fingerprints</sci:propval>
									<sci:propval name="MDLRxnCenterKeys|Category">Fingerprints</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.PropertyCalculator.1">
								<sci:component name="Calculate Properties" version="2">
									<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>The properties to learn from: 
  &apos;AllPropertiesOnFirstData&apos; uses all those that are found
on the first data object;
  &apos;CalculablePropertiesOnFirstData&apos; uses all those that are
found on the first data that can be calculated;
  &apos;UserSet&apos; takes the list of properties from the parameter
UserSet.  Property ranges can be given by giving the first
and last property in the range separated by a hyphen; 
properties can be referred to by index using the word &quot;Column&quot;
followed by the index, i.e., Column3-Column10.
  &apos;PointInfoText&apos; takes a copy of a previously-generated 
Calculate Properties state in either the globals or the parameter
PointInfoText. The restores the calculator to behave as it did
when the text was originally generated.  This is useful for connecting
Learn components with Model components.
</sci:help>
										<sci:member>IgnoreProperties</sci:member>
										<sci:member>UserSet</sci:member>
										<sci:member>PredefinedSet</sci:member>
										<sci:legalval>AllPropertiesOnFirstData</sci:legalval>
										<sci:legalval>CalculablePropertiesOnFirstData</sci:legalval>
										<sci:legalval selected="true">PredefinedSet</sci:legalval>
										<sci:legalval>UserSet</sci:legalval>
										<sci:legalval>PointInfoText</sci:legalval>
									</sci:arg>
									<sci:arg name="PredefinedSet" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>A predefined set of properties to use for learning</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to PredefinedSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;PredefinedSet&apos;</sci:enabledscript>
										<sci:legalval selected="true">MDL2DKeys960</sci:legalval>
										<sci:legalval>MDL2DKeys166</sci:legalval>
										<sci:legalval>MDLRxnCenterKeys</sci:legalval>
										<sci:legalval>PHFP_2</sci:legalval>
										<sci:legalval>PHFP_3</sci:legalval>
										<sci:legalval>PHFP_4</sci:legalval>
										<sci:legalval selected="true">PHRFP_2</sci:legalval>
										<sci:legalval>PHRFP_3</sci:legalval>
										<sci:legalval>PHRFP_4</sci:legalval>
										<sci:legalval>PHPFP_2</sci:legalval>
										<sci:legalval>PHPFP_3</sci:legalval>
										<sci:legalval>PHPFP_4</sci:legalval>
										<sci:legalval>PHFC_2</sci:legalval>
										<sci:legalval>PHFC_3</sci:legalval>
										<sci:legalval>PHFC_4</sci:legalval>
										<sci:legalval selected="true">PHPFC_2</sci:legalval>
										<sci:legalval>PHPFC_3</sci:legalval>
										<sci:legalval>PHPFC_4</sci:legalval>
										<sci:legalval>PHRFC_2</sci:legalval>
										<sci:legalval>PHRFC_3</sci:legalval>
										<sci:legalval>PHRFC_4</sci:legalval>
										<sci:legalval>FCFC_6</sci:legalval>
										<sci:legalval>ECFC_6</sci:legalval>
										<sci:legalval>LCFC_6</sci:legalval>
										<sci:legalval selected="true">SCFC_6</sci:legalval>
										<sci:legalval>FPFC_6</sci:legalval>
										<sci:legalval>EPFC_6</sci:legalval>
										<sci:legalval>LPFC_6</sci:legalval>
										<sci:legalval>SPFC_6</sci:legalval>
										<sci:legalval>FEFC_6</sci:legalval>
										<sci:legalval>EEFC_6</sci:legalval>
										<sci:legalval>LEFC_6</sci:legalval>
										<sci:legalval>SEFC_6</sci:legalval>
										<sci:legalval>FHFC_6</sci:legalval>
										<sci:legalval>EHFC_6</sci:legalval>
										<sci:legalval>LHFC_6</sci:legalval>
										<sci:legalval>SHFC_6</sci:legalval>
										<sci:legalval>FCFP_6</sci:legalval>
										<sci:legalval>ECFP_6</sci:legalval>
										<sci:legalval>LCFP_6</sci:legalval>
										<sci:legalval>SCFP_6</sci:legalval>
										<sci:legalval>FPFP_6</sci:legalval>
										<sci:legalval>EPFP_6</sci:legalval>
										<sci:legalval>LPFP_6</sci:legalval>
										<sci:legalval>SPFP_6</sci:legalval>
										<sci:legalval>FEFP_6</sci:legalval>
										<sci:legalval>EEFP_6</sci:legalval>
										<sci:legalval>LEFP_6</sci:legalval>
										<sci:legalval>SEFP_6</sci:legalval>
										<sci:legalval>FHFP_6</sci:legalval>
										<sci:legalval>EHFP_6</sci:legalval>
										<sci:legalval>LHFP_6</sci:legalval>
										<sci:legalval>SHFP_6</sci:legalval>
									</sci:arg>
									<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma-separated list of properties to use for calculation. 
&lt;p&gt;If an item on the list contains a hyphen (e.g., &quot;X1-X5&quot;), and the properties on either side of the hyphen (e.g., &quot;X1&quot;, &quot;X5&quot;) are defined on the first data record, then all properties in that range are included. Note that the properties within the specified range are determined by the order of properties in the property list. Thus, if properties in the property list are in the following order: X1, X2, X5, X3, X4, X6, then the range &quot;X1-X5&quot; will only include properties X1, X2, and X5.&lt;/p&gt;
</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;UserSet&apos;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma-separated list of properties to ignore.  This is used, for example, if UseProperties is AllPropertiesOnFirstData, but there is a small set of undesirable properties you don&apos;t wish to use but can&apos;t remove (i.e., record names)</sci:help>
									</sci:arg>
									<sci:arg name="Convert Fingerprints To" type="LinkParentParameterType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:metaproplist>
											<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">StringType</sci:propval>
										</sci:metaproplist>
										<sci:help>This option controls the automatic conversion of fingerprint properties into different format</sci:help>
										<sci:member>Fixed Length</sci:member>
										<sci:value>Convert Fingerprints To</sci:value>
									</sci:arg>
									<sci:arg name="PutPropertyListInGlobal" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>If given, the array of properties that are being calculated is placed into this global property when the first data is passed into the component.</sci:help>
										<sci:value>CalculatedProperties</sci:value>
									</sci:arg>
									<sci:arg name="PutCalculatedPropertiesInProperty" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>If given, the array of properties that are newly calculated for a particlar sample are placed into this property on each data</sci:help>
										<sci:value>NewProperties</sci:value>
									</sci:arg>
									<sci:arg name="IllegalCharacters" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>If given, this is a regular expression that is applied to property names to discover illegal characters.  In this case, the illegal characters are replaced with underscores, and the original property names and the new property names added to the global values PropertyCalculatorOriginalNames and PropertyCalculatorNewNames, respectively.  This gives you the mapping from the original name to the internal R names.</sci:help>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Fixed Length" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false">
										<sci:help>If Convert Fingerprints To is given a fixed-length type, then this is the fixed-length.  Bits larger than this length are folded into this range using a mod operation.</sci:help>
										<sci:value>Fixed Length</sci:value>
									</sci:arg>
									<sci:arg name="RemoveCalculatedPropertiesInProperty" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Remove the properties listed in the particular property name</sci:help>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon May 26 06:56:16 2014</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Calculate Properties</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>CalculatorNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{22FFFABF-758F-406F-976F-46E680B2CBFF}</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon</sci:help>
										<sci:value>Calculate Properties</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>9.2.0.9</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1242 -95</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>This component is used to provide a general interface that can be promoted in Learners, and also used in Models.</sci:value>
										<sci:value>This component is used in subprotocols to provide a standard interface for Learners that can later be used to provide automatic calculation later in your learned models.

Typically, some of the parameters of this interface are promoted in the Learner.  Others are kept hidden, either because they are not needed, or because they are defaulted to appropriate values.

One it has initialized by the first data record, it sets the global property PointInfoText with a string that contains all the information you later need to re-initialize another Calculate Properties component in a saved model to the same state as it was in in the Learner.  To use this, you save the global PointInfoText on a parameter of the same name on the model component, then set the UseProperties parameter to the value PointInfoText.</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>7</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Calculate Properties</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.PropertyFunctions.1">
								<sci:component name="Rename Properties" version="2">
									<sci:arg name="Original Property Names" type="PropertyNameType" required="true" visibility="visible" multi="true">
										<sci:help>An array of property names to rename. The new name will be the corresponding name in &lt;i&gt;New Property Names&lt;i&gt;.</sci:help>
										<sci:value>PHFP_2</sci:value>
										<sci:value>PHFP_3</sci:value>
										<sci:value>PHFP_4</sci:value>
										<sci:value>PHRFP_2</sci:value>
										<sci:value>PHRFP_3</sci:value>
										<sci:value>PHRFP_4</sci:value>
										<sci:value>PHPFP_2</sci:value>
										<sci:value>PHPFP_3</sci:value>
										<sci:value>PHPFP_4</sci:value>
										<sci:value>PHFC_2</sci:value>
										<sci:value>PHFC_3</sci:value>
										<sci:value>PHFC_4</sci:value>
										<sci:value>PHPFC_2</sci:value>
										<sci:value>PHPFC_3</sci:value>
										<sci:value>PHPFC_4</sci:value>
										<sci:value>PHRFC_2</sci:value>
										<sci:value>PHRFC_3</sci:value>
										<sci:value>PHRFC_4</sci:value>
										<sci:value>FCFC_6</sci:value>
										<sci:value>ECFC_6</sci:value>
										<sci:value>LCFC_6</sci:value>
										<sci:value>SCFC_6</sci:value>
										<sci:value>FPFC_6</sci:value>
										<sci:value>EPFC_6</sci:value>
										<sci:value>LPFC_6</sci:value>
										<sci:value>SPFC_6</sci:value>
										<sci:value>FEFC_6</sci:value>
										<sci:value>EEFC_6</sci:value>
										<sci:value>LEFC_6</sci:value>
										<sci:value>SEFC_6</sci:value>
										<sci:value>FHFC_6</sci:value>
										<sci:value>EHFC_6</sci:value>
										<sci:value>LHFC_6</sci:value>
										<sci:value>SHFC_6</sci:value>
										<sci:value>FCFP_6</sci:value>
										<sci:value>ECFP_6</sci:value>
										<sci:value>LCFP_6</sci:value>
										<sci:value>SCFP_6</sci:value>
										<sci:value>FPFP_6</sci:value>
										<sci:value>EPFP_6</sci:value>
										<sci:value>LPFP_6</sci:value>
										<sci:value>SPFP_6</sci:value>
										<sci:value>FEFP_6</sci:value>
										<sci:value>EEFP_6</sci:value>
										<sci:value>LEFP_6</sci:value>
										<sci:value>SEFP_6</sci:value>
										<sci:value>FHFP_6</sci:value>
										<sci:value>EHFP_6</sci:value>
										<sci:value>LHFP_6</sci:value>
										<sci:value>SHFP_6</sci:value>
									</sci:arg>
									<sci:arg name="New Property Names" type="PropertyNameType" required="true" visibility="visible" multi="true">
										<sci:help>An array of the new property names. The original name will be the corresponding name in &lt;i&gt;Original Property Names&lt;i&gt;.</sci:help>
										<sci:value>PHFP2</sci:value>
										<sci:value>PHFP3</sci:value>
										<sci:value>PHFP4</sci:value>
										<sci:value>PHRFP2</sci:value>
										<sci:value>PHRFP3</sci:value>
										<sci:value>PHRFP4</sci:value>
										<sci:value>PHPFP2</sci:value>
										<sci:value>PHPFP3</sci:value>
										<sci:value>PHPFP4</sci:value>
										<sci:value>PHFC2</sci:value>
										<sci:value>PHFC3</sci:value>
										<sci:value>PHFC4</sci:value>
										<sci:value>PHPFC2</sci:value>
										<sci:value>PHPFC3</sci:value>
										<sci:value>PHPFC4</sci:value>
										<sci:value>PHRFC2</sci:value>
										<sci:value>PHRFC3</sci:value>
										<sci:value>PHRFC4</sci:value>
										<sci:value>FCFC6</sci:value>
										<sci:value>ECFC6</sci:value>
										<sci:value>LCFC6</sci:value>
										<sci:value>SCFC6</sci:value>
										<sci:value>FPFC6</sci:value>
										<sci:value>EPFC6</sci:value>
										<sci:value>LPFC6</sci:value>
										<sci:value>SPFC6</sci:value>
										<sci:value>FEFC6</sci:value>
										<sci:value>EEFC6</sci:value>
										<sci:value>LEFC6</sci:value>
										<sci:value>SEFC6</sci:value>
										<sci:value>FHFC6</sci:value>
										<sci:value>EHFC6</sci:value>
										<sci:value>LHFC6</sci:value>
										<sci:value>SHFC6</sci:value>
										<sci:value>FCFP6</sci:value>
										<sci:value>ECFP6</sci:value>
										<sci:value>LCFP6</sci:value>
										<sci:value>SCFP6</sci:value>
										<sci:value>FPFP6</sci:value>
										<sci:value>EPFP6</sci:value>
										<sci:value>LPFP6</sci:value>
										<sci:value>SPFP6</sci:value>
										<sci:value>FEFP6</sci:value>
										<sci:value>EEFP6</sci:value>
										<sci:value>LEFP6</sci:value>
										<sci:value>SEFP6</sci:value>
										<sci:value>FHFP6</sci:value>
										<sci:value>EHFP6</sci:value>
										<sci:value>LHFP6</sci:value>
										<sci:value>SHFP6</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:help>the action to perform</sci:help>
										<sci:value>RenameProperties</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Feb 28 12:30:36 2017</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>
#orig := Parameter(&apos;Original Property Names&apos;);
#new := Parameter(&apos;New Property Names&apos;);
if (numvalues(#orig) == 0 OR #orig[1] eq &quot;&quot; OR numvalues(#new) == 0 OR #new[1] eq &quot;&quot;) then
	&quot;&quot;;
else
  #display := &apos;Rename &apos; . #orig[1] . &apos; to &apos; . #new[1];
  if (numvalues(#orig) &gt; 1) then
    #display .= &apos;, ...&apos;;
  end if;
  #display;
end if;
</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>true</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1530 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{04496ABE-C1D2-43D2-83D4-35AC9FC8D501}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Rename the specified properties</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, rename the properties found in the &lt;i&gt;Original Property Names&lt;/i&gt; list to the names provided in &lt;i&gt;New Property Names&lt;/i&gt;.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To remove specified properties from each data record, use 
&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>With only the specified properties remaining</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>18.1.0.1376</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>15</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Rename Properties</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:connectid from="17" to="18" type="true"/>
							<sci:connectid from="18" to="19" type="true"/>
							<sci:connectid from="19" to="6" type="true"/>
							<sci:connectid from="6" to="7" type="true"/>
							<sci:connectid from="7" to="15" type="true"/>
							<sci:version iVal="1"/>
						</sci:protocol>
					</sci:data>
					<sci:data object="SciTegic.JoinProperties.1">
						<sci:component name="Join Data from Cache" version="2">
							<sci:arg name="JoinUsing" type="PropertyNameType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the property that identifies which records to join. When a record in the cache 
has the same value for this property as the incoming streaming data record, its properties and child 
nodes are added to the streaming record. Calculable properties can be used for the streaming data, but 
data in the cache must already contain stored properties to join.

If you provide a comma-separated list 
of property names, then by default all values must match. (You can control this behavior by changing 
JoinUsingListType.) Or, if you provide a property that is an array of values, then all values must match 
(and the source must provide the data in an array-based form.)</sci:help>
								<sci:member>JoinUsingListType</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
								<sci:member>JoinPropertyType</sci:member>
								<sci:value>accession</sci:value>
							</sci:arg>
							<sci:arg name="JoinUsingListType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: Join using only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: Joins using the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;</sci:help>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinPropertyType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The data type of the join property</sci:help>
								<sci:legalval>IsNumeric</sci:legalval>
								<sci:legalval selected="true">IsText</sci:legalval>
								<sci:legalval>IsDate</sci:legalval>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set JoinPropertyType to IsText&apos;);
Parameter(&apos;JoinPropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the cache that was written using the Cache Writer</sci:help>
								<sci:member>Scope</sci:member>
								<sci:value>protdesc</sci:value>
							</sci:arg>
							<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The scope within which the cache we wish to join against exists.
&lt;ul&gt;
&lt;li&gt;&lt;I&gt;Job Only&lt;/I&gt; all caches created within the currently-running protocol.
&lt;li&gt;&lt;I&gt;User Only&lt;/I&gt; all caches created so that all jobs by that user can see them.
&lt;li&gt;&lt;I&gt;All Users&lt;/I&gt; all caches created by any user in the global scope. 
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">Job Only</sci:legalval>
								<sci:legalval>User Only</sci:legalval>
								<sci:legalval>All Users</sci:legalval>
							</sci:arg>
							<sci:arg name="Join Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:member>JoinOnto</sci:member>
								<sci:member>WhenJoiningOnto</sci:member>
								<sci:member>JoinAllNullString</sci:member>
								<sci:member>MultipleReferenceBehavior</sci:member>
								<sci:member>AppendNodes</sci:member>
							</sci:arg>
							<sci:arg name="JoinOnto" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates which data record will be output:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;ProcessData&lt;/i&gt;: The data streaming through the pipeline remains with properties and child nodes from the cache copied onto the record.
&lt;li&gt;&lt;i&gt;Reference&lt;/i&gt;: The data from the cache remains with properties and child nodes from the streaming data record copied onto the record.  Only data records that successfully join against the incoming data stream will be output.
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">ProcessData</sci:legalval>
								<sci:legalval>Reference</sci:legalval>
							</sci:arg>
							<sci:arg name="WhenJoiningOnto" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;During the joining of two property lists, this parameter indicates how differences 
between the property lists are resolved.  
By default, the streaming input data (process data) serves 
as the base for a join and the cache data (reference data) is treated as the joining data (this distinction 
can be reversed using the &lt;i&gt;JoinOnto&lt;/i&gt; parameter).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;OverwriteOrCreate&lt;/i&gt;: 
Copies all properties from the joining data onto the base data, overwriting the values of any properties 
that already exist.
&lt;li&gt;&lt;i&gt;OverwriteExisting&lt;/i&gt;: Copies only those properties from 
the joining data to the base data that already exist on the base.
&lt;li&gt;&lt;i&gt;CreateIfNew&lt;/i&gt;: 
Copies only those properties from the joining data to the base data that do not already exist on the 
base data.
&lt;li&gt;&lt;i&gt;AppendOrCreate&lt;/i&gt;: The value of a joining property that already 
exists in the base data is appended  (as an array) to the value in the base property.  The other joining 
properties that are not already present in the base data are copied there.
&lt;li&gt;&lt;i&gt;AppendExisting&lt;/i&gt;: 
The value of a joining property that already exists in the base data is appended  (as an array) to the 
value in the base property.  No other properties are copied. 
&lt;li&gt;&lt;i&gt;GroupData&lt;/i&gt;: 
Creates a hierarchical group containing both the joining and base data.
&lt;/ul&gt;</sci:help>
								<sci:legalval>OverwriteOrCreate</sci:legalval>
								<sci:legalval>OverwriteExisting</sci:legalval>
								<sci:legalval>CreateIfNew</sci:legalval>
								<sci:legalval selected="true">AppendOrCreate</sci:legalval>
								<sci:legalval>AppendExisting</sci:legalval>
								<sci:legalval>GroupData</sci:legalval>
							</sci:arg>
							<sci:arg name="AppendNodes" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>When joining data records that contain child nodes, whether to append the child nodes of the joining data onto the base data as determined by the &lt;i&gt;JoinOnto&lt;/i&gt; parameter.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="MultipleReferenceBehavior" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;What to do if there are multiple records in the cache (reference data) with a matching 
value for the &lt;i&gt;JoinUsing&lt;/i&gt; property of an incoming streaming record.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;JoinFirst&lt;/i&gt;: 
Uses the first one found. 
&lt;li&gt;&lt;i&gt;JoinLast&lt;/i&gt;: Uses the last one found. 
&lt;li&gt;&lt;i&gt;JoinAll&lt;/i&gt;: 
Appends all values for each property together in an array. 
&lt;li&gt;&lt;i&gt;JoinTogether&lt;/i&gt;: 
Joins each of the matching records in the cache with the streaming record individually and independently, 
which results in multiple records output for one input record.
&lt;/ul&gt;</sci:help>
								<sci:legalval>JoinFirst</sci:legalval>
								<sci:legalval>JoinLast</sci:legalval>
								<sci:legalval>JoinAll</sci:legalval>
								<sci:legalval selected="true">JoinTogether</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinAllNullString" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;This string is used during append to pad out empty values when MultipleReferenceBehavior is set to  &quot;JoinAll&quot;. This keeps the generated arrays of values in sync for multiple references.&lt;/p&gt;
&lt;p&gt;The value &quot;None&quot; causes no padding to occur.&lt;/p&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MultipleReferenceBehavior to JoinAll&apos;);
Parameter(&apos;MultipleReferenceBehavior&apos;) eq &apos;JoinAll&apos;</sci:enabledscript>
								<sci:value>None</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>Prefix</sci:member>
								<sci:member>GroupName</sci:member>
							</sci:arg>
							<sci:arg name="Prefix" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A prefix to add to each property name as it is joined onto the streaming data (instead of overwriting or appending to the existing value).</sci:help>
							</sci:arg>
							<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If &lt;i&gt;WhenJoiningOnto&lt;/i&gt; is set to &quot;GroupData&quot;, this is the name of the group node into which the results are placed</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set WhenJoiningOnto to GroupData&apos;);
Parameter(&apos;WhenJoiningOnto&apos;) eq &apos;GroupData&apos;</sci:enabledscript>
								<sci:value>Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="PassDownParameters" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Parameters to pass on to the reader</sci:help>
								<sci:value>Scope</sci:value>
							</sci:arg>
							<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the JoinUsing property -- even 
non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  JoinPropertyType 
is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with 
a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a 
numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then 
records containing non-numeric strings for the JoinUsing property will be sent out the Fail port.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Source" type="URLType" required="true" visibility="nevershow" multi="false">
								<sci:help>Names of data files, a learned model, or data cache ID, to join with the streaming data that enters this component. If multiple files are given, each is joined in sequence. (The Windows browser reverses the order of the files during selection, so you should select from last to first.)</sci:help>
								<sci:value>$(CacheID)</sci:value>
							</sci:arg>
							<sci:arg name="SourceFormat" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>The name of the reader to use for the join source. (For readers with particular parameters, you can create them and save them, then add their name to the options list for this protocol.  For example, you could create a Delimited Text with Commas and No Column Names component, save it to your tab, then add it to this list and select.)</sci:help>
								<sci:legalval>Delimited Text With Column Names</sci:legalval>
								<sci:legalval>Delimited Text No Column Names</sci:legalval>
								<sci:legalval>Comma Delimited With Column Names</sci:legalval>
								<sci:legalval>Tab Delimited With Column Names</sci:legalval>
								<sci:legalval>Space Delimited With Column Names</sci:legalval>
								<sci:legalval>Excel XLS With Column Names</sci:legalval>
								<sci:legalval>Excel XLS No Column Names</sci:legalval>
								<sci:legalval>MDL SD Format</sci:legalval>
								<sci:legalval>Learned Model Reader</sci:legalval>
								<sci:legalval selected="true">{704E3781-33EA-42BB-9099-05B44C3D08E6}</sci:legalval>
							</sci:arg>
							<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="nevershow" multi="false">
								<sci:help>A list of properties to join from the source file. If this value is not defined, all properties are joined into the record.</sci:help>
							</sci:arg>
							<sci:arg name="UseIndexFile" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Uses an index file when performing the Join operation when set to &quot;True&quot;. An index file is created if it does not already exist; it is used to accelerate the join process.

 Note: This option is useful for optimizing join operations against a file that may be used many times, at the first time of use an index file can be created to speed accesses in subsequent uses.  This file is created in the same directory as the source file and is automatically used for any subsequent join.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:03:53 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}</sci:value>
							</sci:arg>
							<sci:arg name="CheckSyntax" type="BoolType" required="true" visibility="nevershow" multi="false">
								<sci:help>Whether to perform a quick syntax check at the beginning of the file when we open it, and if a problem is found, throw an error.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="SourceComponent" type="ComponentType" required="false" visibility="nevershow" multi="false">
								<sci:help>Name of the data format of the Source file</sci:help>
								<sci:value>$(SourceFormat)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;JoinUsing&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>if (strlength(trim(parameter(&apos;JoinUsing&apos;, 2))) &gt; 0) then
	&quot;Join on &quot; . trim(parameter(&apos;JoinUsing&apos;, 2));
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Join Data from File</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>JOINNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>666 -1195</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Augments data records with properties from data in a cache where specified property values match</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, a property value or set of values specified by 
&lt;i&gt;JoinUsing&lt;/i&gt; is used to identify matching records in the data cache created by the &lt;a 
href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache Writer&lt;/a&gt; 
specified by &lt;i&gt;CacheID&lt;/i&gt;.  Properties from these records are added to the incoming data 
record.  If no match is found, the record is sent out the Fail port.&lt;/p&gt;

&lt;p&gt;Records match 
if the value of the &lt;i&gt;JoinUsing&lt;/i&gt; property is the same for the incoming record as in the 
cache.  If multiple &lt;i&gt;JoinUsing&lt;/i&gt; properties are specified, the behavior depends on &lt;i&gt;JoinUsingListType&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;By 
default, this component expects the cache to have been created by the current job.  If the cache is outside 
the scope of the current job, update &lt;i&gt;Scope&lt;/i&gt; accordingly&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;By 
default only properties are extracted from the matching records.  Use &lt;i&gt;JoinOnto&lt;/i&gt; to 
obtain additional information such as molecular data.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use 
&lt;a href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache 
Writer&lt;/a&gt; to create the data cache specified by &lt;i&gt;CacheID&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;Use 
&lt;a href=&quot;javascript:DoLink(&apos;{D24316C3-9D5C-4B5D-ADF3-28F258F11858}&apos;)&quot;&gt;Join 
Data from File&lt;/a&gt; to join against a source data file.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records which received additional properties from the source file through a successful join.</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which no data was found in the source file.</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
								<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>9</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Join Data from Cache</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyCalculator.1">
						<sci:component name="Calculate Properties" version="2">
							<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>The properties to learn from: 
  &apos;AllPropertiesOnFirstData&apos; uses all those that are found
on the first data object;
  &apos;CalculablePropertiesOnFirstData&apos; uses all those that are
found on the first data that can be calculated;
  &apos;UserSet&apos; takes the list of properties from the parameter
UserSet.  Property ranges can be given by giving the first
and last property in the range separated by a hyphen; 
properties can be referred to by index using the word &quot;Column&quot;
followed by the index, i.e., Column3-Column10.
  &apos;PointInfoText&apos; takes a copy of a previously-generated 
Calculate Properties state in either the globals or the parameter
PointInfoText. The restores the calculator to behave as it did
when the text was originally generated.  This is useful for connecting
Learn components with Model components.
</sci:help>
								<sci:member>IgnoreProperties</sci:member>
								<sci:member>UserSet</sci:member>
								<sci:member>PredefinedSet</sci:member>
								<sci:legalval>AllPropertiesOnFirstData</sci:legalval>
								<sci:legalval>CalculablePropertiesOnFirstData</sci:legalval>
								<sci:legalval selected="true">PredefinedSet</sci:legalval>
								<sci:legalval>UserSet</sci:legalval>
								<sci:legalval>PointInfoText</sci:legalval>
							</sci:arg>
							<sci:arg name="PredefinedSet" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>A predefined set of properties to use for learning</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to PredefinedSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;PredefinedSet&apos;</sci:enabledscript>
								<sci:legalval>FCFP_6</sci:legalval>
								<sci:legalval>ALogP</sci:legalval>
								<sci:legalval>Molecular_Weight</sci:legalval>
								<sci:legalval>Num_H_Donors</sci:legalval>
								<sci:legalval>Num_H_Acceptors</sci:legalval>
								<sci:legalval selected="true">Num_RotatableBonds</sci:legalval>
								<sci:legalval selected="true">Num_BridgeBonds</sci:legalval>
								<sci:legalval selected="true">Num_Atoms</sci:legalval>
								<sci:legalval selected="true">Num_Rings</sci:legalval>
								<sci:legalval>Num_AromaticRings</sci:legalval>
								<sci:legalval>Num_Fragments</sci:legalval>
								<sci:legalval>NPlusO_Count</sci:legalval>
								<sci:legalval selected="true">Molecular_Solubility</sci:legalval>
								<sci:legalval selected="true">Molecular_SurfaceArea</sci:legalval>
								<sci:legalval>Molecular_PolarSurfaceArea</sci:legalval>
								<sci:legalval>Molecular_PolarSASA</sci:legalval>
								<sci:legalval>Estate_Keys</sci:legalval>
								<sci:legalval>Estate_Counts</sci:legalval>
								<sci:legalval selected="true">MDLPublicKeys</sci:legalval>
								<sci:legalval>MDL2DKeys960</sci:legalval>
								<sci:legalval>MDL2DKeys166</sci:legalval>
								<sci:legalval>PHFP2</sci:legalval>
								<sci:legalval>PHFP3</sci:legalval>
								<sci:legalval>PHFP4</sci:legalval>
								<sci:legalval>PHRFP2</sci:legalval>
								<sci:legalval>PHRFP3</sci:legalval>
								<sci:legalval>PHRFP4</sci:legalval>
								<sci:legalval>PHPFP2</sci:legalval>
								<sci:legalval>PHPFP3</sci:legalval>
								<sci:legalval>PHPFP4</sci:legalval>
								<sci:legalval>PHFC2</sci:legalval>
								<sci:legalval>PHFC3</sci:legalval>
								<sci:legalval>PHFC4</sci:legalval>
								<sci:legalval>PHPFC2</sci:legalval>
								<sci:legalval>PHPFC3</sci:legalval>
								<sci:legalval>PHPFC4</sci:legalval>
								<sci:legalval>PHRFC2</sci:legalval>
								<sci:legalval>PHRFC3</sci:legalval>
								<sci:legalval>PHRFC4</sci:legalval>
								<sci:legalval>FCFC6</sci:legalval>
								<sci:legalval>ECFC6</sci:legalval>
								<sci:legalval>LCFC6</sci:legalval>
								<sci:legalval>SCFC6</sci:legalval>
								<sci:legalval>FPFC6</sci:legalval>
								<sci:legalval>EPFC6</sci:legalval>
								<sci:legalval>LPFC6</sci:legalval>
								<sci:legalval>SPFC6</sci:legalval>
								<sci:legalval>FEFC6</sci:legalval>
								<sci:legalval>EEFC6</sci:legalval>
								<sci:legalval>LEFC6</sci:legalval>
								<sci:legalval>SEFC6</sci:legalval>
								<sci:legalval>FHFC6</sci:legalval>
								<sci:legalval>EHFC6</sci:legalval>
								<sci:legalval>LHFC6</sci:legalval>
								<sci:legalval>SHFC6</sci:legalval>
								<sci:legalval>FCFP6</sci:legalval>
								<sci:legalval>ECFP6</sci:legalval>
								<sci:legalval>LCFP6</sci:legalval>
								<sci:legalval>SCFP6</sci:legalval>
								<sci:legalval>FPFP6</sci:legalval>
								<sci:legalval>EPFP6</sci:legalval>
								<sci:legalval>LPFP6</sci:legalval>
								<sci:legalval>SPFP6</sci:legalval>
								<sci:legalval>FEFP6</sci:legalval>
								<sci:legalval>EEFP6</sci:legalval>
								<sci:legalval>LEFP6</sci:legalval>
								<sci:legalval>SEFP6</sci:legalval>
								<sci:legalval>FHFP6</sci:legalval>
								<sci:legalval>EHFP6</sci:legalval>
								<sci:legalval>LHFP6</sci:legalval>
								<sci:legalval>SHFP6</sci:legalval>
								<sci:legalval/>
								<sci:legalval>G1AminoAcidComposition</sci:legalval>
								<sci:legalval>G2DipeptideComposition</sci:legalval>
								<sci:legalval>G3AutoCorrelationDescriptors</sci:legalval>
								<sci:legalval>G4CompositionTransitionDistribution</sci:legalval>
								<sci:legalval>G5QuasiSequenceOrderDescriptors</sci:legalval>
								<sci:legalval>G6PseudoAminoAcidComposition</sci:legalval>
								<sci:legalval>G7AmphiphilicPseudoAminoAcidComposition</sci:legalval>
								<sci:legalval>G9TotalAminoAcidProperties</sci:legalval>
								<sci:legalval>Aligned_Zscales_Hellberg</sci:legalval>
								<sci:legalval>Aligned_Zscales_Jonsson</sci:legalval>
								<sci:legalval>Aligned_Zscales_Sandberg</sci:legalval>
								<sci:legalval>Aligned_Zscales_binary</sci:legalval>
								<sci:legalval>Aligned_Tscales</sci:legalval>
								<sci:legalval>Aligned_STscales</sci:legalval>
								<sci:legalval>Aligned_VHSE</sci:legalval>
								<sci:legalval>Aligned_ISA_ECI</sci:legalval>
								<sci:legalval>Aligned_GRID_tscore</sci:legalval>
								<sci:legalval>Aligned_VSTV</sci:legalval>
								<sci:legalval>Aligned_MSWHIM</sci:legalval>
								<sci:legalval>Aligned_FASGAI</sci:legalval>
								<sci:legalval>Aligned_BLOSUM</sci:legalval>
								<sci:legalval>Aligned_VARIMAX</sci:legalval>
								<sci:legalval>Aligned_ProtFP_numerical</sci:legalval>
								<sci:legalval>Aligned_ProtFP_hash</sci:legalval>
								<sci:legalval>Aligned_Norinder</sci:legalval>
								<sci:legalval>Aligned_cscales</sci:legalval>
								<sci:legalval>Aligned_DPPS</sci:legalval>
								<sci:legalval>Aligned_Escales</sci:legalval>
								<sci:legalval>Aligned_Gscales</sci:legalval>
								<sci:legalval>Aligned_HESH</sci:legalval>
								<sci:legalval>Aligned_HSEHPCSV</sci:legalval>
								<sci:legalval>Aligned_Kidera</sci:legalval>
								<sci:legalval>Aligned_Pscales</sci:legalval>
								<sci:legalval>Aligned_QCP</sci:legalval>
								<sci:legalval>Aligned_Sneath</sci:legalval>
								<sci:legalval>Aligned_SVEEVA</sci:legalval>
								<sci:legalval>Aligned_SVHEHS</sci:legalval>
								<sci:legalval>Aligned_SVRDF</sci:legalval>
								<sci:legalval>Aligned_SVRG</sci:legalval>
								<sci:legalval>Aligned_SVWG</sci:legalval>
								<sci:legalval>Aligned_Vscales</sci:legalval>
								<sci:legalval>Aligned_VSGETAWAY</sci:legalval>
								<sci:legalval>Aligned_VSTPV</sci:legalval>
								<sci:legalval>Aligned_VSW</sci:legalval>
								<sci:legalval>Aligned_VTSA</sci:legalval>
								<sci:legalval>Aligned_SVGER</sci:legalval>
								<sci:legalval>Aligned_PSM</sci:legalval>
								<sci:legalval>Aligned_SSIA_AM1</sci:legalval>
								<sci:legalval>Aligned_SSIA_PM3</sci:legalval>
								<sci:legalval>Aligned_SSIA_HF</sci:legalval>
								<sci:legalval>Aligned_SSIA_DFT</sci:legalval>
								<sci:legalval>ACC_Zscales_Hellberg</sci:legalval>
								<sci:legalval>ACC_Zscales_Jonsson</sci:legalval>
								<sci:legalval>ACC_Zscales_Sandberg</sci:legalval>
								<sci:legalval>ACC_Zscales_binary</sci:legalval>
								<sci:legalval>ACC_Tscales</sci:legalval>
								<sci:legalval>ACC_STscales</sci:legalval>
								<sci:legalval>ACC_VHSE</sci:legalval>
								<sci:legalval>ACC_ISA_ECI</sci:legalval>
								<sci:legalval>ACC_GRID_tscore</sci:legalval>
								<sci:legalval>ACC_VSTV</sci:legalval>
								<sci:legalval>ACC_MSWHIM</sci:legalval>
								<sci:legalval>ACC_FASGAI</sci:legalval>
								<sci:legalval>ACC_BLOSUM</sci:legalval>
								<sci:legalval>ACC_VARIMAX</sci:legalval>
								<sci:legalval>ACC_ProtFP_numerical</sci:legalval>
								<sci:legalval>ACC_ProtFP_hash</sci:legalval>
								<sci:legalval>ACC_Norinder</sci:legalval>
								<sci:legalval>ACC_cscales</sci:legalval>
								<sci:legalval>ACC_DPPS</sci:legalval>
								<sci:legalval>ACC_Escales</sci:legalval>
								<sci:legalval>ACC_Gscales</sci:legalval>
								<sci:legalval>ACC_HESH</sci:legalval>
								<sci:legalval>ACC_HSEHPCSV</sci:legalval>
								<sci:legalval>ACC_Kidera</sci:legalval>
								<sci:legalval>ACC_Pscales</sci:legalval>
								<sci:legalval>ACC_QCP</sci:legalval>
								<sci:legalval>ACC_Sneath</sci:legalval>
								<sci:legalval>ACC_SVEEVA</sci:legalval>
								<sci:legalval>ACC_SVHEHS</sci:legalval>
								<sci:legalval>ACC_SVRDF</sci:legalval>
								<sci:legalval>ACC_SVRG</sci:legalval>
								<sci:legalval>ACC_SVWG</sci:legalval>
								<sci:legalval>ACC_Vscales</sci:legalval>
								<sci:legalval>ACC_VSGETAWAY</sci:legalval>
								<sci:legalval>ACC_VSTPV</sci:legalval>
								<sci:legalval>ACC_VSW</sci:legalval>
								<sci:legalval>ACC_VTSA</sci:legalval>
								<sci:legalval>ACC_SVGER</sci:legalval>
								<sci:legalval>ACC_PSM</sci:legalval>
								<sci:legalval>ACC_SSIA_AM1</sci:legalval>
								<sci:legalval>ACC_SSIA_PM3</sci:legalval>
								<sci:legalval>ACC_SSIA_HF</sci:legalval>
								<sci:legalval>ACC_SSIA_DFT</sci:legalval>
							</sci:arg>
							<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A comma-separated list of properties to use for calculation. 
&lt;p&gt;If an item on the list contains a hyphen (e.g., &quot;X1-X5&quot;), and the properties on either side of the hyphen (e.g., &quot;X1&quot;, &quot;X5&quot;) are defined on the first data record, then all properties in that range are included. Note that the properties within the specified range are determined by the order of properties in the property list. Thus, if properties in the property list are in the following order: X1, X2, X5, X3, X4, X6, then the range &quot;X1-X5&quot; will only include properties X1, X2, and X5.&lt;/p&gt;
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;UserSet&apos;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A comma-separated list of properties to ignore.  This is used, for example, if UseProperties is AllPropertiesOnFirstData, but there is a small set of undesirable properties you don&apos;t wish to use but can&apos;t remove (i.e., record names)</sci:help>
							</sci:arg>
							<sci:arg name="Convert Fingerprints To" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>This option controls the automatic conversion of fingerprint properties into different format</sci:help>
								<sci:member>Fixed Length</sci:member>
								<sci:legalval>Leave As-Is</sci:legalval>
								<sci:legalval>Fixed-Length Array of Bits</sci:legalval>
								<sci:legalval selected="true">Fixed-Length Array of Counts</sci:legalval>
							</sci:arg>
							<sci:arg name="Fixed Length" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>If Convert Fingerprints To is given a fixed-length type, then this is the fixed-length.  Bits larger than this length are folded into this range using a mod operation.</sci:help>
								<sci:value>1024</sci:value>
							</sci:arg>
							<sci:arg name="PutPropertyListInGlobal" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If given, the array of properties that are being calculated is placed into this global property when the first data is passed into the component.</sci:help>
							</sci:arg>
							<sci:arg name="PutCalculatedPropertiesInProperty" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If given, the array of properties that are newly calculated for a particlar sample are placed into this property on each data</sci:help>
							</sci:arg>
							<sci:arg name="IllegalCharacters" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If given, this is a regular expression that is applied to property names to discover illegal characters.  In this case, the illegal characters are replaced with underscores, and the original property names and the new property names added to the global values PropertyCalculatorOriginalNames and PropertyCalculatorNewNames, respectively.  This gives you the mapping from the original name to the internal R names.</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RemoveCalculatedPropertiesInProperty" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Remove the properties listed in the particular property name</sci:help>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon May 26 06:56:16 2014</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Calculate Properties</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>CalculatorNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{22FFFABF-758F-406F-976F-46E680B2CBFF}</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon</sci:help>
								<sci:value>Calculate Properties</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>9.2.0.9</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>954 -1195</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>This component is used to provide a general interface that can be promoted in Learners, and also used in Models.</sci:value>
								<sci:value>This component is used in subprotocols to provide a standard interface for Learners that can later be used to provide automatic calculation later in your learned models.

Typically, some of the parameters of this interface are promoted in the Learner.  Others are kept hidden, either because they are not needed, or because they are defaulted to appropriate values.

One it has initialized by the first data record, it sets the global property PointInfoText with a string that contains all the information you later need to re-initialize another Calculate Properties component in a saved model to the same state as it was in in the Learner.  To use this, you save the global PointInfoText on a parameter of the same name on the model component, then set the UseProperties parameter to the value PointInfoText.</sci:value>
								<sci:value>Generic Data</sci:value>
								<sci:value/>
								<sci:value>Generic Data</sci:value>
								<sci:value/>
								<sci:value>Generic Data</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>10</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Calculate Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="R Custom Script" version="2">
							<sci:arg name="Script" type="TextType" required="true" visibility="visible" multi="false">
								<sci:help>Text of the R script you wish to run.  Enter the script just as if you were typing it in R.</sci:help>
								<sci:value># get data set from rinput1 file (must have all independent variables)
source(&quot;/zfsdata/ppilot/apps/scitegic/rstats/lang/R/SciTegic/RFunctions.R&quot;)

x &lt;- readData(InputFileString, omitNA=FALSE)

# load model object from file
model &lt;- NULL

load(&quot;$(Rmodelfile)&quot;)

if (length(model) == 0)
{
   stop(&quot;Error reading R model file&quot;)
   geterrmessage()
}

if (any(ls()==&quot;goodnames&quot;))
{
	# Keep only those properties -- in the correct order --
	# that are required by the model.
	# Convert to lowercase first so we are case-insensitive
	lgoodnames &lt;- tolower(goodnames)
	lxnames &lt;- tolower(names(x))
	namesFound &lt;- lgoodnames %in% lxnames

	idx &lt;- match(lgoodnames, lxnames)
	nameidx &lt;- !is.na(idx)
	idx &lt;- idx[nameidx]
	x &lt;- x[idx]

	# Restore original case used when building model, since R is case-sensitive
	names(x) &lt;- goodnames[nameidx]
}

# Get and assign levels for any factors to the same levels used for training
# If xlevels is not separately defined, get it from the model
if (!any(ls()==&quot;xlevels&quot;)) xlevels &lt;- model$xlevels

if (length(xlevels) &gt; 0) 
{
	for (varname in names(xlevels)) 
	{
		oldlevels &lt;- xlevels[[varname]]

		if (!is.null(oldlevels)) {
			newx &lt;- x[[varname]]

			newx[is.na(match(levels(newx)[newx], oldlevels))] &lt;- NA
			newx &lt;- newx[, drop=TRUE]
			levels(newx) &lt;- oldlevels

			x[[varname]] &lt;- newx
		}
	}
}

keep &lt;- complete.cases(x)

# Uncomment the following line to keep even incomplete cases, for those
# models that can handle such data.
# keep &lt;- rep(TRUE, nrow(x))

# Keep only complete cases; pass others out fail port
x &lt;- x[keep, , drop=FALSE]

# Retain indexes of kept records
RModelRecordID &lt;- (1:length(keep))[keep]

#--Libraries--
library(ranger)
library(xgboost)
library(pls)
library(caret)
library(ggplot2)
library(iml)

#--Globals--
# Convert all indexes to strings (otherwise they are likely factors..)
#Files &lt;- data.frame(lapply(Files, as.character), stringsAsFactors=FALSE)
#Files &lt;- Files[-1,] 
FileIndex &lt;- 1


#--Functions--

# Get a prediction for the build model
PredictForModel &lt;- function(x, xnames, model, TypeOfModel, IsClassification){
  if (TypeOfModel == &quot;xgboost&quot;){
    modelForPred &lt;- xgb.load(model)
  }

  # Init
  pred &lt;- NULL
  x &lt;- x[,xnames, drop = F]
  x &lt;- as.matrix(x, drop = F)
  
  # Predict for model
  if (TypeOfModel == &quot;randomForest&quot;){
    pred &lt;- predict(model, x, type=&quot;response&quot;)
    predall &lt;- predict(model, x, type=&quot;response&quot;, predict.all=TRUE)$individual
    
    if (IsClassification) {
      predprob &lt;- predict(model, x, type=&quot;prob&quot;)
      ginis &lt;- apply(predall, 1, function(x) {tab &lt;- table(x); 1 - sum((tab / sum(tab))^2);})
    } else {
      stddevs &lt;- apply(predall, 1, sd)
    }
  } else if (TypeOfModel == &quot;ranger&quot;){
    pred &lt;- predict(model, x, type=&quot;response&quot;)$predictions
    predall &lt;- predict(model, x, type=&quot;response&quot;, predict.all=TRUE)$predictions
    if (IsClassification) {
      predprob &lt;- predict(model, x, type=&quot;prob&quot;)
      ginis &lt;- apply(predall, 1, function(x) {tab &lt;- table(x); 1 - sum((tab / sum(tab))^2);})
    } else {
      stddevs &lt;- apply(predall, 1, sd)
    }
  } else if (TypeOfModel == &quot;extraTrees&quot;){
    pred &lt;- predict(model, x)
    predall &lt;- predict(model, x, allValues=TRUE)
    if (IsClassification) {
      predprob &lt;- predict(model, x, probability = TRUE)
      ginis &lt;- apply(predall, 1, function(x) {tab &lt;- table(x); 1 - sum((tab / sum(tab))^2);})
    } else {
      stddevs &lt;- apply(predall, 1, sd)
    }
  } else if (TypeOfModel == &quot;pls&quot;){
    #attach the model to the path so we can look at the number of components ncomp
    NumberOfVariables &lt;- model$ncomp
    
    pred &lt;- predict(model, x, NumberOfVariables)  # NumberOfVariables defined in boilerplate script
  } else if (TypeOfModel == &quot;xgboost&quot;){
    pred &lt;- predict(object=modelForPred, newdata=x)
    if (IsClassification){
      predprobs &lt;- matrix(X, nrow=nrow(x), byrow=TRUE)
      ginis &lt;- apply(predall, 1, function(x) {tab &lt;- table(x); 1 - sum((tab / sum(tab))^2);})
      predclass &lt;- ylevels[max.col(probs)]
      
      colnames(probs) &lt;- ylevels
    }
  }

  if (length(pred) == 0)
  {
    stop(&quot;Error predicting with R model&quot;)
    geterrmessage()
  }
  
  if (TypeOfModel == &quot;randomForest&quot; || TypeOfModel == &quot;ranger&quot; || TypeOfModel == &quot;extraTrees&quot; || TypeOfModel == &quot;xgboost&quot;){
    # output prediction results to a file
	if (IsClassification) {     
      pred &lt;- data.frame(X=pred, Gini=ginis, predprob, check.names=FALSE)
    } else {
      if (!(TypeOfModel == &quot;xgboost&quot;)){
        pred &lt;- data.frame(X=pred, StdDev=stddevs)
      } else {
        pred &lt;- data.frame(X=pred)
      }
    }
  } else if (TypeOfModel == &quot;pls&quot;){ 
    predNames &lt;- &quot;X&quot;
    if (length(NumberOfVariables) &gt; 1) 
      predNames &lt;- paste(&quot;X&quot;, 1:length(NumberOfVariables), sep=&quot;&quot;)
    
    pred &lt;- data.frame(matrix(pred[,1,], ncol=length(NumberOfVariables)))
    names(pred) &lt;- predNames
  }
  
  return(pred)
}


# Build Stack
buildStack &lt;- function(xy, xnames, StackList, IsClassification, PreBuildStack = NULL){ 
  # Update data
  xy &lt;- cbind(xy[xnames])
  # init
  toremove &lt;- &quot;&quot;
  BuildStacks &lt;- list(NULL)

  # For each fold
  for (i in 1:length(StackList)){
    BuildStacks[[i]] &lt;- list()
    names(BuildStacks)[length(BuildStacks)] &lt;- paste(&quot;Stack&quot;, i, sep = &quot;&quot;)
    
	# Check if prebuildStack includes current stack
    if(!is.null(PreBuildStack)){
	  if (length(PreBuildStack) &lt; i){
		PreBuildStack &lt;- NULL
	  }
	}

	#For each model
    if (StackList[[i]]$Details$Goal == &quot;Ensemble Stack&quot; || StackList[[i]]$Details$Goal == &quot;Keep All Predictions&quot;){
      for (j in 2:length(StackList[[i]])){
		# Check if model was already created
		BuildStacks[[i]] &lt;- append(BuildStacks[[i]], list(list(Model = PreBuildStack[[i]][[j-1]]$Model, TypeOfModel = PreBuildStack[[i]][[j-1]]$TypeOfModel, Features = PreBuildStack[[i]][[j-1]]$Features)))
        names(BuildStacks[[i]])[length(BuildStacks[[i]])] &lt;- paste(&quot;Model&quot;, j-1, sep = &quot;&quot;)
        BuildStacks[[i]][[j-1]] &lt;- append(BuildStacks[[i]][[j-1]], list(Predictions = as.matrix(PredictForModel(xy, BuildStacks[[i]][[j-1]]$Features, model = BuildStacks[[i]][[j-1]]$Model, 
																												TypeOfModel = BuildStacks[[i]][[j-1]]$TypeOfModel, 
																												IsClassification))))
	    # Single Prediction determination and plot
		if (paste(&quot;$(LearnedPropertyName)&quot;, &quot;_ExplainPredictions&quot;, sep = &quot;&quot;) %in% unlist(c(strsplit(&quot;$(Model Output)&quot;, &quot;,&quot;)))){
		  predictor &lt;- PreBuildStack[[i]][[j-1]]$Predictor
		  X &lt;- xy[,BuildStacks[[i]][[j-1]]$Features, drop = F]
		  if (&quot;$(AnalysisMethod)&quot; == &quot;Shapley&quot;){
			shapley = Shapley$new(predictor, x.interest = X)
			# Plot Shapley Analysis
			png(filename = Files[Files[,1] == paste(&quot;RPredictionsAnalysisFile&quot;, FileIndex, sep = &quot;&quot;),2], width = 600, height = 10*length(X))
	
			par(pty=&quot;s&quot;)

			print(shapley$plot())

			dev.off()
			FileIndex &lt;- FileIndex + 1
		  } else{
			lime.explain = LocalModel$new(predictor, k = length(X), x.interest = X)

			# Plot LocalModel Analysis
			png(filename = Files[Files[,1] == paste(&quot;RPredictionsAnalysisFile&quot;, FileIndex, sep = &quot;&quot;),2], width = 800, height = 900)
	
			par(pty=&quot;s&quot;)

			print(plot(lime.explain))

			dev.off()
			FileIndex &lt;- FileIndex + 1
		  }
		}
      }

	  if (StackList[[i]]$Details$Goal == &quot;Keep All Predictions&quot;){
	    # Get all made predictions and keep them to be used as features in the following stack
	    StackPredictions &lt;- lapply(BuildStacks[[i]], function(x) {
													 if (!is.null(names(x)) &amp;&amp; !is.na(names(x)) &amp;&amp; length(grep(&apos;.*Predictions$&apos;, names(x))) &gt; 0 ){x[[grep(&apos;.*Predictions$&apos;, names(x))]]}})
		print(StackPredictions)
	    SavedColNames &lt;- paste(&quot;Stack&quot;, i, rep(names(StackPredictions), unlist(lapply(StackPredictions, function(x) length(x[1,])))), unlist(lapply(StackPredictions, function(x) colnames(x))), sep = &quot;&quot;)
	    StackPredictions &lt;- matrix(unlist(StackPredictions), nrow = length(xy[,1]))
	    colnames(StackPredictions) &lt;- SavedColNames
		print(StackPredictions)
		#asdfasdf
		BuildStacks[[i]] &lt;- append(BuildStacks[[i]], list(StackPred = StackPredictions))


	  } else if (StackList[[i]]$Details$Goal == &quot;Ensemble Stack&quot;){
	    # Get all made predictions and take the mean and sd for the ensembled stack predictions
	    StackPredictions &lt;- lapply(BuildStacks[[i]], function(x) {
							                         if (!is.null(names(x)) &amp;&amp; !is.na(names(x)) &amp;&amp; length(grep(&apos;.*Predictions$&apos;, names(x))) &gt; 0 ){x[[grep(&apos;.*Predictions$&apos;, names(x))]][,1]}})
	    StackPredictions &lt;- matrix(unlist(StackPredictions), ncol = length(grep(&apos;.*Model.*&apos;, names(BuildStacks[[i]]))))
		StackPred &lt;- cbind(apply(StackPredictions, 1, function(x) mean(x)), apply(StackPredictions, 1, function(x) sd(x)))
	    colnames(StackPred) &lt;- c(paste(&quot;stack&quot;, i, &quot;Pred&quot;, sep  = &quot;&quot;), paste(&quot;stack&quot;, i, &quot;StdDev&quot;, sep  = &quot;&quot;))
	    BuildStacks[[i]] &lt;- append(BuildStacks[[i]], list(StackPred = StackPred))
	  }
    } else if (StackList[[i]]$Details$Goal == &quot;Keep Best Model&quot;){
	  # Check if best model was already determined, otherwise give error
	  if (length(StackList[[i]]) &gt; 2 &amp;&amp; is.null(StackList[[i]]$Details$BestModel)){
		stop(&quot;Best Model has not been determined yet&quot;)
	  } else if (length(StackList[[i]]) == 2){
		StackList[[i]]$Details$BestModel &lt;- 2
	  }
	  BuildStacks[[i]] &lt;- append(BuildStacks[[i]], list(list(Model = PreBuildStack[[i]][[1]]$Model, TypeOfModel = PreBuildStack[[i]][[1]]$TypeOfModel, Features = PreBuildStack[[i]][[1]]$Features)))
	  names(BuildStacks[[i]])[length(BuildStacks[[i]])] &lt;- &quot;BestModel&quot;
      BuildStacks[[i]][[1]] &lt;- append(BuildStacks[[i]][[1]], list(Predictions = as.matrix(PredictForModel(xy, BuildStacks[[i]][[1]]$Features, model = BuildStacks[[i]][[1]]$Model, 
																										  TypeOfModel = BuildStacks[[i]][[1]]$TypeOfModel, 
																										  IsClassification))))
	 
	  # Single Prediction determination and plot
	  if (paste(&quot;$(LearnedPropertyName)&quot;, &quot;_ExplainPredictions&quot;, sep = &quot;&quot;) %in% unlist(c(strsplit(&quot;$(Model Output)&quot;, &quot;,&quot;)))){
		predictor &lt;- PreBuildStack[[i]][[1]]$Predictor
		X &lt;- xy[,BuildStacks[[i]][[1]]$Features, drop = F]
		if (&quot;$(AnalysisMethod)&quot; == &quot;Shapley&quot;){
		  shapley = Shapley$new(predictor, x.interest = X)
		  # Plot Shapley Analysis
		  png(filename = Files[Files[,1] == paste(&quot;RPredictionsAnalysisFile&quot;, FileIndex, sep = &quot;&quot;),2], width = 600, height = 10*length(X))
	
		  par(pty=&quot;s&quot;)

		  print(shapley$plot())

		  dev.off()
		  FileIndex &lt;- FileIndex + 1
		} else{
		  lime.explain = LocalModel$new(predictor, k = length(X), x.interest = X)

		  # Plot LocalModel Analysis
		  png(filename = Files[Files[,1] == paste(&quot;RPredictionsAnalysisFile&quot;, FileIndex, sep = &quot;&quot;),2], width = 800, height = 900)
	
		  par(pty=&quot;s&quot;)

		  print(plot(lime.explain))

		  dev.off()
		  FileIndex &lt;- FileIndex + 1
		}
	  }

	  StackPred &lt;- BuildStacks[[i]][[1]]$Predictions
	  colnames(StackPred) &lt;- paste(&quot;stack&quot;, i, colnames(BuildStacks[[i]][[1]]$Predictions), sep  = &quot;&quot;)
	  BuildStacks[[i]] &lt;- append(BuildStacks[[i]], list(StackPred = StackPred))
    }

	# Write predictions to xy and xnames for further stacks to use
	xy &lt;- cbind(xy[xnames[!(xnames %in% toremove)]], BuildStacks[[i]]$StackPred)
	xnames &lt;- c(xnames[!(xnames %in% toremove)], colnames(BuildStacks[[i]]$StackPred))
	toremove &lt;- colnames(BuildStacks[[i]]$StackPred)
  }

  return(BuildStacks)
}

x &lt;- x[xnames]

if (PerformPreprocess) {
  x &lt;- predict(Process, x)
}

predicted &lt;- buildStack(x, xnames, StackList = ModelBuild, IsClassification, PreBuildStack = Stacks)

pred &lt;- as.data.frame(predicted[[length(predicted)]]$StackPred[,1])
colnames(pred) &lt;- &quot;X&quot;



x &lt;- pred  # Needed to get name right in output

results &lt;- data.frame(x, RModelRecordID, check.names=FALSE)
write.table(results, file=OutputFileString, sep=&quot;\t&quot;, col.names=T, row.names=F, quote=F, append = FALSE)



</sci:value>
							</sci:arg>
							<sci:arg name="InputFrame" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Name to use in R script for data.frame containing input data.  Data in this frame will be sent out the pass port on completion of the script.</sci:help>
								<sci:value>AllData</sci:value>
							</sci:arg>
							<sci:arg name="ResultsFrame" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Name to use in R script for data.frame containing calculation results, which will be sent out the fail port.</sci:help>
								<sci:value>Results</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>PlotWidth</sci:member>
								<sci:member>PlotHeight</sci:member>
								<sci:member>ShowRInputOutput</sci:member>
								<sci:member>R Functions Source</sci:member>
							</sci:arg>
							<sci:arg name="R Functions Source" type="URLType" required="false" visibility="visible" multi="false">
								<sci:help>Optional name of a file containing an R script or custom R functions you wish to use in the Script.  This file will be sourced in R before the Script is executed.
</sci:help>
								<sci:member>Embed External Scripts</sci:member>
							</sci:arg>
							<sci:arg name="Embed External Scripts" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>If True, indicates that the scripts specified by &lt;i&gt;R Functions Source&lt;/i&gt; are to be embedded in the R script created by this component. This can be useful for debugging purposes. If False, the scripts are concatenated into a separate temporary file that is executed using the R source() function.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="PlotWidth" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>Width in pixels of any plots created by the script</sci:help>
								<sci:value>600</sci:value>
							</sci:arg>
							<sci:arg name="PlotHeight" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>Height in pixels of any plots created by the script</sci:help>
								<sci:value>600</sci:value>
							</sci:arg>
							<sci:arg name="ShowRInputOutput" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>Specify whether or not to show the R script and the R stdout in Notepad viewers</sci:help>
								<sci:legalval>Script</sci:legalval>
								<sci:legalval>StdOutput</sci:legalval>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="TextType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:value>RExitStatus,PlotName,RFunctionsFile,ShowRScript,ShowRStdOutput,RDir,ScriptPrefix,ScriptSuffix,RParScript,RPlotWidth,RPlotHeight,RplotPrefix,stderr,ExternalScript</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:value>$(R_Run_Remote)</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>100000000</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
								<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>$(R_Server)</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Rmodelfile" type="DestinationURLType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:value>$(UserDir)/PP/For open Prediction/TemporalSplitIon2009</sci:value>
							</sci:arg>
							<sci:arg name="LearnedPropertyName" type="StringType" required="false" visibility="visible" multi="false">
								<sci:value>Aff_NET_Pred</sci:value>
							</sci:arg>
							<sci:arg name="AnalysisMethod" type="StringType" required="false" visibility="visible" multi="false">
								<sci:legalval selected="true">Shapley</sci:legalval>
								<sci:legalval>LocalModel</sci:legalval>
							</sci:arg>
							<sci:arg name="Model Output" type="StringType" required="false" visibility="visible" multi="true">
								<sci:legalval selected="true">Aff_NET_Pred</sci:legalval>
								<sci:legalval>Aff_NET_Pred_ExplainPredictions</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Jul 20 12:16:31 2017</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>R Custom Script</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{140C906F-960F-4DCD-84FD-D7DBF7277F0D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1242 -1195</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Executes R script</sci:value>
								<sci:value>Use this component to write your own custom R script for operating on incoming data records. All records coming into the component are put into an R data frame whose name is given by &lt;i&gt;InputFrame&lt;/i&gt;.  After your script has executed, the data in this frame are sent out the Pass port, including any changes made to the frame within the R script.
&lt;p&gt;
Any plots created in your script are sent out the Fail port and can be viewed with the &lt;a href=&quot;javascript:DoLink(&apos;{45979297-7C23-4374-BE33-1424E90A09A6}&apos;)&quot;&gt;R Plot Viewer&lt;/a&gt;.
&lt;p&gt;
If your R script creates a data frame with the name given by &lt;i&gt;ResultsFrame&lt;/i&gt;, the data in this frame are also  sent out the Fail port.  (You may wish to use this frame for summary statistics, for example.)
&lt;p&gt;
&lt;b&gt;Hints on manipulating R data frames&lt;/b&gt;
&lt;p&gt;
Assume that the &lt;i&gt;InputFrame&lt;/i&gt; name is &quot;AllData&quot; and that there are three properties -- ALogP, prop1, and Property 2 -- defined on each Pipeline Pilot data record (in that order).  Within the R script, you can refer to the ALogP values in any of the following ways:
&lt;p&gt;
&lt;code&gt;
ALogP&lt;br&gt;
AllData$ALogP&lt;br&gt;
AllData[&quot;ALogP&quot;]
AllData[1]&lt;br&gt;
AllData[,1]&lt;br&gt;
AllData[[1]]&lt;br&gt;
&lt;/code&gt;
&lt;p&gt;
Note that the following assignment in R does not change the value of ALogP within the AllData frame:
&lt;p&gt;
&lt;code&gt;ALogP &amp;lt;- ALogP + 0.5&lt;/code&gt;
&lt;p&gt;
while the following assignment does change the value within the frame:
&lt;p&gt;
&lt;code&gt;AllData$ALogP &amp;lt;- ALogP + 0.5&lt;/code&gt;
&lt;p&gt;
(The reason for this behavior is that after the data are read into R but before your script is executed, the &lt;code&gt;attach&lt;/code&gt; function is called on the data frame.  This allows you to refer to columns in the frame by column name alone, but any changes you make to the column name variables are made outside the frame.)
&lt;p&gt;
Properties with embedded spaces or special R characters such as &quot;#&quot; must always be quoted if referred to by name:
&lt;p&gt;
&lt;code&gt;AllData$&quot;Property 2&quot;&lt;/code&gt;
&lt;p&gt;
To add a new column to the frame, use the cbind function:
&lt;p&gt;
&lt;code&gt;AllData &amp;lt;- cbind(AllData, LogPCalc=ALogP+0.5)&lt;/code&gt;
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;Molecular structures are ignored by this component and will not be passed through. 
&lt;li&gt;An array property with N elements on an input data record will be converted to N scalar properties in order that the records conform to the R data frame structure.
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more information on writing R scripts, see &lt;a href=&quot;javascript:DoLink(&apos;http://cran.r-project.org/doc/manuals/R-intro.html&apos;)&quot;&gt;An Introduction to R&lt;/a&gt;.
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/rstats/docs/r_stats.pdf&apos;)&quot;&gt;R Statistics Components User Guide &lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://www.r-project.org/&apos;)&quot;&gt;R Project for Statistical Computing Web Site&lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://finzi.psych.upenn.edu/search.html&apos;)&quot;&gt;R Help Search Web Site&lt;/a&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.0.1523</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
								<sci:legalval>Cant Replace With Copy</sci:legalval>
								<sci:legalval>Cant Open</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/rstats</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Analysis and Statistics\R Statistics\Manipulators\R Custom Script</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Check R exe" version="2">
									<sci:arg name="Error Behavior" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies action to take in case of a problem with the Pipeline Pilot R configuration. Options are:
&lt;ul&gt;
&lt;li&gt;Default: For fatal errors such as a missing R executable, show a message in a dialog and halt the protocol if running from Pipeline Pilot; raise an exception if running from another client such as Web Port. For a non-fatal error such as an unsupported R version, show a message but do not halt the protocol if running from Pipeline Pilot; do nothing if running from another client.
&lt;li&gt;Message out Fail Port: For any type of error, send a message out the fail port in a property named &lt;b&gt;ErrorText&lt;/b&gt;. Do not raise an exception or display a message.
&lt;/ul&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If the global property @SuppressRVersionWarning is set to True, no message is shown in the &quot;Default&quot; case for unsupported R versions.
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Default</sci:legalval>
										<sci:legalval>Message out Fail Port</sci:legalval>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
										<sci:value>ver,ErrorText,EnvOverride</sci:value>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>When the network runs, processes once or until done for each process call</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval>ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
										<sci:legalval>Cant Replace With Copy</sci:legalval>
										<sci:legalval>Cant Open</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/rstats</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Fri Jun 02 08:18:08 2017</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Check R exe</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>ComponentNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{320AE9ED-071D-4ad7-AE87-2D692FAED359}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -95</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Check R executable</sci:value>
										<sci:value>Checks that the global variable &apos;R_exe&apos;, which points to the location of the R executable, is defined, and that the R executable file is in the location specified by R_exe. </sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
										<sci:value>None</sci:value>
										<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>18.1.0.1468</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Modified</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Check R exe</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>#tempBoolean := ((globalProperty(&quot;SuppressRVersionWarning&quot;) is not defined) or
                (globalProperty(&quot;SuppressRVersionWarning&quot;) = false)) and 
				((globalProperty(&quot;SuppressRVersionWarningLocal&quot;) is not defined) or
                (globalProperty(&quot;SuppressRVersionWarningLocal&quot;) = false));
globalProperty(&quot;SuppressRVersionWarningLocal&quot;) := true;
#tempBoolean;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Only show the message once per protocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>2106 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@NoUI is defined and @NoUI</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>2394 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>%VERSION 3%</sci:value>
												<sci:value>2329 -420 499 134</sci:value>
												<sci:value>255 255 0</sci:value>
												<sci:value>Do nothing if @NoUI</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>15</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Non-blocking Message (VBScript)" version="2">
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
												<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
												<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="Message" type="ExpressionType" required="false" visibility="visible" multi="false">
												<sci:help>The message body to display to the user</sci:help>
												<sci:value>&quot;The R version at &quot; . @R_exe . &quot; (version &quot; . @ver . 
&quot;) is not supported. Supported versions are 2.15.x, 3.0.x, 3.1.x, 3.2.x, 3.3.x, and 3.4.x. Your protocol will continue to run, but you may obtain unexpected results. Set the global property @SuppressRVersionWarning to True to suppress this message.&quot;</sci:value>
											</sci:arg>
											<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>The message title to display to the user</sci:help>
												<sci:value>R version not supported</sci:value>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Oct 12 11:58:18 2015</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Non-blocking Message</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>true</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ViewerNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{A27DAC8B-8CFE-4c55-A0EB-7590323E263F}</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>2682 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>NON-BLOCKING MESSAGE WRITER</sci:value>
												<sci:value>A non-blocking message writer that supports VBScript syntax.</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>16.1.0.1058</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Prototypes\Scripting\Non-blocking Message (VBScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol/>
									</sci:data>
									<sci:data object="SciTegic.RunProgram.1">
										<sci:component name="Run Program (on Server)" version="2">
											<sci:arg name="CommandLine" type="TextType" required="true" visibility="visible" multi="false">
												<sci:help>Command line for application or file to execute on the server machine.</sci:help>
												<sci:value>&quot;$(R_exe)&quot; --version</sci:value>
											</sci:arg>
											<sci:arg name="Result Properties" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>Parameters for assigning results to properties.</sci:help>
												<sci:member>PropertyForExitStatus</sci:member>
												<sci:member>StderrProperty</sci:member>
												<sci:member>StdoutProperty</sci:member>
												<sci:member>StdinProperty</sci:member>
												<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="StdinProperty" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Defines the property name that holds the desired value of the program&apos;s standard input (stdin). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
												<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="StdoutProperty" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Defines the property name that will hold the program&apos;s standard output (stdout). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
												<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
												<sci:value>stdout</sci:value>
											</sci:arg>
											<sci:arg name="StderrProperty" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Defines the property name that will hold the program&apos;s standard error (stderr). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
												<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
												<sci:value>stderr</sci:value>
											</sci:arg>
											<sci:arg name="PropertyForExitStatus" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Defines the property name to hold the value of the program exit status code. Denote a global property with a leading @ character.
Note that this property can only be defined if WaitForExit is set to True.</sci:help>
												<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set WaitForExit to &quot;True&quot;&apos;);
	Parameter(&apos;WaitForExit&apos;) eq &apos;True&apos;;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>Contains less commonly used parameters</sci:help>
												<sci:member>UseCommandInterpreter</sci:member>
												<sci:member>Environment</sci:member>
												<sci:member>WaitForExit</sci:member>
												<sci:member>Evaluate Parameters for Each Record</sci:member>
											</sci:arg>
											<sci:arg name="WaitForExit" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>Whether or not to wait for the program to finish before returning from the process call.  This parameter must be set to True for StdinProperty, StdoutProperty, StderrProperty, or PropertyForExitStatus to function.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Environment" type="LinkGlobalPropertyType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
												<sci:metaproplist>
													<sci:propval name="SCI_InitializeUsingRevertInfo" ishidden="true" base64="UI1">Al1HAAKtAjxwPlNwZWNpZmllcyBhZGRpdGlvbmFsIGVudmlyb25tZW50IHZhcmlhYmxlIHNldHRpbmdzIHRoYXQgd2lsbCBiZSB1c2VkIGJ5IHRoZSBzcGF3bmVkIHByb2Nlc3MuICBTcGVjaWZ5IGVhY2ggc2V0dGluZyBvbiBhIGxpbmUgYnkgaXRzZWxmIGFzIDxicj48c2FtcD52YXJpYWJsZT1uYW1lPC9zYW1wPjxwLz4KVGhlIHNwYXduZWQgcHJvY2VzcyB3aWxsIGluaGVyaXQgdGhlIGV4aXN0aW5nIGVudmlyb25tZW50IG9mIHRoZSBwcm90b2NvbCBqb2IgcHJvY2VzcywgYW5kIGFueSBzZXR0aW5ncyBoZXJlIHdpbGwgYmUgYXBwZW5kZWQgdG8gdGhlIHZhcmlhYmxlIGxpc3QuICBUbyBtYWtlIHVzZSBvZiBhbiBleGlzdGluZyB2YXJpYWJsZSwgc3Vycm91bmQgdGhlIHZhcmlhYmxlIG5hbWUgd2l0aCBwZXJjZW50IHNpZ25zIChlLmcuIHRvIHByZXBlbmQsIHVzZSBzb21ldGhpbmcgbGlrZTxici8+IDxzYW1wPlBBVEg9YzpcbXlkaXI7JVBBVEglPC9zYW1wPjxwLz4KTm90ZSB0aGF0IHRoaXMgc3ludGF4IHNob3VsZCBiZSB1c2VkIHdpdGggYm90aCBXaW5kb3dzIGFuZCBMaW51eCBzZXJ2ZXJzLiAgRHVlIHRvIE9TIGRlc2lnbnMsIGVudmlyb25tZW50IHZhcmlhYmxlcyBhcmUgY2FzZSBpbnNlbnNpdGl2ZSBvbiBXaW5kb3dzIHNlcnZlcnMgYW5kIGNhc2Ugc2Vuc2l0aXZlIG9uIExpbnV4IHNlcnZlcnMuPC9wPiRUZXh0VHlwZQAIAAAAAQEAAQAEAPwAAAAAAAAAAAAwRW52aXJvbm1lbnQDzFPPuwQA</sci:propval>
													<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">TextType</sci:propval>
													<sci:propval name="SCI_EvalOnInit" ishidden="true" boolVal="true"/>
													<sci:propval name="SCI_EvalOnInitType" ishidden="true">TextType</sci:propval>
												</sci:metaproplist>
												<sci:help>&lt;p&gt;Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &lt;br&gt;&lt;samp&gt;variable=name&lt;/samp&gt;&lt;p/&gt;
The spawned process will inherit the existing environment of the protocol job process, and any settings here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. to prepend, use something like&lt;br/&gt; &lt;samp&gt;PATH=c:\mydir;%PATH%&lt;/samp&gt;&lt;p/&gt;
Note that this syntax should be used with both Windows and Linux servers.  Due to OS designs, environment variables are case insensitive on Windows servers and case sensitive on Linux servers.&lt;/p&gt;</sci:help>
												<sci:value>EnvOverride</sci:value>
											</sci:arg>
											<sci:arg name="UseCommandInterpreter" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>Whether or not to add &quot;cmd.exe /c&quot; (or &quot;/bin/sh -c&quot; on Linux servers) to the command line.  This causes the command line to be interpreted through the operating systems standard command shell allowing the use of redirection specifiers such as &apos;&amp;gt;&apos; and &apos;&amp;lt;&apos; and piping via &apos;|&apos;.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Evaluate Parameters for Each Record" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;
Set this parameter to True if the component has an input port and you need to re-evaluate the values of the other parameters for each record that is passed into the component.&lt;p/&gt;
This allows you to set a different command line for each record. You can do this by using a global property token in the command line.&lt;br/&gt;
Example (where &lt;samp&gt;dataname&lt;/samp&gt; is a global property):&lt;br/&gt;
&lt;samp&gt;/home/goober/bin/calibrate $(dataname)&lt;/samp&gt;
&lt;p&gt;
If you change the parameter type of the CommandLine parameter to be an Expression, you can define an expression that includes values of data properties on each incoming record.&lt;br/&gt;
Example (where &lt;samp&gt;dataset_id&lt;/samp&gt; and &lt;samp&gt;limit&lt;/samp&gt; are data record properties):&lt;br/&gt;
&lt;samp&gt;&apos;/home/goober/bin/calibrate &apos;.dataset_id.&apos; -max &apos;.limit&lt;/samp&gt;
&lt;/p&gt;</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Componet Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/integration</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Tue Apr 03 17:17:22 2007</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{1479A29D-F184-4979-BF60-2AA823D48831}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Run Program (on Server)</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Run Program</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>666 -295</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>COMPONENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Runs a command line application on the server machine.</sci:value>
												<sci:value>&lt;p&gt;Define the command line by entering text as you would in a command prompt window.  On Windows servers, the component includes facilities for looking up a program name in the Windows registry. It can interpret a program name as a ProgID, such as &quot;InternetExplorer.Application&quot;, or as a shell command, such as &quot;IsisServer&quot;, or as a document to load into an associated program, such as &quot;c:\spreadsheet.xls&quot;.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;CommandLine&lt;/i&gt;: The command that the component will run. The correct syntax is the full command line exactly as you would type it in a shell command window. On Windows servers, the first space- or quote-delimited item of the command line can be a ProgId, such as &quot;InternetExplorer.Application&quot;.  This starts up Internet Explorer (IE) without having to specify the path to IE explicitly. Shell command associations are also supported, so &quot;IsisServer&quot; will start Isis Draw. Finally, there is support for file associations, so the path &quot;D:\docs\notes.doc&quot; will start Microsoft Word and load the specified document.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;WaitForExit&lt;/i&gt;: When TRUE, the data pipeline is blocked until the command has completed.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;PropertyForExitStatus&lt;/i&gt;: Allows you to assign the exit status of the command to a global property or to a data record property. Use either a global or local property reference, such as @status or status.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;UseCommandInterpreter&lt;/i&gt;: When True, parses the command line through the command interpreter on the remote server (with a shell such as csh or bash on Linux servers or the interpreter cmd.exe on Windows servers). In particular, this needs to be set to True if the CommandLine utilizes standard output or input (such as cmd.exe /c &amp;quot;c:\Program Files\R\rterm.exe&amp;quot; &amp;quot;0&amp;lt;$(CommandFile)&amp;quot;).&lt;/p&gt;
&lt;p&gt;&lt;i&gt;StdinProperty, StdoutProperty, and StderrProperty&lt;/i&gt;: Allows you to redirect standard communications to global properties or to data record properties. Use either a global or local property reference, such as @stdin or stdin.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Environment&lt;/i&gt;: Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &quot;variable=name&quot;.  The spawned process will inherit the existing environment of the PipelinePilot process, and any settings defined here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. &quot;PATH=c:\mydir;%PATH%&quot;).  Due to differences in the operating systems, these variables are case insensitive on Windows servers, but case sensitive on Linux servers.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt; If your command line includes a file path, create a new parameter for the component, of type URL, so the user can enter the path. Then use a token replacement in the CommandLine to pick up the value. For example: Notepad.exe &quot;$(SciTegicRoot)\$(Path)&quot;. &lt;/li&gt;
&lt;li&gt;When the component is separated from any other pipeline, the command line is run just once.&lt;/li&gt; 
&lt;li&gt;You can add an input or output pass port to the component, to integrate it with a pipeline. If there is an output port, but no input port, the command is run once and a single new record is generated. If there is an input port, then the command is run once for each data record passed in.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;See Also:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/integration/docs/server_side/integration_command_line.pdf&apos;)&quot;&gt;
Command-line Integration Guide&lt;/a&gt;&lt;/p&gt;
</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>6.1.0.14</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Database and Application Integration\Application Integration\Command Line\Run Program (on Server)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>/* Version info comes in stderr on Windows, stdout on linux */
info := stderr;
if stringlen(stderr) &lt; 10 then 
	info := stdout;
end if;

info := tolower(info);

#verloc := findsubstring(info, &apos;r version&apos;);
if #verloc &lt; 1 then
	@ver := &apos;unknown&apos;;
else
	@ver := trim(substring(info, #verloc + 10, 6));
end if;
</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Apr 23 12:20:45 2007</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Get R version</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ExpressionNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>954 -295</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>6.1.0.17</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>3</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@ver eq &apos;2.15.0&apos; or @ver eq &apos;2.15.1&apos; or @ver eq &apos;2.15.2&apos; or @ver eq &apos;2.15.3&apos; or @ver eq &apos;3.0.0&apos; or @ver eq &apos;3.0.1&apos; or @ver eq &apos;3.0.2&apos; or @ver eq &apos;3.0.3&apos; or @ver eq &apos;3.1.0&apos; or @ver eq &apos;3.1.1&apos; or @ver eq &apos;3.1.2&apos; or @ver eq &apos;3.1.3&apos; or @ver eq &apos;3.2.0&apos; or @ver eq &apos;3.2.1&apos; or @ver eq &apos;3.2.2&apos; or @ver eq &apos;3.2.3&apos; or @ver eq &apos;3.2.4&apos; or @ver eq &apos;3.2.5&apos; or @ver eq &apos;3.2.6&apos; or @ver eq &apos;3.2.7&apos; or @ver eq &apos;3.2.8&apos;  or @ver eq &apos;3.3.1&apos;  or @ver eq &apos;3.3.2&apos; or @ver eq &apos;3.3.3&apos; or @ver eq &apos;3.3.4&apos; or @ver eq &apos;3.4.0&apos; or @ver eq &apos;3.4.1&apos; or @ver eq &apos;3.4.2&apos; or @ver eq &apos;3.4.3&apos; or @ver eq &apos;3.4.4&apos;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Confirm version is supported</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FilterNode</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1242 -295</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>4</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>if @&apos;Error Behavior&apos; ne &apos;Default&apos; then
	ErrorText := &quot;The R version at &quot; . @R_exe . &quot; (version &quot; . @ver . &quot;) is not supported. Supported versions are 2.15.x, 3.0.x, 3.1.x, 3.2.x, 3.3.x, and 3.4.x. Your protocol will continue to run, but you may obtain unexpected results.&quot;;
	keep(&apos;ErrorText&apos;);
end if;

@&apos;Error Behavior&apos; eq &apos;Default&apos;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1530 -295</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>20</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@NoUI == false</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Make sure we have a UI</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FilterNode</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1818 -295</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>5</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>fileexists(&apos;$(R_exe)&apos;)= true</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
												<sci:value>@EnvOverride := &apos;LD_LIBRARY_PATH=&apos;;
if @R_LD_LIBRARY_PATH is defined then
	@EnvOverride .= @R_LD_LIBRARY_PATH;
end if;
</sci:value>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Check R_exe file exists</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FilterNode</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>378 -470</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>6</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.PropertyFunctions.1">
										<sci:component name="Data to Pass Port" version="2">
											<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
												<sci:legalval selected="true">LeaveData</sci:legalval>
												<sci:legalval>ClearData</sci:legalval>
												<sci:legalval>DeleteData</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:help>the action to perform</sci:help>
												<sci:value>PassDataToPort</sci:value>
											</sci:arg>
											<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>the port to pass data to</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FilterNode</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Mar 29 17:36:03 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Data to Pass Port</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Evaluate Expression</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{3162E91B-4C82-4303-BCF1-C4D59B36709E}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>2106 -470</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Directs records to the Pass port for use in subprotocol building.</sci:value>
												<sci:value>Useful in a subprotocol for directing records that are passing through components in the subprotocol to the Pass port of the subprotocol.</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value>All data records</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.0.4.0</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>7</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Data to Pass Port</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@R_exe is defined</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval>ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Apr 23 12:21:34 2007</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Check R_exe 
is defined</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FilterNode</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -820</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax and can only be accessed by token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>8</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">6.1.0.17</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>ErrorText := &quot;Could not find R executable specified by the global property R_exe:\n&quot; . @R_exe . &quot;\nPlease ask your system administrator to verify the R installation and Pipeline Pilot configuration.&quot;;

keep(&apos;ErrorText&apos;);
@ErrorText := ErrorText;

if @&apos;Error Behavior&apos; eq &apos;Default&apos; then
	if @NoUI is defined and @NoUI then
		error(ErrorText);
	end if;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>666 -820</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>14</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@&apos;Error Behavior&apos; eq &apos;Default&apos;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>954 -820</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>19</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Display Message and Halt Protocol" version="2">
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="MessageTitle" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>The title of the message box that will appear</sci:help>
												<sci:value>R executable not found</sci:value>
											</sci:arg>
											<sci:arg name="MessageText" type="ExpressionType" required="false" visibility="visible" multi="false">
												<sci:help>Specifies the message to display as a PilotScript expression. Text should be
quoted and global property values can also be included in the
PilotScript expression.</sci:help>
												<sci:value>@ErrorText</sci:value>
											</sci:arg>
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
												<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
												<sci:value>mText</sci:value>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
												<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/rstats</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Dec 10 13:47:32 2007</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Display Message and halt protocol</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>true</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ViewerNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{607A29EE-DD7C-4a7b-80FB-3EEADBD4F4EE}</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1242 -820</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolCommentSize" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>ProtocolCommentSize</sci:help>
												<sci:value>1100 500</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Displays a dialog box with a message and an OK button on the client. 
</sci:value>
												<sci:value>Displays a dialog box with a message and an OK button on the client. The message can contain information from global variables.</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.27</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>9</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Display Message and Halt Protocol</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol/>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>ErrorText := &quot;The global property &apos;R_exe&apos; is not defined. This property specifies the location of the R executable.\nPlease ask your administrator to set this property in the Pipeline Pilot Administration Portal&quot;;

@ErrorText := ErrorText;

if @&apos;Error Behavior&apos; eq &apos;Default&apos; then
	if @NoUI is defined and @NoUI then
		error(ErrorText);
	end if;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>378 -1195</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>13</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@&apos;Error Behavior&apos; eq &apos;Default&apos;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>666 -1195</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>18</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Display Message and Halt Protocol" version="2">
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="MessageTitle" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>The title of the message box that will appear</sci:help>
												<sci:value>R_exe not defined</sci:value>
											</sci:arg>
											<sci:arg name="MessageText" type="ExpressionType" required="false" visibility="visible" multi="false">
												<sci:help>Specifies the message to display as a PilotScript expression. Text should be
quoted and global property values can also be included in the
PilotScript expression.</sci:help>
												<sci:value>@ErrorText</sci:value>
											</sci:arg>
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
												<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
												<sci:value>mText</sci:value>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
												<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/rstats</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Dec 10 13:47:32 2007</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Display Message and halt protocol</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>true</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ViewerNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{607A29EE-DD7C-4a7b-80FB-3EEADBD4F4EE}</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>954 -1195</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolCommentSize" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>ProtocolCommentSize</sci:help>
												<sci:value>1100 500</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Displays a dialog box with a message and an OK button on the client. 
</sci:value>
												<sci:value>Displays a dialog box with a message and an OK button on the client. The message can contain information from global variables.</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.27</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Make Shortcut by Default</sci:legalval>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>10</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Display Message and Halt Protocol</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol/>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>/* Define location of prefix script for all R scripts, containing common utility functions. */
@RFunctionsFile := strreplace(&apos;$(/scitegic/rstats/RCode)/RFunctions.R&apos;, &apos;\&apos;, &apos;/&apos;);

if @R_PlotWidth is defined then
	@RPlotWidth := @R_PlotWidth;
elsif @&apos;Chart Options Width&apos; is defined then
	@RPlotWidth := @&apos;Chart Options Width&apos;;
else
	@RPlotWidth := 600;
end if;

if @R_PlotHeight is defined then
	@RPlotHeight := @R_PlotHeight;
else
	if @R_PlotWidth is defined then
		@RPlotHeight := @R_PlotWidth;
	elsif @&apos;Chart Options Height&apos; is defined then
		@RPlotHeight := @&apos;Chart Options Height&apos;;
	else
		@RPlotHeight := 600;
	end if;
end if;

if @R_par is defined then
	@RParScript := &apos;par(&apos; . @R_par . &quot;)\n&quot;;
else
	@RParScript := &apos; &apos;;
end if;

if @R_par_local is defined then 
	@RParScript .= &apos;par(&apos; . @R_par_local . &quot;)\n&quot;;
end if;

if @R_par_custom is defined then 
	@RParScript .= &apos;par(&apos; . @R_par_custom . &quot;)\n&quot;;
end if;

/* Backward compatibility for components with PlotWidth,
PlotHeight, and PlotFontSize. */

if @PlotWidth is defined then
	@RPlotWidth := @PlotWidth;
end if;

if @PlotHeight is defined then
	@RPlotHeight := @PlotHeight;
end if;

if @PlotFontSize is defined then
	@RParScript .= &quot;par(ps=&quot; . @PlotFontSize . &quot;)\n&quot;;
end if;

if @PlotName is not defined then 
	@PlotName := &apos;Rplot&apos;;
end if;
</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval>ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Define functions file and R plot globals</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -1545</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>11</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:connectid from="0" to="15" type="true"/>
									<sci:connectid from="0" to="7" type="false"/>
									<sci:connectid from="15" to="1" type="false"/>
									<sci:connectid from="2" to="3" type="true"/>
									<sci:connectid from="3" to="4" type="true"/>
									<sci:connectid from="4" to="20" type="false"/>
									<sci:connectid from="20" to="5" type="true"/>
									<sci:connectid from="5" to="0" type="true"/>
									<sci:connectid from="5" to="7" type="false"/>
									<sci:connectid from="6" to="2" type="true"/>
									<sci:connectid from="6" to="14" type="false"/>
									<sci:connectid from="8" to="6" type="true"/>
									<sci:connectid from="8" to="13" type="false"/>
									<sci:connectid from="14" to="19" type="true"/>
									<sci:connectid from="19" to="9" type="true"/>
									<sci:connectid from="13" to="18" type="true"/>
									<sci:connectid from="18" to="10" type="true"/>
									<sci:version iVal="1"/>
								</sci:protocol>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>@ShowRScript := false;
@ShowRStdOutput := false;
for #i in 1 .. numvalues(@ShowRInputOutput) loop
   #s := @ShowRInputOutput[#i];
   if (#s eq &quot;Script&quot;) then 
      @ShowRScript := true;
   end if;
   if (#s eq &quot;StdOutput&quot;) then 
      @ShowRStdOutput := true;
   end if;
end loop;

@RDir := strreplace(@RunDirectory, &apos;\&apos;, &apos;/&apos;);
@RDir .= &apos;/temp&apos;;
</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Set R I/O to display and ROutput</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>378 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>29</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.ClientTempFiles.1">
								<sci:component name="Create Tempfiles for R" version="2">
									<sci:arg name="Server Tempfiles" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma separated list of global parameter names (such as &quot;tmp1,tmp2&quot;) to assign with temporary filenames obtained from the server</sci:help>
										<sci:value>Rmodelfile, Rscriptfile, Rstdoutfile, Rinput1file, Rinput2file, Rinput3file, Rinput4file, Rinput5file, Routput1file,Routput2file, Routput3file, Routput4file, Routput5file</sci:value>
									</sci:arg>
									<sci:arg name="Client Tempfiles" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma separated list of global parameter names (such as &quot;ctmp1,ctmp2&quot;) to assign with temporary filenames obtained from the client</sci:help>
									</sci:arg>
									<sci:arg name="Force Forward Slashes" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Whether to force all server tempfiles to use forward slashes; this is useful if the temp file name is used to communicate with a external program that cannot handle backslashes on Windows</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>mhassan</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Jul 13 10:17:05 2004</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Create Tempfiles for R</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>ComponentNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{2BFBE007-9937-47EB-A9B4-B76491D99C59}</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Client Temp Filenames</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>666 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Obtains temporary filenames from the client or the server that are added to the global property list.</sci:value>
										<sci:value>&lt;p&gt;These names can be used later within the protocol as global variables within component parameters or as PilotScript expressions. For example, if your component executes on the client, but requires specific files to be present, you can create a temporary file named &quot;clientTmpFile1&quot; and later refer to it in a parameter or PilotScript entry via &quot;$(clientTmpFile1)&quot;.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Server Tempfiles&lt;/i&gt;: A comma-separated list of global parameter names to fill with temporary filenames obtained from the server.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Client Tempfiles&lt;/i&gt;: A comma-separated list of global parameter names to fill with temporary filenames obtained from the client.&lt;/p&gt;

&lt;p&gt;All files created in this way are deleted when the protocol is closed or, in the case of client tempfiles, when the client starts up again. (They are not permanent files.)&lt;/p&gt;</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>4.1.1.100</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Create Tempfiles for R</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Filter (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>The PilotScript expression used to filter the data.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>trim(@&apos;R Functions Source&apos;) ne &apos;&apos;</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval>ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/core</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 13 10:41:54 2003</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Any R script files?</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FilterNode</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Filter (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -470</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
										<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
										<sci:value>None</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>3</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.TextReader.1">
								<sci:component name="Text Reader" version="2">
									<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>The file or URL source to read</sci:help>
										<sci:member>Maximum</sci:member>
										<sci:member>SourceTag</sci:member>
										<sci:member>Keep Properties</sci:member>
										<sci:value>$(R Functions Source)</sci:value>
									</sci:arg>
									<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
									</sci:arg>
									<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.

 - None: No SourceTag property is created and any existing ones are removed.

 - Filename: The name of the file read.

 - FilenameAndExtension: The name of the file read with its file extension.

 - FullFilename: The name of the file read, including the directory path.

 - ZipFilename: When reading a compressed zip file, the filename within the compressed archive.

 - Number: When multiple files are read in this component, they are numbered 1,2,3...

 - Letter: When multiple files are read in this component, they are lettered A, B, C...

 - KeepCurrent: Keeps the current value of SourceTag.
</sci:help>
										<sci:legalval>None</sci:legalval>
										<sci:legalval>Filename</sci:legalval>
										<sci:legalval selected="true">FilenameAndExtension</sci:legalval>
										<sci:legalval>FullFilename</sci:legalval>
										<sci:legalval>ZipFilename</sci:legalval>
										<sci:legalval>Number</sci:legalval>
										<sci:legalval>Letter</sci:legalval>
										<sci:legalval>KeepCurrent</sci:legalval>
									</sci:arg>
									<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
										<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.
</sci:help>
									</sci:arg>
									<sci:arg name="DelimitUsing" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Specifies which delimiting mechanism to use:

 - EndOfFile: All text is one record.
 - EndOfParagraph: Each paragraph becomes a separate record.
 - EndOfLine: Each line becomes a separate record.
 - DelimitText: Uses the parameters BeginningText and/or EndingText.

</sci:help>
										<sci:member>BeginningText</sci:member>
										<sci:member>EndingText</sci:member>
										<sci:legalval selected="true">EndOfFile</sci:legalval>
										<sci:legalval>EndOfParagraph</sci:legalval>
										<sci:legalval>EndOfLine</sci:legalval>
										<sci:legalval>DelimitText</sci:legalval>
									</sci:arg>
									<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>The character indicating the beginning of a new record (only used when DelimitUsing set to &quot;DelimitText&quot;)</sci:help>
									</sci:arg>
									<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>The character indicating the end of a new record (only used when DelimitUsing is set to &quot;DelimitText&quot;)</sci:help>
									</sci:arg>
									<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:member>Binary</sci:member>
										<sci:member>KeepEndOfLine</sci:member>
										<sci:member>PutTextInProperty</sci:member>
									</sci:arg>
									<sci:arg name="PutTextInProperty" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies the name of the property list to hold the block of text</sci:help>
										<sci:value>Text</sci:value>
									</sci:arg>
									<sci:arg name="Binary" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>Whether to read the file as binary bytes or as text. The entire file is read into a single property, as given by PutTextInProperty. The parameters DelimitUsing, BeginningText, and EndingText are ignored if this is set True.
</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="KeepEndOfLine" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>Whether to keep the end of line character in the data when delimiting using end of line.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/core</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Fri Jan 21 11:19:34 2005</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Read R script files</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>378 -470</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>DocumentNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Text Reader</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Reads raw textual data.</sci:value>
										<sci:value>&lt;p&gt;Reads text files and creates a data record for each block of text. You can specify the delimiters 
  for the blocks. Each data record is stored in a single property.
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited 
  Text Reader&quot;. If the text file is formatted with one record per line, with the 
  data records separated by delimiters (such as Excel generated .csv file), use 
  the Delimited Text Reader instead. 

If delimit text is given, the text used to delimit must be identical to that of the text in the file. For instance, if the text in the file has five whitespaces before the alphanumeric text, the delimiting text string must also have five whitespaces.&lt;/p&gt;</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>5.0.0.1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>4</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\File Readers\Text Reader</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Tag Data" version="2">
									<sci:arg name="TagName" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Name of a new property to create to serve as a tag</sci:help>
										<sci:value>Tagged</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
									</sci:arg>
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
										<sci:value>$(TagName) := true;</sci:value>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)
</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="nevershow" multi="false">
										<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/core</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Tag Data</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>ComponentNode</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Evaluate Expression</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{BCF71EB2-1ED7-4B27-B263-BA531EABFC9C}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>666 -470</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Tags each record with a given property name for later identification.</sci:value>
										<sci:value>A new property is created for each incoming data record, defined with the value &quot;True&quot;. Records tagged in this way can easily be identified in future components by evaluating whether the new property is defined. This is useful for marking a data stream prior to combining it with another stream for learning, substructure search, and other operations. An alternative method for tagging records is available in most file readers which can tag the records with a SourceTag. </sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value>Data records with the additional tag property</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>4.1.1.400</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>5</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Add Tag Property</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.MergeProperties.1">
								<sci:component name="Merge Data" version="2">
									<sci:arg name="MergeUsing" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Name of the key property (or a comma-separated list of properties) that contain the value identifying those records to merge. If multiple &quot;MergeUsing&quot; names are given, all must be identical for a merge event to occur (unless MergeUsingList type is set to &quot;UseFirstDefinedValue&quot;).
</sci:help>
										<sci:member>IgnoreCase</sci:member>
										<sci:member>MergeUsingListType</sci:member>
										<sci:member>MergePropertyType</sci:member>
										<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
										<sci:value>Tagged</sci:value>
									</sci:arg>
									<sci:arg name="IgnoreCase" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &quot;MergeUsing&quot; propety values
</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>How &quot;MergeUsing&quot; properties are interpreted when  more than one property is listed:
 
    - UseFirstDefinedValue: Merges using only the first property in the list that has a defined value for a record.
 
  - UseAllValues: Merges using the concatentation of the values of all properties listed.</sci:help>
										<sci:legalval>UseFirstDefinedValue</sci:legalval>
										<sci:legalval selected="true">UseAllValues</sci:legalval>
									</sci:arg>
									<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Kinds of values found in the &quot;MergeUsing&quot; property:&lt;DL&gt;
&lt;DT&gt;&lt;b&gt;IsNumeric:&lt;/b&gt; &lt;DD&gt;All numbers are converted to doubles for comparison (so 1 = 1.0).
&lt;p&gt;
&lt;DT&gt;&lt;b&gt;IsText:&lt;/b&gt; &lt;DD&gt;All comparisons are made as string values.
&lt;p&gt; 
&lt;DT&gt;&lt;b&gt;IsDate:&lt;/b&gt; &lt;DD&gt;The key is considered a date
&lt;p&gt;
&lt;DT&gt;&lt;b&gt;IsFingerprint:&lt;/b&gt; &lt;DD&gt;The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.
&lt;/DL&gt;
</sci:help>
										<sci:legalval>IsNumeric</sci:legalval>
										<sci:legalval selected="true">IsText</sci:legalval>
										<sci:legalval>IsDate</sci:legalval>
										<sci:legalval>IsFingerprint</sci:legalval>
									</sci:arg>
									<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>What happens to the values of properties represented in more than one of the records being combined. Does not apply to the &quot;MergeUsing&quot; property.

 
   KeepAll - keeps all property values by appending additional values in an array.
 
  KeepFirst - keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the &apos;MergeUsing&apos; property are discarded.
 
</sci:help>
										<sci:member>WhenMerging</sci:member>
										<sci:member>KeepAllNullString</sci:member>
										<sci:member>KeepAllPreferredNodeName</sci:member>
										<sci:member>PrefixUsingProperty</sci:member>
										<sci:legalval selected="true">KeepAll</sci:legalval>
										<sci:legalval>KeepFirst</sci:legalval>
									</sci:arg>
									<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>When merging with KeepAll behavior, provides fine control over how multiple values are treated.
 
  - OverwriteOrCreate: copy all properties of each merging record sequentially, overwriting any values that may already exist (instead of generating an array). 
 
  - OverwriteExisting: Only copies properties that already exist on the first of the records merging together, overwriting those original values (instead of creating an array).
 
  - CreateIfNew: Leaves any existing properties alone, and writes only new properties.
 
  - AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.
 
  - AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.


</sci:help>
										<sci:legalval>OverwriteOrCreate</sci:legalval>
										<sci:legalval>OverwriteExisting</sci:legalval>
										<sci:legalval>CreateIfNew</sci:legalval>
										<sci:legalval selected="true">AppendOrCreate</sci:legalval>
										<sci:legalval>AppendExisting</sci:legalval>
									</sci:arg>
									<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>This string is used during append in &quot;KeepAll&quot; to pad out empty values. It keeps the generated arrays of values in sync for multiple samples. The value &quot;None&quot; causes no padding to occur.
</sci:help>
										<sci:value>None</sci:value>
									</sci:arg>
									<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>If defined, and the MergeBehavior is KeepAll, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first record with a given merge value is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.</sci:help>
										<sci:value>Molecule</sci:value>
									</sci:arg>
									<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).


</sci:help>
									</sci:arg>
									<sci:arg name="OutputFrequency" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Add a property called &quot;Frequency&quot; that contains the number of individual records included in the resulting merged record
</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/core</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed Jun 01 10:08:02 2005</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Merge Data</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Merge Data</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>JoinNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>954 -470</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Combines data records having the same value for a given property.
</sci:value>
										<sci:value>&lt;p&gt;Incoming data records are merged into a single data record if they have the 
  same value as each other for the &lt;em&gt;MergeUsing&lt;/em&gt; parameter. If multiple 
  MergeUsing names are given, all must be identical for a merge event 
  to occur. &lt;/p&gt;
&lt;p&gt;When &lt;em&gt;MergeBehavior&lt;/em&gt; is set to &amp;quot;KeepFirst&amp;quot;, the properties 
  of merged data records are appended in the form of an array, unless the &lt;em&gt;PrefixUsingProperty 
  &lt;/em&gt;parameter is set to prepend each property name on each data item. This 
  is often useful when merging multiple data files with a &lt;em&gt;SourceTag&lt;/em&gt; parameter 
  (available in many readers). &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;See Also: &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{2E21E16B-6901-46F3-8780-F14D3D7057CE}&apos;)&quot;&gt;
Merge Molecules&lt;/a&gt;: Merges records based on identical molecular structures.&lt;/p&gt;</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value>Data records that contain the properties being used for merging</sci:value>
										<sci:value>None</sci:value>
										<sci:value>Data records that do not contain the properties being used for merging</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>5.0.0.103</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>6</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge Data</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>newtext := &apos;&apos;;

for #i in 1 .. numvalues(Text) loop
	newtext .= &apos;####  &apos; . SourceTag[#i] . &quot;  ###\n&quot;;
	newtext .= Text[#i] . &quot;\n&quot;;
end loop;

keep(&apos;newtext&apos;);

if @&apos;Embed External Scripts&apos; then
	@ExternalScript := newtext;
end if;
</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/core</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Condense scripts into one</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>ExpressionNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1242 -470</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Executes PilotScript to modify data records.</sci:value>
										<sci:value>Executes custom PilotScript expression(s) for every data record that enters the component. Use this component to build new, specialized data manipulation components.

&lt;i&gt;Expression&lt;/i&gt; is evaluated for each data record and may alter the properties of the data objects. 

&lt;i&gt;Initial expression &lt;/i&gt; is evaluated the first time data passes into the component and is typically used for initializing global variables. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/p&gt;
 
</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>4.1.1.400</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>7</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.TextWriter.1">
								<sci:component name="Text Writer" version="2">
									<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>The filename for the destination data. Be sure to specify an extension such as .txt or .doc. To save in compressed (zipped) format, add the extension .gz to the filename.</sci:help>
										<sci:member>Maximum</sci:member>
										<sci:member>IfFileExists</sci:member>
										<sci:member>CharacterEncoding</sci:member>
										<sci:value>$(Rinput2file)</sci:value>
									</sci:arg>
									<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>The maximum number of data records to write (all if value is empty)</sci:help>
									</sci:arg>
									<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>What to do if the given destination file already exists</sci:help>
										<sci:legalval selected="true">Overwrite</sci:legalval>
										<sci:legalval>Append</sci:legalval>
										<sci:legalval>Halt</sci:legalval>
									</sci:arg>
									<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>&lt;p&gt;Indicates the character set that will be used within the file.&lt;/p&gt;
 
&lt;p&gt;ANSI is the default and specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.&lt;/p&gt;
 
&lt;p&gt;UTF-8 specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.&lt;/p&gt;
 
&lt;p&gt;&quot;Unicode&quot; and &quot;Unicode big endian&quot; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.&lt;/p&gt;
 
&lt;p&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org/&apos;)&quot;&gt;http://www.unicode.org/&lt;/a&gt;&lt;/p&gt;</sci:help>
										<sci:legalval selected="true">ANSI</sci:legalval>
										<sci:legalval>UTF-8</sci:legalval>
										<sci:legalval>Unicode</sci:legalval>
										<sci:legalval>Unicode big endian</sci:legalval>
									</sci:arg>
									<sci:arg name="Delimiter Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:member>BeginningText</sci:member>
										<sci:member>EndingText</sci:member>
									</sci:arg>
									<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Text that should preceed each record</sci:help>
									</sci:arg>
									<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Any text to be included after each record</sci:help>
									</sci:arg>
									<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:member>Binary</sci:member>
										<sci:member>PropertyNames</sci:member>
										<sci:member>IncludePropertyNames</sci:member>
									</sci:arg>
									<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>List of properties to write (separated by commas). &quot;*&quot; indicates to write all properties.</sci:help>
										<sci:value>*</sci:value>
									</sci:arg>
									<sci:arg name="IncludePropertyNames" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>Display the name of each property along with its values</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Binary" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>Open the file in binary mode to output non-textual information</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/core</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Sep 07 14:08:04 2004</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Text Writer</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>DocumentNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{63DD362C-76B3-49A7-9CEF-2C45D21F90CB}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1530 -470</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Text Writer</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Formats and writes textual data records to a file.</sci:value>
										<sci:value>&lt;p&gt;Data records are formatted as text written to disk as a &lt;i&gt;Destination&lt;/i&gt; 
  file. You can specify how to separate the data records. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited 
  Text Writer&quot;. To write a file formatted with one record per row with delimiters 
  between the data use the &quot;Delimited Text Writer&quot;.&lt;/p&gt;</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>4.5.0.0</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>8</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\File Writers\Text Writer</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>srand();
@RplotPrefix := &apos;Rplot&apos; . floor(rand() * 10000000);

@ScriptPrefix := &apos;
SpecialDoubleValueStrings &lt;- c(&quot;NA&quot;, &quot;NaN&quot;, &quot;Inf&quot;, &quot;-Inf&quot;)
FactorOrNumber &lt;- function(vec)
{
	# Heuristic to see if vec is numeric but with some non-numeric values
	# Rule:
	# First trim any pre-existing NAs
	# Then if there is only 1 level in the non-numeric elements, assume that string
	# is the NA marker and the vector is actually numeric; Alternatively, 
	# if the only non-numeric values lie in the set {&quot;NA&quot;, &quot;NaN&quot;, &quot;-Inf&quot;, &quot;Inf&quot;}, treat vector as numeric;
	# otherwise, leave it as a factor.
	if (is.factor(vec))
	{
		vecNoNA &lt;- na.omit(vec)
		vecnum &lt;- suppressWarnings(as.numeric(levels(vecNoNA))[vecNoNA])
		vecNumeric &lt;- vecNoNA[!is.na(vecnum), drop=TRUE]		
		vecNonNumeric &lt;- vecNoNA[is.na(vecnum), drop=TRUE]

		if ((length(levels(vecNonNumeric)) == 1 &amp;&amp; length(vecNumeric) &gt; 1) || 
			 !any(is.na(match(vecNonNumeric, SpecialDoubleValueStrings))))
		{
			vec &lt;- suppressWarnings(as.numeric(levels(vec))[vec])
		}
	}
	
	vec
}
# Convert factors that should be numbers back to numbers.
cleanRdata &lt;- function(x)
{
	if (!is.null(x))
	{
		for (ii in 1:ncol(x))
		{	
			if (is.factor(x[[ii]]))
				x[[ii]] &lt;- FactorOrNumber(x[[ii]])
		}
	}
	
	x
}

# $(InputFrame) &lt;- NULL
# try($(InputFrame) &lt;- read.delim(&quot;$(Rinput1file)&quot;, sep = &quot;,&quot;, comment.char=&quot;&quot;, check.names=FALSE))
InputFileString &lt;- &quot;$(Rinput1file)&quot;
OutputFileString &lt;- &quot;$(Routput1file)&quot;
# Use the following statement to turn factors that &quot;should&quot; be numeric
# back to numeric variables:
# $(InputFrame) &lt;- cleanRdata($(InputFrame))

# attach($(InputFrame))
png(filename = &quot;$(RDir)/&apos; . @RplotPrefix . &apos;%03d.png&quot;, width = $(RPlotWidth), height = $(RPlotHeight))

$(RParScript)
&apos;;

@ScriptSuffix := &apos;
#dev.off()

while (!is.null(dev.list()))  dev.off()

try(write.table(data.frame($(InputFrame), check.names=FALSE), file=&quot;$(Routput1file)&quot;, sep=&quot;\t&quot;, col.names=TRUE, row.names=FALSE, quote=FALSE))
if (sum(ls() == &quot;$(ResultsFrame)&quot;) == 1)
{
    write.table(data.frame($(ResultsFrame), check.names=FALSE), file=&quot;$(Routput2file)&quot;, sep=&quot;\t&quot;, col.names=TRUE, row.names=FALSE, quote=FALSE)
}
&apos;;

if trim(@&apos;R Functions Source&apos;) ne &apos;&apos; then
	if @&apos;Embed External Scripts&apos; then
		@ScriptPrefix .= &apos;

$(ExternalScript)
&apos;;
	else
		@ScriptPrefix .= &apos;

source(&quot;$(Rinput2file)&quot;)
&apos;;
	end if;
end if;

</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval>ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Define script prefix and suffix</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -820</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>7.0.0.35</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>9</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.DelimitedWriter.1">
								<sci:component name="Delimited Text Writer" version="2">
									<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false">
										<sci:help>The filename or URL for the destination data. Be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz to the filename. </sci:help>
										<sci:value>$(Rinput1file)</sci:value>
									</sci:arg>
									<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>The maximum number of data items to write (all if value is empty)</sci:help>
									</sci:arg>
									<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>What to do if the given file already exists.</sci:help>
										<sci:legalval selected="true">Overwrite</sci:legalval>
										<sci:legalval>Append</sci:legalval>
										<sci:legalval>Halt</sci:legalval>
									</sci:arg>
									<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Specifies the character to use to separate
the fields in the file.  (Whole records are separated by line breaks.)</sci:help>
										<sci:legalval>Tab</sci:legalval>
										<sci:legalval>Space</sci:legalval>
										<sci:legalval selected="true">Comma</sci:legalval>
									</sci:arg>
									<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>The delimiter to use between multiple value on a single property.  If None, 
then the multiple values are separated into their own columns.</sci:help>
										<sci:legalval selected="true">None</sci:legalval>
										<sci:legalval>Semicolon</sci:legalval>
										<sci:legalval>Colon</sci:legalval>
										<sci:legalval>Comma</sci:legalval>
									</sci:arg>
									<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>What text to output when data for a given column is not present
  (leave empty enter text of choice)</sci:help>
									</sci:arg>
									<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="hidden" multi="false">
										<sci:help>Whether to output column names</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>Whether to output a row which includes the column types</sci:help>
										<sci:legalval selected="true">None</sci:legalval>
										<sci:legalval>SpotfireFormat</sci:legalval>
										<sci:legalval>NDIFormat</sci:legalval>
									</sci:arg>
									<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="hidden" multi="false">
										<sci:help>Includes the number of the record as the first
field for each record.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>SciTegic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue May 18 12:07:18 2004</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Write Input Data for R</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Delimited Writer</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>DocumentNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>378 -1170</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Writes data records to a text file, separating the individual fields with a specified delimiter character. </sci:value>
										<sci:value>Writes data records to a text file, separating the records with a new line and the individual fields within a record with the character specified in the &apos;Delimiter&apos; character.  The property names for the fields will be stored as the first line of the file.

&apos;MultipleValueDelimiter&apos; controls properties with more than one value. If None, then they are written as multiple fields (e.g., prop[1], prop[2] ...). Else, they are written into a single value separated by the chosen delimiter.

</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>4.0.5.0</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>10</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.PropertyFunctions.1">
								<sci:component name="No-op" version="2">
									<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
										<sci:legalval selected="true">LeaveData</sci:legalval>
										<sci:legalval>ClearData</sci:legalval>
										<sci:legalval>DeleteData</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>CustomErrorText</sci:help>
									</sci:arg>
									<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:help>the action to perform</sci:help>
										<sci:value>PassDataToPort</sci:value>
									</sci:arg>
									<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>the port to pass data to</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>COMPONENTNODE</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>No-op</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Evaluate Expression</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -1345</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
										<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>6.0.1.1</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>37</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.PropertyFunctions.1">
								<sci:component name="Keep Properties" version="2">
									<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
										<sci:help>The list of property names to keep</sci:help>
										<sci:member>RenameList</sci:member>
										<sci:value>canonical_smiles, idnumber</sci:value>
									</sci:arg>
									<sci:arg name="RenameList" type="PropertyNameType" required="false" visibility="visible" multi="true">
										<sci:help>If provided, it causes the properties given in PropertyList to be 
renamed to the corresponding name in this list.  If not provided, then no properties are renamed.</sci:help>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:help>the action to perform</sci:help>
										<sci:value>Keep</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Sep 13 07:18:38 2016</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	&apos;Keep &apos; . #displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>true</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>EXPRESSIONNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>378 -1545</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{456195EF-9708-4367-B3DD-21EBF3796604}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Keeps only the specified properties</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, retains only the properties found in the list of property names specified by &lt;i&gt;PropertyList&lt;/i&gt;.  All other properties are removed.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To remove specified properties from each data record, use 
&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>With only the specified properties remaining</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>17.1.0.119</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>39</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Keep Properties</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Add Index Property" version="2">
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="NameOfIndex" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>The name of the property to hold the value indicating the order of the data</sci:help>
										<sci:value>RModelRecordID</sci:value>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="hidden" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}">
										<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="hidden" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}">
										<sci:help>A set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
										<sci:value>Index</sci:value>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="hidden" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}">
										<sci:help>When the component runs, process once or until done for each process call</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed Jul 28 10:28:06 2004</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Add Index Property</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>true</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>ExpressionNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{CFAD8049-AFE7-47B2-9466-F5BA216DA27E}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>666 -1545</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolCommentSize" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>ProtocolCommentSize</sci:help>
										<sci:value>1100 500</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Numbers consecutive records with a sequential index number.</sci:value>
										<sci:value>Sets an index number (starting at 1) on a data record, then increments the number so that consecutive records get sequentially numbered.</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value>With added index property</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>4.1.1.400</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>31</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Utilities\Deprecated\Add Index Property</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
								</sci:component>
								<sci:protocol/>
							</sci:data>
							<sci:data object="SciTegic.MergeProperties.1">
								<sci:component name="Merge Data" version="2">
									<sci:arg name="MergeUsing" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Name of the key property (or a comma separated list
of properties) that contain the value identifying those 
records to be merged into one</sci:help>
										<sci:value>RModelRecordID</sci:value>
									</sci:arg>
									<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Indicates what happens to the values of properties (other than the &apos;MergeUsing&apos;
property) from those records that are merged.
    KeepAll:  Keeps all property values by creating new property names to hold
                   the multiple values for a single property
    KeepFirst:  Keeps only the properties and values from the first example
                      received.  All properties and values from subsequent records
                      matching the &apos;MergeUsing&apos; property are discarded.
    KeepTogether:  Keeps all records with matching &apos;MergeUsing&apos; property 
                      values together.</sci:help>
										<sci:legalval selected="true">KeepAll</sci:legalval>
										<sci:legalval>KeepFirst</sci:legalval>
										<sci:legalval>KeepTogether</sci:legalval>
									</sci:arg>
									<sci:arg name="IgnoreCase" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Whether to consider lower-case and upper-case
letters as equivalent when determining the identity 
of &apos;MergeUsing&apos; propety values</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="OutputFrequency" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Whether to add a property called &apos;Frequency&apos; that
contains the number of individual records included
in the resulting merged record</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="hidden" multi="false">
										<sci:help>Indicates how MergeUsing properties are to be interpreted when 
more than one property is listed.
    UseFirstDefinedValue:  Merges using only the first property in the 
                                         list that has a defined value for a record
    UseAllValues:  Merges using the concatentation of the values
                                      of ALL properties listed.</sci:help>
										<sci:legalval>UseFirstDefinedValue</sci:legalval>
										<sci:legalval selected="true">UseAllValues</sci:legalval>
									</sci:arg>
									<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>The kind of values found in the &apos;MergeUsing&apos; property.
    IsNumeric:  All numbers are converted to doubles for
                       comparison (so 1 = 1.0) 
    IsText:  All comparisons are made as string values</sci:help>
										<sci:legalval>IsNumeric</sci:legalval>
										<sci:legalval selected="true">IsText</sci:legalval>
									</sci:arg>
									<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="hidden" multi="false">
										<sci:help>This string is used during append in KeepAll to pad out empty values. This 
keeps the generated arrays of values in-sync for multiple samples. The value
None causes no padding to occur.</sci:help>
										<sci:value>None</sci:value>
									</sci:arg>
									<sci:arg name="WhenMerging" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>During the merging of two records, this tells what to do
when copying properties from a newly-discovered object onto the base record.
OverwriteOrCreate always copies all properties onto the base object; 
OverwriteExisting only copies properties that already exist on the base; 
CreateIfNew leaves any existing properties alone, and writes only new properties; 
AppendOrCreate appends if the property exists, else it creates it; 
AppendExisting appends to current-existing properties.</sci:help>
										<sci:legalval>OverwriteOrCreate</sci:legalval>
										<sci:legalval>OverwriteExisting</sci:legalval>
										<sci:legalval>CreateIfNew</sci:legalval>
										<sci:legalval selected="true">AppendOrCreate</sci:legalval>
										<sci:legalval>AppendExisting</sci:legalval>
									</sci:arg>
									<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="hidden" multi="false">
										<sci:help>[optional]
When multiple property names are created (by KeepAll merge
behavior) to hold the multiple values for a single property
during merge, the original property name will be prefixed
differently for each original value it must hold.  The Prefix will
be constructed from the value of this property, followed by an underscore.
When not specified, no prefix will be used, and multiple values
will be separated as an array (e.g., property[1], property[2], etc].</sci:help>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>SciTegic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed Jun 02 14:33:20 2004</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Merge Data</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Merge Data</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>JOINNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>954 -1545</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Produces a single data record from multiple data records having an identical value for a given property.
</sci:value>
										<sci:value>Incoming data records are merged into a single data record if they have the same value as each other for the &apos;MergeUsing&apos; named property(s). If multiple &apos;MergeUsing&apos; names are given, all must be identical for a merge event to occur. &apos;MergeBehavior&apos; can be KeepAll, which keeps all values by appending any new ones; KeepFirst, which only keeps the properties of the first record found,  and KeepTogether, which keeps matching items sequentially together (like Sort). The properties of merged data records are appended in the form of an array. unless a &apos;PrefixUsingProperty&apos; is given, so the value of the given property is prepended to each property name on each data item.  This is often useful when merging multiple data files with a &apos;SourceTag&apos; parameter (available in many readers).&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{2E21E16B-6901-46F3-8780-F14D3D7057CE}&apos;)&quot;&gt;See Also:&lt;/a&gt;To merge records based on identical molecular structures use the &quot;Merge Molecules&quot; component.&lt;/p&gt;</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value>Data records that contain the properties being used for merging</sci:value>
										<sci:value>None</sci:value>
										<sci:value>Data records that do not contain the properties being used for merging</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>4.1.0.0</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>32</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge Data</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.PropertyFunctions.1">
								<sci:component name="Remove Properties" version="2">
									<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>The names of properties to remove from each data record entering the component</sci:help>
										<sci:value>RModelRecordID</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:help>the action to perform</sci:help>
										<sci:value>Remove</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/core</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Oct 12 14:23:53 2004</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Remove properties</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>true</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>ExpressionNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1242 -1545</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Removes the specified properties.</sci:value>
										<sci:value>For each data record that enters the component, the specified properties are removed and the modified record is passed out.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;: To keep only a few properties from a long list, it may be more efficient to specify those properties in the &lt;i&gt;Keep Properties&lt;/i&gt; component.&lt;/p&gt;</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value>Data records with the specified properties removed</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>4.5.0.1</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>33</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>@tmp := rpropertynames(&apos;^&apos; . @LearnedPropertyName);

if numvalues(@tmp) == 0 then
	property(@LearnedPropertyName . &apos;_ErrorText&apos;) := &quot;Missing or invalid property value&quot;;
end if;
</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/core</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Set ErrorText for missing response</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>ExpressionNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1530 -1545</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Executes PilotScript to modify data records.</sci:value>
										<sci:value>Executes custom PilotScript expression(s) for every data record that enters the component. Use this component to build new, specialized data manipulation components.

&lt;i&gt;Expression&lt;/i&gt; is evaluated for each data record and may alter the properties of the data objects. 

&lt;i&gt;Initial expression &lt;/i&gt; is evaluated the first time data passes into the component and is typically used for initializing global variables. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/p&gt;
 
</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>4.1.1.400</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>34</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Run R Script" version="2">
									<sci:arg name="RScriptExpression" type="ExpressionType" required="true" visibility="visible" multi="false">
										<sci:help>Expression defining the RScript property containing the script to be sent to R.</sci:help>
										<sci:value>RScript := &apos;
# Script prefix:
# $(ScriptPrefix)
# End of prefix

# Script body:
&apos; . @Script . &apos;
# End of body

# Script suffix:
$(ScriptSuffix)
&apos;
</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval>ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
										<sci:value>EnvOverride</sci:value>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>When the network runs, processes once or until done for each process call</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/rstats</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 30 11:47:31 2017</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Run R Script</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>COMPONENTNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{52541793-A244-485C-9B70-DC1DDD44DD6F}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -1895</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Execute R script, optionally displaying script and stdout</sci:value>
										<sci:value>Executes in R a script defined by RScriptExpression.  This is an internal component used by other R Statistics components.</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>18.1.0.1362</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>11</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Modified</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Run R Script</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@ShowRScript = True</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 13 10:41:54 2003</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Show R script?</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FilterNode</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>378 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
												<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Notepad Viewer" version="2">
											<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
												<sci:help>The maximum number of records to view.</sci:help>
											</sci:arg>
											<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:help>Optional name of the document</sci:help>
												<sci:value>R_Script</sci:value>
											</sci:arg>
											<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
												<sci:member>CharacterEncoding</sci:member>
												<sci:member>HierarchyDepth</sci:member>
											</sci:arg>
											<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Indicates the character set that will be used within the file.
 
UTF-8 specifies a variable length character set.  Each character is represented by 1 to 6 bytes.  This allows writing out all extended characters specified in the Unicode character sets while maintaining reasonably lengthed files.  Many applications do not support UTF-8 files.
 
ANSI specifies a character set where each character is defined by a single byte.  This allows the Latin-1 (ISO-8859-1) character set to be written to the file.  Virtually all applications can read these files.
 
&quot;Unicode&quot; and &quot;Unicode big endian&quot; are sets where each character is represented by exactly 2 bytes (also known as UCS-2).  Depending on which is used will determine the order in which the bytes appear for each character. Many applications do not support Unicode or Unicode big endian files.
 
For more information about each of these encoding styles, go to http://www.unicode.org/</sci:help>
												<sci:legalval>ANSI</sci:legalval>
												<sci:legalval selected="true">UTF-8</sci:legalval>
												<sci:legalval>Unicode</sci:legalval>
												<sci:legalval>Unicode big endian</sci:legalval>
											</sci:arg>
											<sci:arg name="HierarchyDepth" type="LongType" required="false" visibility="visible" multi="false">
												<sci:help>Controls the maximum depth within hierarchical data records to display node and property information.  No hierarchical information will be displayed if depth is set to -1.  If no value is set, the default is 0.</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
												<sci:value>ClientFilePath,ServerFilePath</sci:value>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>When the network runs, processes once or until done for each process call</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
												<sci:legalval>Cant Replace With Copy</sci:legalval>
												<sci:legalval>Cant Open</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Sep 12 07:46:27 2016</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Notepad Viewer</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ViewerNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{522F4A0B-DD0C-4C26-83DD-29A7B09F4461}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>666 -95</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Displays data records in the Windows Notepad application</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
												<sci:value>None</sci:value>
												<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>17.1.0.119</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Viewers\Notepad Viewer</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol/>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>$(RScriptExpression)</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
												<sci:value>@EnvOverride := &apos;LD_LIBRARY_PATH=&apos;;
if @R_LD_LIBRARY_PATH is defined then
	@EnvOverride .= @R_LD_LIBRARY_PATH;
end if;
</sci:value>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
												<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval>ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/core</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>R script expression</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ExpressionNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -245</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Executes PilotScript to modify data records.</sci:value>
												<sci:value>Executes custom PilotScript expression(s) for every data record that enters the component. Use this component to build new, specialized data manipulation components.

&lt;i&gt;Expression&lt;/i&gt; is evaluated for each data record and may alter the properties of the data objects. 

&lt;i&gt;Initial expression &lt;/i&gt; is evaluated the first time data passes into the component and is typically used for initializing global variables. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;For more information, go to &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/p&gt;
 
</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.1.1.400</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.TextWriter.1">
										<sci:component name="Text Writer" version="2">
											<sci:arg name="Destination" type="URLType" required="true" visibility="visible" multi="false">
												<sci:help>The filename or URL for the destination data. Be sure to specify an extension such as .txt or .doc. To save in compressed (zipped) format, add the extension .gz to the filename.</sci:help>
												<sci:value>$(Rscriptfile)</sci:value>
											</sci:arg>
											<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
												<sci:help>The maximum number of data items to write (all if value is empty)</sci:help>
											</sci:arg>
											<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>What to do if the given file already exists.</sci:help>
												<sci:legalval selected="true">Overwrite</sci:legalval>
												<sci:legalval>Append</sci:legalval>
												<sci:legalval>Halt</sci:legalval>
											</sci:arg>
											<sci:arg name="PropertyNames" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>List of which properties (separated by commas) will be written
  * means all properties</sci:help>
												<sci:value>*</sci:value>
											</sci:arg>
											<sci:arg name="IncludePropertyNames" type="BoolType" required="true" visibility="visible" multi="false">
												<sci:help>Specifies whether the name of each property 
is displayed along with its value(s)</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="BeginningText" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Any text to preceed each record</sci:help>
											</sci:arg>
											<sci:arg name="EndingText" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Any text to be included after each record</sci:help>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="Binary" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>Whether to open the file in binary mode for outputting nontext information</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>SciTegic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Tue May 18 12:07:19 2004</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Write RScript</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>DocumentNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{63DD362C-76B3-49A7-9CEF-2C45D21F90CB}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>378 -395</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Text Writer</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Data records are formatted as text and written to a file. </sci:value>
												<sci:value>Data records are formatted as text written to disk as a &apos;Destination&apos; file.  Separation between data records can be indicated with user specified characters.
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;javascript:DoLink(&apos;{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}&apos;)&quot;&gt;See Also:&lt;/a&gt;&quot;Delimited Text Writer&quot;. To write a file formatted with one record per row with delimiters between the data use the &quot;Delimited Text Writer&quot;&lt;/p&gt;</sci:value>
												<sci:value>Generic Data</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>4.0.5.0</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>3</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\File Writers\Text Writer</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.RunProgram.1">
										<sci:component name="Run R" version="2">
											<sci:arg name="CommandLine" type="TextType" required="true" visibility="visible" multi="false">
												<sci:help>Command line for application or file to execute on the server machine.</sci:help>
												<sci:value>&quot;$(R_exe)&quot; --max-ppsize 500000 --no-save --no-restore &lt; &quot;$(Rscriptfile)&quot; &gt; &quot;$(Rstdoutfile)&quot;</sci:value>
											</sci:arg>
											<sci:arg name="WaitForExit" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>Whether or not to wait for the program to finish before returning from the process call.  This parameter must be set to True for StdinProperty, StdoutProperty, StderrProperty, or PropertyForExitStatus to function.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="PropertyForExitStatus" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Defines the property name to hold the value of the program exit status code. Denote a global property with a leading @ character.
Note that this property can only be defined if WaitForExit is set to True.</sci:help>
												<sci:value>@RExitStatus</sci:value>
											</sci:arg>
											<sci:arg name="StdinProperty" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Defines the property name that holds the desired value of the program&apos;s standard input (stdin). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
											</sci:arg>
											<sci:arg name="StdoutProperty" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Defines the property name that will hold the program&apos;s standard output (stdout). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
											</sci:arg>
											<sci:arg name="StderrProperty" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Defines the property name that will hold the program&apos;s standard error (stderr). Denote a global property with a leading @ character. Note that this property can only be defined if WaitForExit is set to True.</sci:help>
												<sci:value>@stderr</sci:value>
											</sci:arg>
											<sci:arg name="Environment" type="LinkGlobalPropertyType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
												<sci:metaproplist>
													<sci:propval name="SCI_InitializeUsingRevertInfo" ishidden="true" base64="UI1">Al1HAAJeAlNwZWNpZmllcyBhZGRpdGlvbmFsIGVudmlyb25tZW50IHZhcmlhYmxlIHNldHRpbmdzIHRoYXQgd2lsbCBiZSB1c2VkIGJ5IHRoZSBzcGF3bmVkIHByb2Nlc3MuICBTcGVjaWZ5IGVhY2ggc2V0dGluZyBvbiBhIGxpbmUgYnkgaXRzZWxmIGFzICJ2YXJpYWJsZT1uYW1lIi4gIFRoZSBzcGF3bmVkIHByb2Nlc3Mgd2lsbCBpbmhlcml0IHRoZSBleGlzdGluZyBlbnZpcm9ubWVudCBvZiB0aGUgc2Npc3ZyIHByb2Nlc3MsIGFuZCBhbnkgc2V0dGluZ3MgaGVyZSB3aWxsIGJlIGFwcGVuZGVkIHRvIHRoZSB2YXJpYWJsZSBsaXN0LiAgVG8gbWFrZSB1c2Ugb2YgYW4gZXhpc3RpbmcgdmFyaWFibGUsIHN1cnJvdW5kIHRoZSB2YXJpYWJsZSBuYW1lIHdpdGggcGVyY2VudCBzaWducyAoZS5nLiAiUEFUSD1jOlxteWRpcjslUEFUSCUiKSAgTm90ZSB0aGF0IHRoaXMgc3ludGF4IHNob3VsZCBiZSB1c2VkIHdpdGggYm90aCBXaW5kb3dzIGFuZCBMaW51eCBzZXJ2ZXJzLiAgRHVlIHRvIE9TIGRlc2lnbnMsIGVudmlyb25tZW50IHZhcmlhYmxlcyBhcmUgY2FzZSBpbnNlbnNpdGl2ZSBvbiBXaW5kb3dzIHNlcnZlcnMgYW5kIGNhc2Ugc2Vuc2l0aXZlIG9uIExpbnV4IHNlcnZlcnMuJFRleHRUeXBlAAgAAAABAQABAAQA/AAAAAAAAAAAADBFbnZpcm9ubWVudAPMU8+7BAA=</sci:propval>
													<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">TextType</sci:propval>
													<sci:propval name="SCI_EvalOnInit" ishidden="true" boolVal="true"/>
													<sci:propval name="SCI_EvalOnInitType" ishidden="true">TextType</sci:propval>
												</sci:metaproplist>
												<sci:help>Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &quot;variable=name&quot;.  The spawned process will inherit the existing environment of the scisvr process, and any settings here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. &quot;PATH=c:\mydir;%PATH%&quot;)  Note that this syntax should be used with both Windows and Linux servers.  Due to OS designs, environment variables are case insensitive on Windows servers and case sensitive on Linux servers.</sci:help>
												<sci:value>EnvOverride</sci:value>
											</sci:arg>
											<sci:arg name="UseCommandInterpreter" type="BoolType" required="false" visibility="hidden" multi="false">
												<sci:help>Whether or not to add &quot;cmd.exe /c&quot; (or &quot;/bin/sh -c&quot; on Linux servers) to the command line.  This causes the command line to be interpreted through the operating systems standard command shell allowing the use of redirection specifiers such as &apos;&gt;&apos; and &apos;&lt;&apos; and piping via &apos;|&apos;.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Componet Attributes</sci:help>
												<sci:legalval>ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/rstats</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Dec 11 15:47:33 2006</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{8611ED9C-47D2-4EB1-A98B-CFB894E3840F}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Run R</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Run Program</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -720</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>COMPONENTNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Runs a Windows command line application on the server machine.</sci:value>
												<sci:value>&lt;p&gt;Define the command line by entering text as you would in a command prompt window. The component includes facilities for looking up a program name in the Windows registry. It can interpret a program name as a ProgID, such as &quot;InternetExplorer.Application&quot;, or as a shell command, such as &quot;IsisServer&quot;, or as a document to load into an associated program, such as &quot;c:\spreadsheet.xls&quot;.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;CommandLine&lt;/i&gt;: The command that the component will run. The correct syntax is the full command line exactly as you would type it in a shell command window. The first space- or quote-delimited item of the command line can be a ProgId, such as &quot;InternetExplorer.Application&quot;. This starts up Internet Explorer (IE) without having to specify the path to IE explicitly. Shell command associations are also supported, so &quot;IsisServer&quot; will start Isis Draw. Finally, there is support for file associations, so the path &quot;D:\docs\notes.doc&quot; will start Microsoft Word and load the specified document.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;WaitForExit&lt;/i&gt;: When TRUE, the data pipeline is blocked until the command has completed.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;PropertyForExitStatus&lt;/i&gt;: Allows you to assign the exit status of the command to a global property or to a data record property. Use either a global or local property reference, such as @status or status.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;UseCommandInterpreter&lt;/i&gt;: When True, parses the command line through the command interpreter on the remote server (with a shell such as csh or bash or the windows interpreter cmd.exe). In particular, this needs to be set to True if the CommandLine utilizes standard output or input (such as cmd.exe /c &amp;quot;c:\Program Files\R\rterm.exe&amp;quot; &amp;quot;0&amp;lt;$(CommandFile)&amp;quot;).&lt;/p&gt;
&lt;p&gt;&lt;i&gt;StdinProperty, StdoutProperty, and StderrProperty&lt;/i&gt;: Allows you to redirect standard communications to global properties or to data record properties. Use either a global or local property reference, such as @stdin or stdin.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Environment&lt;/i&gt;: Specifies additional environment variable settings that will be used by the spawned process.  Specify each setting on a line by itself as &quot;variable=name&quot;.  The spawned process will inherit the existing environment of the PipelinePilot process, and any settings defined here will be appended to the variable list.  To make use of an existing variable, surround the variable name with percent signs (e.g. &quot;PATH=c:\mydir;%PATH%&quot;).  Since this will run on the Windows client, all environment variables are case insensitive.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt; If your command line includes a file path, create a new parameter for the component, of type URL, so the user can enter the path. Then use a token replacement in the CommandLine to pick up the value. For example: Notepad.exe &quot;$(SciTegicRoot)\$(Path)&quot;. &lt;/li&gt;
&lt;li&gt;When the component is separated from any other pipeline, the command line is run just once.&lt;/li&gt; &lt;li&gt;You can add an input or output pass port to the component, to integrate it with a pipeline. If there is an output port, but no input port, the command is run once and a single new record is generated. If there is an input port, then the command is run once for each data record passed in.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>6.0.2.0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>4</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Run R</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Display R stdout" version="2">
											<sci:arg name="ControlProperty" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>ControlProperty</sci:help>
												<sci:value>@ShowRStdOutput</sci:value>
											</sci:arg>
											<sci:arg name="Filename" type="StringType" required="true" visibility="visible" multi="false">
												<sci:value>$(Rstdoutfile)</sci:value>
											</sci:arg>
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
											</sci:arg>
											<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
												<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval>ComponentTakesInput</sci:legalval>
												<sci:legalval>ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/rstats</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 30 11:47:39 2017</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Display R stdout</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ViewerNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>SubProtocol</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{2A8352DC-F36E-4D10-B8DE-EFF7E019C441}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -1020</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Display R standard output</sci:value>
												<sci:value>Display the standard output generated by running an R script in a Notepad viewer. The standard output was captured in the specified file.

The output is only displayed if the control property is defined and set to true.</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>18.1.0.1362</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>5</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Made Link Into Copy</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Subprotocol Modified</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Display R stdout</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol/>
									</sci:data>
									<sci:connectid from="0" to="1" type="true"/>
									<sci:connectid from="2" to="0" type="true"/>
									<sci:connectid from="2" to="3" type="true"/>
									<sci:version iVal="1"/>
								</sci:protocol>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Filter (PilotScript)" version="2">
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
									</sci:arg>
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>The PilotScript expression used to filter the data.</sci:help>
										<sci:value>fileexists(&quot;$(Routput1file)&quot;)</sci:value>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
										<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval>ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>SciTegic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jun 07 09:13:49 2004</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>InputFrame file exists</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FILTERNODE</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Filter (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -2245</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
										<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
										<sci:value>None</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>4.1.0.0</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>12</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.DelimitedReader.1">
								<sci:component name="Delimited Text Reader" version="2">
									<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
										<sci:help>The file(s) or URL source to read</sci:help>
										<sci:value>$(Routput1file)</sci:value>
									</sci:arg>
									<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>The maximum number of data items to read (all if value is empty)</sci:help>
									</sci:arg>
									<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
										<sci:help>A list of properties that are to be retained in each data record output
by the reader component. If the value is left blank, then all properties
are retained. If the parameter contains the value &quot;-&quot; (minus sign), then
no properties are to be retained.</sci:help>
									</sci:arg>
									<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Specifies the character which separates the fields in the file.
  To determine automatically use:   FigureOut  
  For &quot;tab&quot; delimited type:              tab
  For &quot;space&quot; delimited type:         space
  For &quot;comma&quot; delimited type:       comma
  For &quot;colon&quot; delimited type:          colon</sci:help>
										<sci:legalval>FigureOut</sci:legalval>
										<sci:legalval selected="true">Tab</sci:legalval>
										<sci:legalval>Space</sci:legalval>
										<sci:legalval>Comma</sci:legalval>
										<sci:legalval>Colon</sci:legalval>
									</sci:arg>
									<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>When TRUE, property names are taken
from the first line of data in the file.  When
FALSE, properties will be called: Column1,
Column2, etc. by default</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>The type of tag to create to identify the source of data records.  A property 
called &apos;SourceTag&apos; will be created and will hold the value indicated:
   None - no SourceTag property will be created, and any existing will be removed
   Filename - the name of the file read
   FilenameAndExtension - the name of the file read with it&apos;s file extension
   FullFilename - the name of the file read including the directory path
   Number - when multiple files are read in this component, they are numbered 1,2,3...
   Letter - when multiple files are read in this component, they are lettered A, B, C...
   KeepCurrent - keep the current value of SourceTag</sci:help>
										<sci:legalval selected="true">None</sci:legalval>
										<sci:legalval>Filename</sci:legalval>
										<sci:legalval>FilenameAndExtension</sci:legalval>
										<sci:legalval>FullFilename</sci:legalval>
										<sci:legalval>Number</sci:legalval>
										<sci:legalval>Letter</sci:legalval>
										<sci:legalval>KeepCurrent</sci:legalval>
									</sci:arg>
									<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma-separated list of line numbers and
line ranges to specify which lines should be 
ignored by the parser (column headers will be
read from the line that comes next).</sci:help>
									</sci:arg>
									<sci:arg name="UndefinedString" type="StringType" required="false" visibility="hidden" multi="false">
										<sci:help>Specifies the character or string used to represent an 
undefined string in the file being read</sci:help>
									</sci:arg>
									<sci:arg name="AllLines" type="BoolType" required="true" visibility="hidden" multi="false">
										<sci:help>When TRUE, all lines of the text file become
part of a single data record.  The values for
a column from each row become multiple [array]
values for the property (column).</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="hidden" multi="false">
										<sci:help>Whether to trim whitespace from the left and right ends of each value</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:value>ComponentReturnsPass</sci:value>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>SciTegic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue May 18 12:07:14 2004</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Read R output</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Delimited Reader</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>DocumentNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>378 -2245</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Reads text files containing one record per line with data separated by delimiters.</sci:value>
										<sci:value>Reads textual data from one or more files that are formated with a single record per line. Individual data items on each line should be separated by a delimiter character (e.g. space, comma, tab). The first line is treated as column names for defining property names. If column names are not declared, they are given standard names of Column1, Column2, etc. 

This component should be used to read comma delimited text files from Excel (.csv).

</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>4.0.5.0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>13</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\File Readers\Delimited Text Reader</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>for #ii in 1 .. numproperties() loop
	/* Convert integers to Long only if they won&apos;t overflow; convert all other numbers to Double. */
	if isinteger(ithproperty(#ii)) and strlength(ithProperty(#ii)) &lt; 10 then
		changepropertytype(ithproperty(#ii), &apos;Long&apos;);
	elsif isnumber(ithproperty(#ii)) then
		changepropertytype(ithproperty(#ii), &apos;Double&apos;);
	end if;
end loop;
</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>This expression is executed only the first time data passes into the component. (Since there is no data available at initialization time, only expressions referencing global properties are allowed.)</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>This expression is executed only at finalization (after the last data passes out of the component). 
 (Since there is no data available at finalization time, only expressions referencing global properties are allowed.)</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Adds any properties calculated in this component to a molecule&apos;s property list</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/core</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed Jul 28 10:28:07 2004</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Convert numbers</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>ExpressionNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>666 -2245</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Applies a PilotScript expression to each data record
</sci:value>
										<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>4.1.1.400</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>14</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Manipulator (PilotScript)" version="2">
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>This expression is executed only the FIRST
time data passes into the component
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
									</sci:arg>
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>PilotScript expression to be evaluated.</sci:help>
										<sci:value>if x is defined or xPlaceholderFromR is defined then
	remove(&apos;xPlaceholderFromR&apos;);
	
	if x is defined then
		/* Note that &apos;x&apos; from R is really our &apos;y&apos; */
		rename(&apos;x&apos;, @LearnedPropertyName);
	end if;
	 
	/* Prepend model name to any additional output. */
	for #i in 1 .. numproperties() loop
		if ithpropertyname(#i) ne @LearnedPropertyName and ithpropertyname(#i) ne &apos;RModelRecordID&apos; then
			rename(ithpropertyname(#i), @LearnedPropertyName . &apos;_&apos; . ithpropertyname(#i));
		end if;
	end loop;
elsif v1 is defined then
     /* for LDA model */
     rename(&apos;v1&apos;, @LearnedPropertyName);
elsif @NumberOfVariables is defined then
     /* For PLS, PCR, and perhaps other models. */
     /*if we have multiple predictions returned, they will be called X1, X2...
       we want to rename them to the learned property name and the appropriate latent variable number*/
     #propnames := rpropertynames(&apos;^X&apos;);
     #lowerlimit := substring(@NumberOfVariables, 1, findsubstring(@NumberOfVariables, &quot;:&quot;) - 1);
     changepropertytype(#lowerlimit, &apos;Long&apos;);
     for #i in 1 .. numvalues(#propnames) loop
          #index := substring(#propnames[#i],2);
          changepropertytype(#index, &apos;Long&apos;);
          rename(#propnames[#i], @LearnedPropertyName . &quot;_&quot; . (#index + #lowerlimit - 1));
     end loop;
end if;

for #i in 1 .. numproperties() loop
	if ithproperty(#i) eq &apos;NA&apos; or ithproperty(#i) eq &apos;&lt;NA&gt;&apos; then
		ErrorText := &apos;Unable to calculate response property.&apos;;
		break;
	end if;
end loop;

</sci:value>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="hidden" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>This expression is executed only at finalization (after the last
data passes out of the component).
  (Since there is no data available at finalization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="hidden" multi="false">
										<sci:help>Adds any properties calculated in this component
to a molecule&apos;s property list</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>SciTegic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed Jun 02 14:33:20 2004</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Rename properties</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>ExpressionNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>954 -2245</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Executes a PilotScript to rapidly manipulate data records.</sci:value>
										<sci:value>This component executes the PilotScript specified in the component. The component is used to build new, specialized data manipulation components.

The &apos;Expression&apos; is evaluated for each data record, and may alter and manipulate the properties of the data objects. The &apos;Initial expression&apos; is evaluated the first time data passes into the component and is typically used for initializing global variables. See the online documentation for full details of PilotScript expression syntax.

</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>4.1.0.0</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>36</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Filter (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>The PilotScript expression used to filter the data.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>@RExitStatus != 0</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>An expression evaluated only when the component
is first inialized (when the first data record enters).
  (Since there is no data available at initialization
   time, only expressions referencing global
   properties are allowed.)</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>An expression evaluated only when the
component is finalized (once the last data
record has passed).
*Since there is no data available at finalization
  time, only expressions referencing global 
  properties are allowed.</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false">
										<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval>ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/core</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 13 10:41:54 2003</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Any errors?</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FilterNode</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Filter (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -2620</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Filters each data record based on a condition defined as a PilotScript expression.

</sci:value>
										<sci:value>The PilotScript expression provided to the component is evaluated for each incoming data record. The last statement in the expression should evaluate to a boolean value  (true/false or nonzero/zero) and determines the fate of the data record:  Records which evaluate to &apos;true&apos; are passed out the Pass port; those which evaluate to &apos;false&apos; are passed out the &apos;Fail&apos; port. If multiple statements are present, then the value of the last statement is used. 

</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>Generic Data</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
										<sci:value>None</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>27</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Display R stdout and halt protocol" version="2">
									<sci:arg name="ControlProperty" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>ControlProperty</sci:help>
										<sci:value>@ShowRStdOutput</sci:value>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval>ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/rstats</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed Oct 22 12:08:22 2014</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Display R stdout and halt protocol</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>ViewerNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{9E6F3C8B-E5AB-4d51-B5E5-C0F20559F6FF}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>378 -2620</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Display R standard output</sci:value>
										<sci:value>Display the standard output generated by running an R script in a Notepad viewer. The standard output was captured in the specified file.

The output is only displayed if the control property is defined and set to true.</sci:value>
										<sci:value>Generic Data</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>9.5.0.608</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>28</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Analysis and Statistics\R Statistics\Utilities\Internals\Display R stdout and halt protocol</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol/>
							</sci:data>
							<sci:connectid from="0" to="29" type="true"/>
							<sci:connectid from="29" to="2" type="true"/>
							<sci:connectid from="3" to="4" type="true"/>
							<sci:connectid from="4" to="5" type="true"/>
							<sci:connectid from="5" to="6" type="true"/>
							<sci:connectid from="6" to="7" type="true"/>
							<sci:connectid from="7" to="8" type="true"/>
							<sci:connectid from="37" to="10" type="true"/>
							<sci:connectid from="37" to="39" type="true"/>
							<sci:connectid from="39" to="31" type="true"/>
							<sci:connectid from="31" to="32" type="true"/>
							<sci:connectid from="32" to="33" type="true"/>
							<sci:connectid from="33" to="34" type="true"/>
							<sci:connectid from="12" to="13" type="true"/>
							<sci:connectid from="13" to="14" type="true"/>
							<sci:connectid from="14" to="36" type="true"/>
							<sci:connectid from="36" to="32" type="true"/>
							<sci:connectid from="27" to="28" type="true"/>
							<sci:version iVal="1"/>
						</sci:protocol>
					</sci:data>
					<sci:data object="SciTegic.NormalizePropertyTypes.1">
						<sci:component name="Set Property Format" version="2">
							<sci:arg name="Output What" type="StringType" required="false" visibility="hidden" multi="false">
								<sci:help>What to output - either a summary of the property information, one record per property, or the normalized data, one record per incoming data record.

If &lt;i&gt;Summary&lt;/i&gt; or &lt;i&gt;OriginalDataThenSummary&lt;/i&gt; is selected, the summary properties are:

&lt;ul&gt;
&lt;li&gt;name: the name of the property&lt;/li&gt;
&lt;li&gt;count: the number of incoming data records containing this property&lt;/li&gt;
&lt;li&gt;type: the normalized type of the data (see list of possible types below)&lt;/li&gt;
&lt;li&gt;min: if numeric, the minimum value of the property&lt;/li&gt;
&lt;li&gt;max: if numeric, the maximum value of the property&lt;/li&gt;
&lt;li&gt;values: if string, then the list of different values (if less than Maximum Number of Values)&lt;/li&gt;
&lt;/ul&gt;

The possible values for type are:

&lt;ul&gt;
&lt;li&gt;Null&lt;li&gt;
&lt;li&gt;Boolean&lt;li&gt;
&lt;li&gt;Integer&lt;li&gt;
&lt;li&gt;Double&lt;li&gt;
&lt;li&gt;String&lt;li&gt;
&lt;li&gt;Text&lt;li&gt;
&lt;li&gt;DateTime&lt;li&gt;
&lt;li&gt;Other&lt;li&gt;
&lt;/ul&gt;

      </sci:help>
								<sci:legalval>Original Data Then Summary</sci:legalval>
								<sci:legalval>Normalized Data</sci:legalval>
								<sci:legalval selected="true">Summary</sci:legalval>
							</sci:arg>
							<sci:arg name="Summary Options" type="GroupType" required="false" visibility="hidden" multi="false" legalvalsenforced="false">
								<sci:help>Options that affect the output of the summary data only</sci:help>
								<sci:member>Maximum Number of Values</sci:member>
								<sci:member>Text Length</sci:member>
							</sci:arg>
							<sci:arg name="Maximum Number of Values" type="LongType" required="false" visibility="hidden" multi="false" expanded="true">
								<sci:help>For String properties, we also return a list of possible values. This sets the maximum number of different values we wish to return. If that is exceeded, then no values are returned.
      </sci:help>
								<sci:value>20</sci:value>
							</sci:arg>
							<sci:arg name="Text Length" type="LongType" required="false" visibility="hidden" multi="false">
								<sci:help>
        For string properties, if the length of the value is greater than or equal to this number,
        then that property is considered Text, and no values are collected or returned.
      </sci:help>
								<sci:value>32</sci:value>
							</sci:arg>
							<sci:arg name="Missing Value Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>Options to control the identification of missing values, and to possibly standardize (and then accept as clean) these values by column type using a provided replacement string.</sci:help>
								<sci:member>Missing Value Strings</sci:member>
								<sci:member>Replace Missing Values</sci:member>
							</sci:arg>
							<sci:arg name="Missing Value Strings" type="StringType" required="false" visibility="visible" multi="true" expanded="true">
								<sci:help>If provided, this is an array of string values that will be interpreted as missing values. Note that an empty entry causes the empty string to be treated as a missing value.</sci:help>
								<sci:value/>
								<sci:value>*</sci:value>
								<sci:value>?</sci:value>
								<sci:value>NULL</sci:value>
								<sci:value>NA</sci:value>
								<sci:value>N/A</sci:value>
								<sci:value>NaN</sci:value>
							</sci:arg>
							<sci:arg name="Replace Missing Values" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>Whether to identify missing values, and once identified, ignore them in the formatting operation. </sci:help>
								<sci:member>Types to Replace</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Types to Replace" type="StringType" required="false" visibility="visible" multi="true" expanded="true">
								<sci:help>Replace missing values with particular strings for particular column types</sci:help>
								<sci:member>Boolean Missing Values</sci:member>
								<sci:member>Integer Missing Values</sci:member>
								<sci:member>Double Missing Values</sci:member>
								<sci:member>String Missing Values</sci:member>
								<sci:member>DateTime Missing Values</sci:member>
								<sci:enabledscript>parameter(&apos;Replace Missing Values&apos;)</sci:enabledscript>
								<sci:legalval selected="true">Boolean</sci:legalval>
								<sci:legalval selected="true">Integer</sci:legalval>
								<sci:legalval selected="true">Double</sci:legalval>
								<sci:legalval selected="true">String</sci:legalval>
								<sci:legalval selected="true">DateTime</sci:legalval>
							</sci:arg>
							<sci:arg name="Boolean Missing Values" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Replace missing values in Boolean columns with this string. Typically, you do this with a value that is &lt;i&gt;not&lt;/i&gt; itself a missing value, so that the column will be clean.</sci:help>
								<sci:enabledscript>contains(parameter(&apos;Types to Replace&apos;), &apos;Boolean&apos;);</sci:enabledscript>
								<sci:value>False</sci:value>
							</sci:arg>
							<sci:arg name="Integer Missing Values" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Replace missing values in Integer columns with this string. Typically, you do this with a value that is &lt;i&gt;not&lt;/i&gt; itself a missing value, so that the column will be clean.</sci:help>
								<sci:enabledscript>contains(parameter(&apos;Types to Replace&apos;), &apos;Integer&apos;);</sci:enabledscript>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Double Missing Values" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Replace missing values in Double columns with this string. Typically, you do this with a value that is &lt;i&gt;not&lt;/i&gt; itself a missing value, so that the column will be clean.</sci:help>
								<sci:enabledscript>contains(parameter(&apos;Types to Replace&apos;), &apos;Double&apos;);</sci:enabledscript>
								<sci:value>NaN</sci:value>
							</sci:arg>
							<sci:arg name="String Missing Values" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Replace missing values in String columns with this string. Typically, you do this with a value that is &lt;i&gt;not&lt;/i&gt; itself a missing value, so that the column will be clean.</sci:help>
								<sci:enabledscript>contains(parameter(&apos;Types to Replace&apos;), &apos;String&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="DateTime Missing Values" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Replace missing values in DateTime columns with this string. Typically, you do this with a value that is &lt;i&gt;not&lt;/i&gt; itself a missing value, so that the column will be clean.</sci:help>
								<sci:enabledscript>contains(parameter(&apos;Types to Replace&apos;), &apos;DateTime&apos;);</sci:enabledscript>
								<sci:value>1/1/1970</sci:value>
							</sci:arg>
							<sci:arg name="Format Properties" type="GroupType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false">
								<sci:help>The list of properties to coerce to formatted strings</sci:help>
								<sci:member>Property 1</sci:member>
								<sci:member>Property 2</sci:member>
								<sci:member>Property 3</sci:member>
								<sci:member>Property 4</sci:member>
								<sci:member>Property 5</sci:member>
								<sci:member>Property 6</sci:member>
							</sci:arg>
							<sci:arg name="Property 1" type="PropertyNameType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>The property name </sci:help>
								<sci:member>Property 1 Format</sci:member>
								<sci:member>Property 1 Format String</sci:member>
								<sci:value>Aff_NET_Pred</sci:value>
							</sci:arg>
							<sci:arg name="Property 1 Format" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The format we wish to convert the value to. Missing values are ignored.</sci:help>
								<sci:legalval>Boolean (TF)</sci:legalval>
								<sci:legalval>Boolean (True False)</sci:legalval>
								<sci:legalval>Boolean (YN)</sci:legalval>
								<sci:legalval>Boolean (10)</sci:legalval>
								<sci:legalval selected="true">Double (using Format string)</sci:legalval>
								<sci:legalval>DateTime (using Format string)</sci:legalval>
							</sci:arg>
							<sci:arg name="Property 1 Format String" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>For Double and DateTime types, the format string.

For Double formatting, look online for the format string format for &quot;swprintf&quot;. 

For DateTime formatting, the following is used (from strftime):

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;%a&lt;/b&gt; is replaced by the locale&apos;s abbreviated weekday name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%A&lt;/b&gt; is replaced by the locale&apos;s full weekday name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%b&lt;/b&gt; is replaced by the locale&apos;s abbreviated month name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%B&lt;/b&gt; is replaced by the locale&apos;s full month name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%c&lt;/b&gt; is replaced by the locale&apos;s appropriate date and time representation.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%C&lt;/b&gt; is replaced by the century number (the year divided by 100 and truncated to an integer) as a decimal number [00-99].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%d&lt;/b&gt; is replaced by the day of the month as a decimal number [01,31].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%D&lt;/b&gt; same as %m/%d/%y.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%e&lt;/b&gt; is replaced by the day of the month as a decimal number [1,31]; a single digit is preceded by a space.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%h&lt;/b&gt; same as %b.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%H&lt;/b&gt; is replaced by the hour (24-hour clock) as a decimal number [00,23].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%I&lt;/b&gt; is replaced by the hour (12-hour clock) as a decimal number [01,12].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%j&lt;/b&gt; is replaced by the day of the year as a decimal number [001,366].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%m&lt;/b&gt; is replaced by the month as a decimal number [01,12].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%M&lt;/b&gt; is replaced by the minute as a decimal number [00,59].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%n&lt;/b&gt; is replaced by a newline character.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%p&lt;/b&gt; is replaced by the locale&apos;s equivalent of either a.m. or p.m.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%r&lt;/b&gt; is replaced by the time in a.m. and p.m. notation; in the POSIX locale this is equivalent to %I:%M:%S %p.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%R&lt;/b&gt; is replaced by the time in 24 hour notation (%H:%M).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%S&lt;/b&gt; is replaced by the second as a decimal number [00,61].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%t&lt;/b&gt; is replaced by a tab character.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%T&lt;/b&gt; is replaced by the time (%H:%M:%S).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%u&lt;/b&gt; is replaced by the weekday as a decimal number [1,7], with 1 representing Monday.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%U&lt;/b&gt; is replaced by the week number of the year (Sunday as the first day of the week) as a decimal number [00,53].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%V&lt;/b&gt; is replaced by the week number of the year (Monday as the first day of the week) as a decimal number [01,53]. If the week containing 1 January has four or more days in the new year, then it is considered week 1. Otherwise, it is the last week of the previous year, and the next week is week 1.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%w&lt;/b&gt; is replaced by the weekday as a decimal number [0,6], with 0 representing Sunday.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%W&lt;/b&gt; is replaced by the week number of the year (Monday as the first day of the week) as a decimal number [00,53]. All days in a new year preceding the first Monday are considered to be in week 0.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%x&lt;/b&gt; is replaced by the locale&apos;s appropriate date representation.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%X&lt;/b&gt; is replaced by the locale&apos;s appropriate time representation.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%y&lt;/b&gt; is replaced by the year without century as a decimal number [00,99].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%Y&lt;/b&gt; is replaced by the year with century as a decimal number.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%Z&lt;/b&gt; is replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%%&lt;/b&gt; is replaced by %.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:value>%3.2f</sci:value>
							</sci:arg>
							<sci:arg name="Property 2" type="PropertyNameType" required="false" visibility="visible" multi="false">
								<sci:help>The property name </sci:help>
								<sci:member>Property 2 Format</sci:member>
								<sci:member>Property 2 Format String</sci:member>
							</sci:arg>
							<sci:arg name="Property 2 Format" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The format we wish to convert the value to. Missing values are ignored.</sci:help>
								<sci:legalval selected="true">Boolean (TF)</sci:legalval>
								<sci:legalval>Boolean (True False)</sci:legalval>
								<sci:legalval>Boolean (YN)</sci:legalval>
								<sci:legalval>Boolean (10)</sci:legalval>
								<sci:legalval>Double (using Format string)</sci:legalval>
								<sci:legalval>DateTime (using Format string)</sci:legalval>
							</sci:arg>
							<sci:arg name="Property 2 Format String" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>For Double and DateTime types, the format string.

For Double formatting, look online for the format string format for &quot;swprintf&quot;. 

For DateTime formatting, the following is used (from strftime):

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;%a&lt;/b&gt; is replaced by the locale&apos;s abbreviated weekday name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%A&lt;/b&gt; is replaced by the locale&apos;s full weekday name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%b&lt;/b&gt; is replaced by the locale&apos;s abbreviated month name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%B&lt;/b&gt; is replaced by the locale&apos;s full month name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%c&lt;/b&gt; is replaced by the locale&apos;s appropriate date and time representation.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%C&lt;/b&gt; is replaced by the century number (the year divided by 100 and truncated to an integer) as a decimal number [00-99].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%d&lt;/b&gt; is replaced by the day of the month as a decimal number [01,31].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%D&lt;/b&gt; same as %m/%d/%y.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%e&lt;/b&gt; is replaced by the day of the month as a decimal number [1,31]; a single digit is preceded by a space.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%h&lt;/b&gt; same as %b.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%H&lt;/b&gt; is replaced by the hour (24-hour clock) as a decimal number [00,23].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%I&lt;/b&gt; is replaced by the hour (12-hour clock) as a decimal number [01,12].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%j&lt;/b&gt; is replaced by the day of the year as a decimal number [001,366].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%m&lt;/b&gt; is replaced by the month as a decimal number [01,12].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%M&lt;/b&gt; is replaced by the minute as a decimal number [00,59].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%n&lt;/b&gt; is replaced by a newline character.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%p&lt;/b&gt; is replaced by the locale&apos;s equivalent of either a.m. or p.m.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%r&lt;/b&gt; is replaced by the time in a.m. and p.m. notation; in the POSIX locale this is equivalent to %I:%M:%S %p.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%R&lt;/b&gt; is replaced by the time in 24 hour notation (%H:%M).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%S&lt;/b&gt; is replaced by the second as a decimal number [00,61].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%t&lt;/b&gt; is replaced by a tab character.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%T&lt;/b&gt; is replaced by the time (%H:%M:%S).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%u&lt;/b&gt; is replaced by the weekday as a decimal number [1,7], with 1 representing Monday.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%U&lt;/b&gt; is replaced by the week number of the year (Sunday as the first day of the week) as a decimal number [00,53].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%V&lt;/b&gt; is replaced by the week number of the year (Monday as the first day of the week) as a decimal number [01,53]. If the week containing 1 January has four or more days in the new year, then it is considered week 1. Otherwise, it is the last week of the previous year, and the next week is week 1.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%w&lt;/b&gt; is replaced by the weekday as a decimal number [0,6], with 0 representing Sunday.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%W&lt;/b&gt; is replaced by the week number of the year (Monday as the first day of the week) as a decimal number [00,53]. All days in a new year preceding the first Monday are considered to be in week 0.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%x&lt;/b&gt; is replaced by the locale&apos;s appropriate date representation.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%X&lt;/b&gt; is replaced by the locale&apos;s appropriate time representation.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%y&lt;/b&gt; is replaced by the year without century as a decimal number [00,99].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%Y&lt;/b&gt; is replaced by the year with century as a decimal number.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%Z&lt;/b&gt; is replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%%&lt;/b&gt; is replaced by %.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Property 3" type="PropertyNameType" required="false" visibility="visible" multi="false">
								<sci:help>The property name </sci:help>
								<sci:member>Property 3 Format</sci:member>
								<sci:member>Property 3 Format String</sci:member>
							</sci:arg>
							<sci:arg name="Property 3 Format" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The format we wish to convert the value to. Missing values are ignored.</sci:help>
								<sci:legalval selected="true">Boolean (TF)</sci:legalval>
								<sci:legalval>Boolean (True False)</sci:legalval>
								<sci:legalval>Boolean (YN)</sci:legalval>
								<sci:legalval>Boolean (10)</sci:legalval>
								<sci:legalval>Double (using Format string)</sci:legalval>
								<sci:legalval>DateTime (using Format string)</sci:legalval>
							</sci:arg>
							<sci:arg name="Property 3 Format String" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>For Double and DateTime types, the format string.

For Double formatting, look online for the format string format for &quot;swprintf&quot;. 

For DateTime formatting, the following is used (from strftime):

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;%a&lt;/b&gt; is replaced by the locale&apos;s abbreviated weekday name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%A&lt;/b&gt; is replaced by the locale&apos;s full weekday name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%b&lt;/b&gt; is replaced by the locale&apos;s abbreviated month name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%B&lt;/b&gt; is replaced by the locale&apos;s full month name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%c&lt;/b&gt; is replaced by the locale&apos;s appropriate date and time representation.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%C&lt;/b&gt; is replaced by the century number (the year divided by 100 and truncated to an integer) as a decimal number [00-99].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%d&lt;/b&gt; is replaced by the day of the month as a decimal number [01,31].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%D&lt;/b&gt; same as %m/%d/%y.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%e&lt;/b&gt; is replaced by the day of the month as a decimal number [1,31]; a single digit is preceded by a space.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%h&lt;/b&gt; same as %b.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%H&lt;/b&gt; is replaced by the hour (24-hour clock) as a decimal number [00,23].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%I&lt;/b&gt; is replaced by the hour (12-hour clock) as a decimal number [01,12].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%j&lt;/b&gt; is replaced by the day of the year as a decimal number [001,366].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%m&lt;/b&gt; is replaced by the month as a decimal number [01,12].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%M&lt;/b&gt; is replaced by the minute as a decimal number [00,59].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%n&lt;/b&gt; is replaced by a newline character.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%p&lt;/b&gt; is replaced by the locale&apos;s equivalent of either a.m. or p.m.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%r&lt;/b&gt; is replaced by the time in a.m. and p.m. notation; in the POSIX locale this is equivalent to %I:%M:%S %p.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%R&lt;/b&gt; is replaced by the time in 24 hour notation (%H:%M).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%S&lt;/b&gt; is replaced by the second as a decimal number [00,61].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%t&lt;/b&gt; is replaced by a tab character.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%T&lt;/b&gt; is replaced by the time (%H:%M:%S).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%u&lt;/b&gt; is replaced by the weekday as a decimal number [1,7], with 1 representing Monday.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%U&lt;/b&gt; is replaced by the week number of the year (Sunday as the first day of the week) as a decimal number [00,53].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%V&lt;/b&gt; is replaced by the week number of the year (Monday as the first day of the week) as a decimal number [01,53]. If the week containing 1 January has four or more days in the new year, then it is considered week 1. Otherwise, it is the last week of the previous year, and the next week is week 1.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%w&lt;/b&gt; is replaced by the weekday as a decimal number [0,6], with 0 representing Sunday.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%W&lt;/b&gt; is replaced by the week number of the year (Monday as the first day of the week) as a decimal number [00,53]. All days in a new year preceding the first Monday are considered to be in week 0.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%x&lt;/b&gt; is replaced by the locale&apos;s appropriate date representation.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%X&lt;/b&gt; is replaced by the locale&apos;s appropriate time representation.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%y&lt;/b&gt; is replaced by the year without century as a decimal number [00,99].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%Y&lt;/b&gt; is replaced by the year with century as a decimal number.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%Z&lt;/b&gt; is replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%%&lt;/b&gt; is replaced by %.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Property 4" type="PropertyNameType" required="false" visibility="visible" multi="false">
								<sci:help>The property name </sci:help>
								<sci:member>Property 4 Format</sci:member>
								<sci:member>Property 4 Format String</sci:member>
							</sci:arg>
							<sci:arg name="Property 4 Format" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The format we wish to convert the value to. Missing values are ignored.</sci:help>
								<sci:legalval selected="true">Boolean (TF)</sci:legalval>
								<sci:legalval>Boolean (True False)</sci:legalval>
								<sci:legalval>Boolean (YN)</sci:legalval>
								<sci:legalval>Boolean (10)</sci:legalval>
								<sci:legalval>Double (using Format string)</sci:legalval>
								<sci:legalval>DateTime (using Format string)</sci:legalval>
							</sci:arg>
							<sci:arg name="Property 4 Format String" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>For Double and DateTime types, the format string.

For Double formatting, look online for the format string format for &quot;swprintf&quot;. 

For DateTime formatting, the following is used (from strftime):

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;%a&lt;/b&gt; is replaced by the locale&apos;s abbreviated weekday name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%A&lt;/b&gt; is replaced by the locale&apos;s full weekday name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%b&lt;/b&gt; is replaced by the locale&apos;s abbreviated month name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%B&lt;/b&gt; is replaced by the locale&apos;s full month name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%c&lt;/b&gt; is replaced by the locale&apos;s appropriate date and time representation.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%C&lt;/b&gt; is replaced by the century number (the year divided by 100 and truncated to an integer) as a decimal number [00-99].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%d&lt;/b&gt; is replaced by the day of the month as a decimal number [01,31].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%D&lt;/b&gt; same as %m/%d/%y.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%e&lt;/b&gt; is replaced by the day of the month as a decimal number [1,31]; a single digit is preceded by a space.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%h&lt;/b&gt; same as %b.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%H&lt;/b&gt; is replaced by the hour (24-hour clock) as a decimal number [00,23].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%I&lt;/b&gt; is replaced by the hour (12-hour clock) as a decimal number [01,12].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%j&lt;/b&gt; is replaced by the day of the year as a decimal number [001,366].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%m&lt;/b&gt; is replaced by the month as a decimal number [01,12].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%M&lt;/b&gt; is replaced by the minute as a decimal number [00,59].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%n&lt;/b&gt; is replaced by a newline character.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%p&lt;/b&gt; is replaced by the locale&apos;s equivalent of either a.m. or p.m.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%r&lt;/b&gt; is replaced by the time in a.m. and p.m. notation; in the POSIX locale this is equivalent to %I:%M:%S %p.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%R&lt;/b&gt; is replaced by the time in 24 hour notation (%H:%M).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%S&lt;/b&gt; is replaced by the second as a decimal number [00,61].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%t&lt;/b&gt; is replaced by a tab character.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%T&lt;/b&gt; is replaced by the time (%H:%M:%S).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%u&lt;/b&gt; is replaced by the weekday as a decimal number [1,7], with 1 representing Monday.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%U&lt;/b&gt; is replaced by the week number of the year (Sunday as the first day of the week) as a decimal number [00,53].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%V&lt;/b&gt; is replaced by the week number of the year (Monday as the first day of the week) as a decimal number [01,53]. If the week containing 1 January has four or more days in the new year, then it is considered week 1. Otherwise, it is the last week of the previous year, and the next week is week 1.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%w&lt;/b&gt; is replaced by the weekday as a decimal number [0,6], with 0 representing Sunday.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%W&lt;/b&gt; is replaced by the week number of the year (Monday as the first day of the week) as a decimal number [00,53]. All days in a new year preceding the first Monday are considered to be in week 0.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%x&lt;/b&gt; is replaced by the locale&apos;s appropriate date representation.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%X&lt;/b&gt; is replaced by the locale&apos;s appropriate time representation.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%y&lt;/b&gt; is replaced by the year without century as a decimal number [00,99].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%Y&lt;/b&gt; is replaced by the year with century as a decimal number.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%Z&lt;/b&gt; is replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%%&lt;/b&gt; is replaced by %.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Property 5" type="PropertyNameType" required="false" visibility="visible" multi="false">
								<sci:help>The property name </sci:help>
								<sci:member>Property 5 Format</sci:member>
								<sci:member>Property 5 Format String</sci:member>
							</sci:arg>
							<sci:arg name="Property 5 Format" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The format we wish to convert the value to. Missing values are ignored.</sci:help>
								<sci:legalval selected="true">Boolean (TF)</sci:legalval>
								<sci:legalval>Boolean (True False)</sci:legalval>
								<sci:legalval>Boolean (YN)</sci:legalval>
								<sci:legalval>Boolean (10)</sci:legalval>
								<sci:legalval>Double (using Format string)</sci:legalval>
								<sci:legalval>DateTime (using Format string)</sci:legalval>
							</sci:arg>
							<sci:arg name="Property 5 Format String" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>For Double and DateTime types, the format string.

For Double formatting, look online for the format string format for &quot;swprintf&quot;. 

For DateTime formatting, the following is used (from strftime):

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;%a&lt;/b&gt; is replaced by the locale&apos;s abbreviated weekday name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%A&lt;/b&gt; is replaced by the locale&apos;s full weekday name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%b&lt;/b&gt; is replaced by the locale&apos;s abbreviated month name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%B&lt;/b&gt; is replaced by the locale&apos;s full month name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%c&lt;/b&gt; is replaced by the locale&apos;s appropriate date and time representation.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%C&lt;/b&gt; is replaced by the century number (the year divided by 100 and truncated to an integer) as a decimal number [00-99].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%d&lt;/b&gt; is replaced by the day of the month as a decimal number [01,31].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%D&lt;/b&gt; same as %m/%d/%y.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%e&lt;/b&gt; is replaced by the day of the month as a decimal number [1,31]; a single digit is preceded by a space.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%h&lt;/b&gt; same as %b.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%H&lt;/b&gt; is replaced by the hour (24-hour clock) as a decimal number [00,23].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%I&lt;/b&gt; is replaced by the hour (12-hour clock) as a decimal number [01,12].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%j&lt;/b&gt; is replaced by the day of the year as a decimal number [001,366].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%m&lt;/b&gt; is replaced by the month as a decimal number [01,12].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%M&lt;/b&gt; is replaced by the minute as a decimal number [00,59].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%n&lt;/b&gt; is replaced by a newline character.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%p&lt;/b&gt; is replaced by the locale&apos;s equivalent of either a.m. or p.m.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%r&lt;/b&gt; is replaced by the time in a.m. and p.m. notation; in the POSIX locale this is equivalent to %I:%M:%S %p.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%R&lt;/b&gt; is replaced by the time in 24 hour notation (%H:%M).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%S&lt;/b&gt; is replaced by the second as a decimal number [00,61].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%t&lt;/b&gt; is replaced by a tab character.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%T&lt;/b&gt; is replaced by the time (%H:%M:%S).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%u&lt;/b&gt; is replaced by the weekday as a decimal number [1,7], with 1 representing Monday.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%U&lt;/b&gt; is replaced by the week number of the year (Sunday as the first day of the week) as a decimal number [00,53].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%V&lt;/b&gt; is replaced by the week number of the year (Monday as the first day of the week) as a decimal number [01,53]. If the week containing 1 January has four or more days in the new year, then it is considered week 1. Otherwise, it is the last week of the previous year, and the next week is week 1.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%w&lt;/b&gt; is replaced by the weekday as a decimal number [0,6], with 0 representing Sunday.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%W&lt;/b&gt; is replaced by the week number of the year (Monday as the first day of the week) as a decimal number [00,53]. All days in a new year preceding the first Monday are considered to be in week 0.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%x&lt;/b&gt; is replaced by the locale&apos;s appropriate date representation.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%X&lt;/b&gt; is replaced by the locale&apos;s appropriate time representation.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%y&lt;/b&gt; is replaced by the year without century as a decimal number [00,99].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%Y&lt;/b&gt; is replaced by the year with century as a decimal number.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%Z&lt;/b&gt; is replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%%&lt;/b&gt; is replaced by %.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Property 6" type="PropertyNameType" required="false" visibility="visible" multi="false">
								<sci:help>The property name </sci:help>
								<sci:member>Property 6 Format</sci:member>
								<sci:member>Property 6 Format String</sci:member>
							</sci:arg>
							<sci:arg name="Property 6 Format" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The format we wish to convert the value to. Missing values are ignored.</sci:help>
								<sci:legalval selected="true">Boolean (TF)</sci:legalval>
								<sci:legalval>Boolean (True False)</sci:legalval>
								<sci:legalval>Boolean (YN)</sci:legalval>
								<sci:legalval>Boolean (10)</sci:legalval>
								<sci:legalval>Double (using Format string)</sci:legalval>
								<sci:legalval>DateTime (using Format string)</sci:legalval>
							</sci:arg>
							<sci:arg name="Property 6 Format String" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>For Double and DateTime types, the format string.

For Double formatting, look online for the format string format for &quot;swprintf&quot;. 

For DateTime formatting, the following is used (from strftime):

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;%a&lt;/b&gt; is replaced by the locale&apos;s abbreviated weekday name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%A&lt;/b&gt; is replaced by the locale&apos;s full weekday name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%b&lt;/b&gt; is replaced by the locale&apos;s abbreviated month name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%B&lt;/b&gt; is replaced by the locale&apos;s full month name.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%c&lt;/b&gt; is replaced by the locale&apos;s appropriate date and time representation.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%C&lt;/b&gt; is replaced by the century number (the year divided by 100 and truncated to an integer) as a decimal number [00-99].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%d&lt;/b&gt; is replaced by the day of the month as a decimal number [01,31].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%D&lt;/b&gt; same as %m/%d/%y.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%e&lt;/b&gt; is replaced by the day of the month as a decimal number [1,31]; a single digit is preceded by a space.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%h&lt;/b&gt; same as %b.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%H&lt;/b&gt; is replaced by the hour (24-hour clock) as a decimal number [00,23].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%I&lt;/b&gt; is replaced by the hour (12-hour clock) as a decimal number [01,12].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%j&lt;/b&gt; is replaced by the day of the year as a decimal number [001,366].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%m&lt;/b&gt; is replaced by the month as a decimal number [01,12].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%M&lt;/b&gt; is replaced by the minute as a decimal number [00,59].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%n&lt;/b&gt; is replaced by a newline character.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%p&lt;/b&gt; is replaced by the locale&apos;s equivalent of either a.m. or p.m.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%r&lt;/b&gt; is replaced by the time in a.m. and p.m. notation; in the POSIX locale this is equivalent to %I:%M:%S %p.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%R&lt;/b&gt; is replaced by the time in 24 hour notation (%H:%M).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%S&lt;/b&gt; is replaced by the second as a decimal number [00,61].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%t&lt;/b&gt; is replaced by a tab character.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%T&lt;/b&gt; is replaced by the time (%H:%M:%S).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%u&lt;/b&gt; is replaced by the weekday as a decimal number [1,7], with 1 representing Monday.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%U&lt;/b&gt; is replaced by the week number of the year (Sunday as the first day of the week) as a decimal number [00,53].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%V&lt;/b&gt; is replaced by the week number of the year (Monday as the first day of the week) as a decimal number [01,53]. If the week containing 1 January has four or more days in the new year, then it is considered week 1. Otherwise, it is the last week of the previous year, and the next week is week 1.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%w&lt;/b&gt; is replaced by the weekday as a decimal number [0,6], with 0 representing Sunday.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%W&lt;/b&gt; is replaced by the week number of the year (Monday as the first day of the week) as a decimal number [00,53]. All days in a new year preceding the first Monday are considered to be in week 0.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%x&lt;/b&gt; is replaced by the locale&apos;s appropriate date representation.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%X&lt;/b&gt; is replaced by the locale&apos;s appropriate time representation.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%y&lt;/b&gt; is replaced by the year without century as a decimal number [00,99].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%Y&lt;/b&gt; is replaced by the year with century as a decimal number.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%Z&lt;/b&gt; is replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;%%&lt;/b&gt; is replaced by %.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Implementation Of" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:legalval>Normalize Property Types</sci:legalval>
								<sci:legalval>Clean Data</sci:legalval>
								<sci:legalval selected="true">Set Property Format</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 14 07:45:19 2017</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#prop1 := trim(Parameter(&apos;Property 1&apos;, 2));
#prop1format := trim(Parameter(&apos;Property 1 Format&apos;, 2));
#prop2 := trim(Parameter(&apos;Property 2&apos;, 2));
#dots := &apos;&apos;;
if (StrLength(#prop2) &gt; 0) then
	#dots := &apos;,...&apos;;
end if;
if(strlength(#prop1) &gt; 0) then	
	&apos;Format &apos; . #prop1 . &apos; to &apos; . #prop1Format . #dots;
else
	&apos;&apos;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{55C0EE28-B94C-4A98-A8E3-956D367F6B0E}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1530 -1195</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Convert all property values (that are not missing values) to the desired format</sci:value>
								<sci:value>You provide a list of properties and the desired format. Data containing any of those properties will have their values so formatted.

You can also manage &lt;i&gt;missing values&lt;i/&gt;, which are values that are ignored and not formatted. </sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>The Normalized data records, or the summary for each property.</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>12</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Set Property Format</sci:value>
							</sci:arg>
						</sci:component>
						<sci:proplist>
							<sci:propval name="RegistrationVersion">18.1.0.1590</sci:propval>
						</sci:proplist>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Keep Properties" version="2">
							<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
								<sci:help>The list of property names to keep</sci:help>
								<sci:member>RenameList</sci:member>
								<sci:value>canonical_smiles</sci:value>
								<sci:value>Aff_NET_Pred</sci:value>
								<sci:value>idnumber</sci:value>
							</sci:arg>
							<sci:arg name="RenameList" type="PropertyNameType" required="false" visibility="visible" multi="true">
								<sci:help>If provided, it causes the properties given in PropertyList to be 
renamed to the corresponding name in this list.  If not provided, then no properties are renamed.</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Keep</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:18:38 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	&apos;Keep &apos; . #displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1818 -1195</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{456195EF-9708-4367-B3DD-21EBF3796604}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Keeps only the specified properties</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, retains only the properties found in the list of property names specified by &lt;i&gt;PropertyList&lt;/i&gt;.  All other properties are removed.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To remove specified properties from each data record, use 
&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>With only the specified properties remaining</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>14</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Keep Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:connectid from="3" to="5" type="true"/>
					<sci:connectid from="20" to="21" type="true"/>
					<sci:connectid from="21" to="22" type="true"/>
					<sci:connectid from="22" to="19" type="true"/>
					<sci:connectid from="19" to="18" type="true"/>
					<sci:connectid from="18" to="16" type="true"/>
					<sci:connectid from="16" to="17" type="true"/>
					<sci:connectid from="6" to="20" type="true"/>
					<sci:connectid from="6" to="15" type="true"/>
					<sci:connectid from="15" to="9" type="true"/>
					<sci:connectid from="9" to="10" type="true"/>
					<sci:connectid from="10" to="0" type="true"/>
					<sci:connectid from="0" to="12" type="true"/>
					<sci:connectid from="12" to="14" type="true"/>
					<sci:connectid from="14" to="17" type="true"/>
				</sci:protocol>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Subprotocol" version="2">
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;DD:MM:SS&amp;gt; - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Source</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>The file or URL source to read</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>SourceTag</sci:member>
						<sci:member>Keep Properties</sci:member>
						<sci:member>UTF-8 Auto Detect</sci:member>
						<sci:value>$(UserDir)/PP/IonModel/NETSN100TemporalSplitTraining.sd.gz</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Maximum</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
					</sci:arg>
					<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>SourceTag</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called 
&lt;b&gt;SourceTag&lt;/b&gt; is created and holds the value indicated.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;None&lt;/b&gt;: 
No SourceTag property is created and any existing ones are removed.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Filename&lt;/b&gt;: 
The name of the file read.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FilenameAndExtension&lt;/b&gt;: The name of the 
file read with its file extension.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FullFilename&lt;/b&gt;: The name of the 
file read, including the directory path.&lt;/li&gt;&lt;li&gt;&lt;b&gt;ZipFilename&lt;/b&gt;: When reading 
a compressed zip file, the filename within the compressed archive.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Number&lt;/b&gt;: 
When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;&lt;li&gt;&lt;b&gt;Letter&lt;/b&gt;: 
When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;&lt;li&gt;&lt;b&gt;KeepCurrent&lt;/b&gt;: 
Keeps the current value of SourceTag.&lt;/li&gt;&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Filename</sci:legalval>
						<sci:legalval>FilenameAndExtension</sci:legalval>
						<sci:legalval>FullFilename</sci:legalval>
						<sci:legalval>ZipFilename</sci:legalval>
						<sci:legalval>Number</sci:legalval>
						<sci:legalval>Letter</sci:legalval>
						<sci:legalval>KeepCurrent</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Keep Properties</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_UsesComponentGUID">{CA65B896-4FE6-4E3A-B884-DC16B53B8D26}</sci:propval>
						</sci:metaproplist>
						<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.</sci:help>
					</sci:arg>
					<sci:arg name="UTF-8 Auto Detect" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>UTF-8 Auto Detect</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;UTF-8 is a type of character encoding used to represent international characters with multiple bytes whereas basic Latin characters remain as a single byte.  Files can be stored with a Byte Order Mark (BOM) to indicate that the type of character encoding.&lt;/p&gt;
&lt;p&gt;When reading files that do not have a BOM, this parameter allows the reader to attempt to automatically detect UTF-8 encodings and convert as needed.  However, be aware that automatic detection is not always reliable.  In some cases, valid text stored in different character encodings can appear to be valid UTF-8.  In these cases, the automatic detection will result in garbled text.  When this occurs, you can consider using the &lt;a href=&quot;javascript:DoLink(&apos;{B0B1B56C-3DF6-444C-BB78-B43211188F63}&apos;)&quot;&gt;Binary Reader&lt;/a&gt; to read the file, then converting using the Pilotscript function &lt;b&gt;ConvertBytesToString&lt;/b&gt;&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Most similar from file </sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>GeneratorNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>666 -2295</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
						<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>17.2.0.1267</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>11</sci:value>
					</sci:arg>
					<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Checkpoint Identifier</sci:help>
						<sci:legalval selected="true">{739DC294-1DC4-4982-AC12-C20CDBFE76E1}</sci:legalval>
						<sci:legalval selected="true">1</sci:legalval>
						<sci:legalval selected="true">-1</sci:legalval>
						<sci:legalval selected="true">1</sci:legalval>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.MDLSDReader.1">
						<sci:component name="SD Reader" version="2">
							<sci:arg name="Source" type="LinkParentParameterType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:metaproplist>
									<sci:propval name="SCI_InitializeUsingOrigType">URLType</sci:propval>
								</sci:metaproplist>
								<sci:help>The file or URL source to read</sci:help>
								<sci:member>Maximum</sci:member>
								<sci:member>SourceTag</sci:member>
								<sci:member>Keep Properties</sci:member>
								<sci:member>UTF-8 Auto Detect</sci:member>
								<sci:value>Source</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>ReadProperties</sci:member>
								<sci:member>PutNameInProperty</sci:member>
								<sci:member>ReadQueryInfo</sci:member>
								<sci:member>PutCommentInProperty</sci:member>
								<sci:member>SD Format Options</sci:member>
								<sci:member>Global Templates</sci:member>
							</sci:arg>
							<sci:arg name="SD Format Options" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>&lt;p&gt;Options available for the SD Reader:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Properties Can Contain $$$$:&lt;/b&gt;  By the CTFile standard, a property can contain a &apos;$$$$&apos;-line.  
Properties or data field values are terminated by a blank line.  Only then will the &apos;$$$$&apos;-line 
terminate the full data block.  Setting this option off will terminate the data block upon any read of 
a &apos;$$$$&apos;-line.  This option is available to provide compatibility with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;One-space Lines Terminate Properties:&lt;/b&gt;  By the CTFile standard, properties or data fields values are 
terminated by a blank line. Selecting this option will terminate the data block when encountering a line 
containing a space as the only character in the line.  This option is available to provide compatibility 
with some 3rd Party SD files.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Unwrap Long Property Lines:&lt;/b&gt;  By the CTFile standard, lines in property fields cannot exceed 200 characters.  When this option is selected and a property line of exactly 200 characters is found, the newline character will be ignored and property string will continue on the next line.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Read Unknown Stereo Parity:&lt;/b&gt;  When selected, the SD Reader will use the &apos;Atom Parity&apos; value (parity of 
&apos;3&apos;) to mark unknown stereo centers in 3D mol files.  This will leave these atoms marked as 
&apos;unknown stereo&apos; and will not calculate the stereo from the coordinates.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Process Complex Data Header Lines:&lt;/b&gt; Data header lines are the lines in the SD format that precede the actual data. They can contain the data field name (enclosed in angular brackets &lt;&gt;), the data field number (as DTn), the external registry number (enclosed in parentheses), and other optional information. When this parameter is set to False, only the data field name is parsed and used to set the corresponding property name. All the other information in the line is ignored. When the parameter is set to true, all the information is parsed. The property name is set from either the field name in &lt;&gt; or the DTn. If both are present the field name takes priority and the DTn number is saved as an additional property named &lt;b&gt;FieldName#DTn&lt;/b&gt;. The external registry number is saved as &lt;b&gt;FieldName#ExtRegNum&lt;/b&gt; and any other information is saved as &lt;b&gt;FieldName#OtherDataFieldInfo&lt;/b&gt;. When the molecules are written to an SD file, the data header lines are reconstructed from these properties. The default state of this parameter is False, as parsing, preserving, and eventually writing all the information in the data header lines can be costly, specially for SD files with many data fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert From H2 And H+ Atom Types:&lt;/b&gt; &apos;H2&apos; and &apos;H+&apos; are two non-standard element types that can be assigned to atoms by the BIOVIA Draw sketcher. They represent unattached Hydrogen (a Hydrogen molecule) and charged Hydrogen (a proton), respectively. When this parameter is selected, these atom types are converted to standard hydrogen atoms upon reading, with charges of 0 for H2 and +1 for H+. Otherwise, these atoms are read and perceived as unknown atom types, with &apos;H2&apos; and &apos;H+&apos; as the atom labels.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert Radicals To Pi Systems:&lt;/b&gt; When selected, pi bonds will be perceived between adjacent atoms marked with radicals and any adjacent metal atom.  Once pi bonds are perceived, subsequent exports will represent the pi bonds using the V3000 format and one-to-many coordination bonds (type 9) unless the writer&apos;s &lt;i&gt;Convert Pi Systems To Radicals&lt;/i&gt; option is used to convert the pi systems back. &lt;/li&gt;
&lt;li&gt;&lt;b&gt;Convert GEN+DAT to Polymer Repeat Units:&lt;/b&gt; When selected, this option will automatically convert input GEN sgroups with linked DAT sgroups having the special fieldname of &apos;rc&apos; and numeric or numeric range data internally into polymer repeat sgroups.  This usage is a special type of NONS (Non-Specific Structure) convention that was prototyped in previous releases.  Disabling this conversion will have a higher likelihood of producing a structure that can be registered into Direct databases. &lt;/li&gt;
&lt;li&gt;&lt;b&gt;Always Keep Enhanced Stereo:&lt;/b&gt; Preserves any enhanced stereo collections that are read in from V3000 MOL file.  When disabled, stereo structures will be checked to see if they can be represented more simply using only the Chiral Flag.  That is, structures with only ABS centers can be represented without enhanced stereo by setting the Chiral Flag on and structures with all centers in a single AND group can be represented without enhanced stereo by setting the Chiral Flag off.  Enhanced stereo collections that do not fit into the above cases are always preserved.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">Properties Can Contain $$$$</sci:legalval>
								<sci:legalval>One-space Lines Terminate Properties</sci:legalval>
								<sci:legalval selected="true">Unwrap Long Property Lines</sci:legalval>
								<sci:legalval>Read Unknown Stereo Parity</sci:legalval>
								<sci:legalval>Process Complex Data Header Lines</sci:legalval>
								<sci:legalval selected="true">Convert From H2 And H+ Atom Types</sci:legalval>
								<sci:legalval>Convert Radicals To Pi Systems</sci:legalval>
								<sci:legalval selected="true">Convert GEN+DAT to Polymer Repeat Units</sci:legalval>
								<sci:legalval>Always Keep Enhanced Stereo</sci:legalval>
							</sci:arg>
							<sci:arg name="ReadProperties" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Select True to read the properties for each molecule (in addition to the structures)</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ReadQueryInfo" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>If properties starting with &quot;QueryInfo&quot; are present, use them to set up query information on the atoms and bonds. (This is how, for example, SMARTS query information can be preserved when writing to an SD format file.) For molecules saved in MOL/SD format, this information only contains information that cannot be written out in the connection table.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="PutNameInProperty" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>What to call the property that holds the name of each molecule</sci:help>
								<sci:value>Name</sci:value>
							</sci:arg>
							<sci:arg name="PutCommentInProperty" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>What to call the property that holds the comment associated with each molecule</sci:help>
							</sci:arg>
							<sci:arg name="Global Templates" type="URLType" required="false" visibility="visible" multi="false">
								<sci:help>V3000 SD or MOL files containing template definitions for amino acid, nucleic acid or other residues or monomers. These templates can then be refered to by molecules read by the SD reader.&lt;p&gt;
The default template file included in the Chemistry collection, &lt;i&gt;data\Direct\Direct_templates.mol&lt;/i&gt; contains definitions for 22 amino acids and 8 DNA and RNA templates.</sci:help>
								<sci:value>data\HELM\SCSRtemplates.mol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Maximum" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false">
								<sci:help>The maximum number of data records to read (all if value is empty)</sci:help>
								<sci:value>Maximum</sci:value>
							</sci:arg>
							<sci:arg name="SourceTag" type="PromotedGroupMemberType" required="true" visibility="nevershow" multi="false">
								<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called 
&lt;b&gt;SourceTag&lt;/b&gt; is created and holds the value indicated.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;None&lt;/b&gt;: 
No SourceTag property is created and any existing ones are removed.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Filename&lt;/b&gt;: 
The name of the file read.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FilenameAndExtension&lt;/b&gt;: The name of the 
file read with its file extension.&lt;/li&gt;&lt;li&gt;&lt;b&gt;FullFilename&lt;/b&gt;: The name of the 
file read, including the directory path.&lt;/li&gt;&lt;li&gt;&lt;b&gt;ZipFilename&lt;/b&gt;: When reading 
a compressed zip file, the filename within the compressed archive.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Number&lt;/b&gt;: 
When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;&lt;li&gt;&lt;b&gt;Letter&lt;/b&gt;: 
When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;&lt;li&gt;&lt;b&gt;KeepCurrent&lt;/b&gt;: 
Keeps the current value of SourceTag.&lt;/li&gt;&lt;/ul&gt;</sci:help>
								<sci:value>SourceTag</sci:value>
							</sci:arg>
							<sci:arg name="Keep Properties" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false">
								<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), properties are not retained.</sci:help>
								<sci:value>Keep Properties</sci:value>
							</sci:arg>
							<sci:arg name="UTF-8 Auto Detect" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;UTF-8 is a type of character encoding used to represent international characters with multiple bytes whereas basic Latin characters remain as a single byte.  Files can be stored with a Byte Order Mark (BOM) to indicate that the type of character encoding.&lt;/p&gt;
&lt;p&gt;When reading files that do not have a BOM, this parameter allows the reader to attempt to automatically detect UTF-8 encodings and convert as needed.  However, be aware that automatic detection is not always reliable.  In some cases, valid text stored in different character encodings can appear to be valid UTF-8.  In these cases, the automatic detection will result in garbled text.  When this occurs, you can consider using the &lt;a href=&quot;javascript:DoLink(&apos;{B0B1B56C-3DF6-444C-BB78-B43211188F63}&apos;)&quot;&gt;Binary Reader&lt;/a&gt; to read the file, then converting using the Pilotscript function &lt;b&gt;ConvertBytesToString&lt;/b&gt;&lt;/p&gt;</sci:help>
								<sci:value>UTF-8 Auto Detect</sci:value>
							</sci:arg>
							<sci:arg name="HasConvertPiSystemOption" type="BoolType" required="false" visibility="nevershow" multi="false" legalvalsenforced="false">
								<sci:help>Hidden flag specifying the presence of the &quot;Convert Radicals To Pi Systems&quot; option.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="AllowUnknownDoubleBondsFromCoordinates" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>According to the CTfile specifications, the cis/trans character of double bonds with bond stereo set to zero is determined from the coordinates. This parameter controls whether or not to assign unknown bond stereo to double bonds for which the stereo could not be determined from the coordinates, either because there are no coordinates or because of colinearity issues.  When the parameter is set to False and the stereo could not be determined, no specific stereo configuration is assigned to the double bond, but it is not marked as unknown stereo.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/chemistry</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Apr 06 11:41:13 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>SD Reader</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{CA65B896-4FE6-4E3A-B884-DC16B53B8D26}</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SD Reader</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Reads MOL (molecule CTAB) files and SD (structured data) files</sci:value>
								<sci:value>&lt;p&gt;Creates a molecular data record for each molecule represented in the &lt;i&gt;Source&lt;/i&gt; 
data file.  All properties contained in the file are read into the data records.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;This 
component can also read zipped (.zip) and URL-based files.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;See 
Also:&lt;/b&gt;&lt;p&gt;&lt;ul&gt;&lt;li&gt;To write files in MOL or SD format, use the &lt;a href=&quot;javascript:DoLink(&apos;{DC8EE7B0-0620-42FE-944C-B4CD1E79480E}&apos;)&quot;&gt;SD 
Writer&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;To convert a molecule to and from between text properties in CTAB 
format, use &lt;a href=&quot;javascript:DoLink(&apos;{E622FBD9-9FA9-451A-A102-1800B5F28B6D}&apos;)&quot;&gt;Molecule 
to CTAB&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{7D354B65-DDD8-4EA4-83A7-21501A8A6852}&apos;)&quot;&gt;Molecule 
from CTAB&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Other related CTFile format file readers include &lt;a href=&quot;javascript:DoLink(&apos;{169AB4E5-A470-477B-AA65-50464411036C}&apos;)&quot;&gt;RG 
Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{036731AA-0015-4606-9750-7D9D020F21C8}&apos;)&quot;&gt;RXN 
Reader&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{55431CCB-06EA-4741-B95B-633C877E3E9B}&apos;)&quot;&gt;RD 
Reader&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt;</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>Molecule</sci:value>
								<sci:value>Data fields in the SD file will be added to the property fields</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.59</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>4</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Chemistry\Data Access and Manipulation\Readers\SD Reader</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Remove Properties" version="2">
							<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
								<sci:help>The names of properties to remove from each data record entering the component</sci:help>
								<sci:value>sequence</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Remove</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:18:43 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;PropertyList&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	&apos;Remove &apos; . #displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Removes the specified properties</sci:value>
								<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records with the specified properties removed</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>14</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.CountRecords.1">
						<sci:component name="Count and Index Data" version="2">
							<sci:arg name="Counter Property" type="PropertyNameType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
								<sci:member>Start Index</sci:member>
								<sci:member>Check if Property Already in Use</sci:member>
								<sci:value>index</sci:value>
							</sci:arg>
							<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:16:44 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Count and Index Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Count and Index Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>666 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Counts the number of data records and puts the count in a property</sci:value>
								<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>7</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.DataCacheIO.1">
						<sci:component name="Cache Writer" version="2">
							<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the cache to write, for example: A, 1234 or MyCache.  To create a temporary cacheID use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component.
</sci:help>
								<sci:member>Maximum</sci:member>
								<sci:member>Append</sci:member>
								<sci:member>Scope</sci:member>
								<sci:value>Training</sci:value>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The maximum number of data records to write to the cache.</sci:help>
							</sci:arg>
							<sci:arg name="Append" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>If True, append to a currently-existing cache if possible; if False, clear any current contents of the cache</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. &lt;I&gt;Job Only&lt;/I&gt; creates a cache that is visible
only to components in the currently-running protocol, and which is deleted when the protocol finishes.
&lt;I&gt;User Only&lt;/I&gt; creates a cache that is visible to components in any protocol a particular user runs;  
&lt;I&gt;All Users&lt;/I&gt; creates a cache that is visible to any user on the Pipeline Pilot server. 
&lt;P&gt;Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to fully determine a particular cache.&lt;/P&gt;
&lt;P&gt;Since the caches created with scopes &lt;I&gt;User Only&lt;/I&gt; and &lt;I&gt;All Users&lt;/I&gt;
may be accessed by multiple jobs, you should use caution, as problems may arise if two jobs try to write to 
the same shared cache at once. Also, to save disk space, you are responsible for deleting these caches
when finished, using the &lt;I&gt;Delete Cache&lt;/I&gt; component. &lt;/P&gt;
			</sci:help>
								<sci:legalval selected="true">Job Only</sci:legalval>
								<sci:legalval>User Only</sci:legalval>
								<sci:legalval>All Users</sci:legalval>
							</sci:arg>
							<sci:arg name="Create Index for Join" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>If set to True, creates an index for the cache that can be used by subsequent &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  As long as the later Join components use identical settings, the created index will greatly improve the performance of the join.  When set to true, you will also need to update &lt;i&gt;JoinUsing&lt;/i&gt;, &lt;i&gt;JoinUsingListType&lt;/i&gt;, &lt;i&gt;JoinPropertyType&lt;/i&gt;, and &lt;i&gt;IgnoreCase&lt;/i&gt; to match your Join component.</sci:help>
								<sci:member>JoinUsing</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:member>JoinPropertyType</sci:member>
								<sci:member>JoinUsingListType</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinUsing" type="PropertyNameType" required="false" visibility="visible" multi="false">
								<sci:help>The name of the property or properties to index for use by &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="JoinUsingListType" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted for creating a cache index when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: The join will use only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: The join will use the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;
&lt;p&gt;This parameter must match the identically named parameter on the Join component in order to benefit from the created index.&lt;/p&gt;</sci:help>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinPropertyType" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The data type of the &lt;i&gt;JoinUsing&lt;/i&gt; property. This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
								<sci:legalval>IsNumeric</sci:legalval>
								<sci:legalval selected="true">IsText</sci:legalval>
								<sci:legalval>IsDate</sci:legalval>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Additional parameters to control the component behavior.</sci:help>
								<sci:member>Write Globals</sci:member>
								<sci:member>Enable Compression</sci:member>
								<sci:member>Password</sci:member>
							</sci:arg>
							<sci:arg name="Write Globals" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>&lt;p&gt;Specifies which globals, if any, are written into the cache.&lt;/p&gt;
&lt;p&gt;The value is an array of top-level global names or global nodes specified using XPath notation. Note that node names should end with a forward slash (/).&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Enable Compression" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
								<sci:help>&lt;p&gt;Specifies if data written to disk should be compressed.&lt;/p&gt;
&lt;b&gt;Note:&lt;b&gt; Starting with 2017 R2, compression uses the LZ4 compression algorithm which is very fast.  Turning off compression will typically result in 6 to 10 times increased disk usage with little or no improvement in performance.  You should test your own data for comparison.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>&lt;p&gt;
An optional password to assign to the cache content. Once set, the password must be used to read data back from the cache. It is useful to control access to a new public data cache.
&lt;/p&gt;
&lt;p&gt;
For an existing cache, set the password to be able to overwrite or append to the content.
&lt;/p&gt;
&lt;p&gt;
Note that the user who writes a password-protected cache does not require a password to access or overwrite the content.
&lt;/p&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
							</sci:arg>
							<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
								<sci:legalval selected="true">Writer</sci:legalval>
								<sci:legalval>Reader</sci:legalval>
								<sci:legalval>Writer/Reader</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Aug 28 09:11:28 2017</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;CacheID&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#displayName := Parameter(&apos;CacheID&apos;, 2);
if(StrLength(#displayName) &gt; 0) then	
	&apos;Write cache &apos; . #displayName;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>954 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DATABASENODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{674E3781-33EA-42BB-9099-49CB4C3D08E6}</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Cache Writer</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Writes data records to a named cache</sci:value>
								<sci:value>&lt;p&gt;A data cache is place where you can temporarily store data records without losing information.  Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache.  A cache can contain records of different types.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To avoid clashes with other cache names, you can use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to obtain a global with a unique cacheID.  For example, you could have a temporary cacheID identified by MYCACHE and set &lt;i&gt;CacheID&lt;/i&gt; to $(MYCACHE).&lt;/li&gt;
&lt;li&gt;Typically, a cache is scoped to only be visible to component in the currently-running job.  To create caches that outlive a job, and may be seen by other users, use the &lt;I&gt;Scope&lt;/I&gt; parameter.&lt;/li&gt;
&lt;li&gt;Caches can be used with the &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; component to add properties to a separate data stream.  To improve the performance of the join, the cache can be indexed during creation by using the &lt;i&gt;Create Index for Join&lt;/i&gt; parameter.&lt;/li&gt;
&lt;li&gt;A password may be assigned to a new cache to control read and write access to the content.&lt;/p&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To retrieve data from a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9099-05B44C3D08E6}&apos;)&quot;&gt;Cache Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To join against a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.0.1563</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>8</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Writers\Cache Writer</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="No-op" version="2">
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>CustomErrorText</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>PassDataToPort</sci:value>
							</sci:arg>
							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>the port to pass data to</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>No-op</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>954 -470</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.1.1</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>3</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="No-op" version="2">
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>CustomErrorText</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>PassDataToPort</sci:value>
							</sci:arg>
							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>the port to pass data to</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>No-op</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -645</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.1.1</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>17</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Subprotocol" version="2">
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval>False</sci:legalval>
								<sci:legalval selected="true">True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>localhost</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>20</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
								<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;DD:MM:SS&amp;gt; - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Subprotocol 2</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>SUBPROTOCOLNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -645</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
								<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.2.0.1267</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/coreutils</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Similarity Filter from File" version="2">
									<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
										<sci:help>Reference compound(s) specified as mol or sd file(s). </sci:help>
										<sci:value>$(UserDir)/PP/IonModel/NETSN100TemporalSplitTraining.sd.gz</sci:value>
									</sci:arg>
									<sci:arg name="NumberToKeep" type="LongType" required="true" visibility="visible" multi="false">
										<sci:help>Number of similar compounds to keep</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/chemistryadv</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Fri Jul 13 12:35:43 2012</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{183D1E3F-2619-4826-8ED9-EEB3045CE92E}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FILTERNODE</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Similarity Filter from File</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Similarity Filter from File</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -95</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Performs a similarity filter using a reference molecule or molecules from a specified file
</sci:value>
										<sci:value>&lt;p&gt;Performs a similarity filter using one or more reference molecules. These reference molecule(s) should be specified in MOL or SD file format by &lt;i&gt;Source&lt;/i&gt;. The top &lt;i&gt;NumberToKeep&lt;/i&gt; most similar molecules are output on the Pass port and the remainder are sent to the Fail port. The similarity calculation is based on the Scitegic FCFP_4 fingerprints and Tanimoto similarity.  The Similarity Filter component outputs the following properties:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;NumberOfClosest&lt;/b&gt;: number of molecules within the specified minimum similarity.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;ClosestNames&lt;/b&gt;: names of the closest molecules.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;ClosestSimilarities&lt;/b&gt;: similarity to the closest molecules.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more control over the descriptors, similarity coefficient and similarity threshhold used when conducting a similarity search, use &lt;a href=&quot;javascript:DoLink(&apos;{A1A8FA0A-1975-4d3d-A794-A52D7838E77A}&apos;)&quot;&gt;Molecular Similarity (Tanimoto etc)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</sci:value>
										<sci:value>Molecule</sci:value>
										<sci:value/>
										<sci:value>Molecule</sci:value>
										<sci:value>The N most similar molecules to the reference molecule(s).</sci:value>
										<sci:value>Molecule</sci:value>
										<sci:value>All molecules not in the N most similar list to the reference molecule(s)</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>9.0.0.1</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Make Shortcut by Default</sci:legalval>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Chemistry\Search and Similarity\Similarity\Similarity Filter from File</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol>
									<sci:data object="SciTegic.FileReader.1">
										<sci:component name="File Reader" version="2">
											<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
												<sci:help>The file name (with path) to be read</sci:help>
												<sci:member>Maximum</sci:member>
												<sci:member>SourceTag</sci:member>
												<sci:value>$(Source)</sci:value>
											</sci:arg>
											<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
												<sci:help>The maximum number of data records to read from the file</sci:help>
											</sci:arg>
											<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
												<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called &lt;b&gt;SourceTag&lt;/b&gt; is created and holds the value indicated.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;None&lt;/b&gt;: No SourceTag property is created and any existing ones are removed.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Filename&lt;/b&gt;: The name of the file read.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;FilenameAndExtension&lt;/b&gt;: The name of the file read with its file extension.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;FullFilename&lt;/b&gt;: The name of the file read, including the directory path.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;ZipFilename&lt;/b&gt;: When reading a compressed zip file, the filename within the compressed archive.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Number&lt;/b&gt;: When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Letter&lt;/b&gt;: When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;
&lt;li&gt;&lt;b&gt;KeepCurrent&lt;/b&gt;: Keeps the current value of SourceTag.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
												<sci:legalval selected="true">None</sci:legalval>
												<sci:legalval>Filename</sci:legalval>
												<sci:legalval>FilenameAndExtension</sci:legalval>
												<sci:legalval>FullFilename</sci:legalval>
												<sci:legalval>ZipFilename</sci:legalval>
												<sci:legalval>Number</sci:legalval>
												<sci:legalval>Letter</sci:legalval>
												<sci:legalval>KeepCurrent</sci:legalval>
											</sci:arg>
											<sci:arg name="DefaultComponent" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Component used to read file when the file extension is not recognized</sci:help>
												<sci:value>SD Reader</sci:value>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval>ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Fri Dec 21 10:00:33 2007</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>File Reader</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>DocumentNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{9DB0159B-6C9F-413F-8906-29FAC1C63ABE}</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>File Reader</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Reads data from files using the file extension to select the appropriate file reader
</sci:value>
												<sci:value>&lt;p&gt;Reads data from the file or files specified by &lt;i&gt;Source&lt;/i&gt; by reading each file using the reader component that matches the extension of each file name. For example, .sd files are sent the SD Reader and .smi files are sent to the SMILES Reader. The default parameters for each reader are used to read each file.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;DefaultComponent&lt;/i&gt; can be used to specify the reader to use when an input file&apos;s extension is not recognized.&lt;/p&gt;

&lt;p&gt;This component is useful for producing a Web protocol that allows you to start with different types of molecular or text files.&lt;/p&gt;</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.30</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\File Readers\File Reader</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>IsReference:=true</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Set isReference to true</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ExpressionNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>378 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.FastTanimoto.1">
										<sci:component name="Molecular Similarity (Tanimoto etc)" version="2">
											<sci:arg name="SimilarityCoefficient" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;The function used to calculate the similarity between two fingerprints.  The functions are defined as functions of their contributions.  See the help for the &lt;i&gt;OutputContributions&lt;/i&gt; parameter for definitions of the contributions.  The following choices are available: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Tanimoto&lt;/b&gt;:  &lt;i&gt;SA/(SA+SB+SC)&lt;/i&gt; The number of &quot;and&quot; bits normalized by the number of &quot;or&quot; bits.  
&lt;li&gt;&lt;b&gt;Dice&lt;/b&gt;:  &lt;i&gt;2*SA/(2*SA+SB+SC)&lt;/i&gt; The number of &quot;and&quot; bits normalized by the arithmetic mean of the number of on bits in the target and reference.
&lt;li&gt;&lt;b&gt;Cosine&lt;/b&gt;:  &lt;i&gt;SA/((SA+SB)*(SA+SC))^0.5&lt;/i&gt; The number of &quot;and&quot; bits normalized by the geometric mean of the number of on bits in the target and reference.
&lt;li&gt;&lt;b&gt;UserDefined&lt;/b&gt;:  This selection lets the user define their own similarity coeffiecient by inputting a PilotScript function of SA, SB and SC into the &lt;i&gt;UserDefinedCoefficient&lt;/i&gt; parameter.
&lt;/ul&gt;</sci:help>
												<sci:member>OutputContributions</sci:member>
												<sci:member>UserDefinedCoefficient</sci:member>
												<sci:legalval selected="true">Tanimoto</sci:legalval>
												<sci:legalval>Dice</sci:legalval>
												<sci:legalval>Cosine</sci:legalval>
												<sci:legalval>UserDefined</sci:legalval>
											</sci:arg>
											<sci:arg name="UserDefinedCoefficient" type="ExpressionType" required="false" visibility="visible" multi="false">
												<sci:help>User-defined PilotScript function of the contributions SA, SB, SC.  For example:
&lt;ul&gt;
&lt;li&gt;&quot;Tanimoto&quot; would be represented as: &lt;i&gt;SA/(SA+SB+SC)&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&quot;Dice&quot; would be written as: &lt;i&gt;2*SA/(2*SA+SB+SC)&quot;&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&quot;Cosine&quot; would be written as: &lt;i&gt;SA/sqrt((SA+SB)*(SA+SC))&lt;/i&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
												<sci:enabledscript>(parameter(&apos;SimilarityCoefficient&apos;) eq &apos;UserDefined&apos;)</sci:enabledscript>
											</sci:arg>
											<sci:arg name="OutputContributions" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>Toggles the output of the contributions to the SimilarityCoefficient calculation.  The contributions are defined as follows:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;SA&lt;/b&gt;:  The number of AND bits.  Bits present in both the target and the reference.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;SB&lt;/b&gt;:  The number of bits in the target but not the reference.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;SC&lt;/b&gt;:  The number of bits in the reference but not the target.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>The applicable input property for this component:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;PredefinedSet&lt;/b&gt;: Uses the fingerprint property specified by &lt;i&gt;PredefinedSet&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;UserSet&lt;/b&gt;: Uses the fingerprint property specified by &lt;i&gt;UserSet&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:help>
												<sci:member>UserSet</sci:member>
												<sci:member>PredefinedSet</sci:member>
												<sci:legalval selected="true">PredefinedSet</sci:legalval>
												<sci:legalval>UserSet</sci:legalval>
											</sci:arg>
											<sci:arg name="PredefinedSet" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>&lt;p&gt;A predefined set of properties to use for tanimoto similarities.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on various fingerprint types, see the Molecular Fingerprints chapter of the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/chemistry/docs/chemistry_one.pdf&apos;)&quot;&gt;Chemistry UserGuide&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
												<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to PredefinedSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;PredefinedSet&apos;</sci:enabledscript>
												<sci:legalval>FCFP_2</sci:legalval>
												<sci:legalval selected="true">FCFP_4</sci:legalval>
												<sci:legalval>FCFP_6</sci:legalval>
												<sci:legalval>ECFP_2</sci:legalval>
												<sci:legalval>ECFP_4</sci:legalval>
												<sci:legalval>ECFP_6</sci:legalval>
												<sci:legalval>MDLPublicKeys</sci:legalval>
												<sci:legalval>FCFC_2</sci:legalval>
												<sci:legalval>FCFC_4</sci:legalval>
												<sci:legalval>FCFC_6</sci:legalval>
												<sci:legalval>ECFC_2</sci:legalval>
												<sci:legalval>ECFC_4</sci:legalval>
												<sci:legalval>ECFC_6</sci:legalval>
											</sci:arg>
											<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>Name of the fingerprint property to use in the similarity calculations when &lt;i&gt;UseProperties&lt;/i&gt; is set to UserSet.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;UserSet&apos;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="MaximumNumberOfClosest" type="LongType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>Maximum number of closest reference compounds needed to discover for each target molecule output.  If left blank, then all reference compounds are listed.</sci:help>
												<sci:member>MaximumSimilarity</sci:member>
												<sci:member>MinimumSimilarity</sci:member>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="MinimumSimilarity" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>The minimum similarity value deemed acceptable for a reference compound to be similar to a target compound.</sci:help>
												<sci:value>0.0</sci:value>
											</sci:arg>
											<sci:arg name="MaximumSimilarity" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>The maximum similarity we are interested in; useful for performing a dissimilarity search for targets versus references. (One strategy is to set the maximum to 0.999 to eliminate exact matches.)</sci:help>
												<sci:value>1.0</sci:value>
											</sci:arg>
											<sci:arg name="TestForReference" type="ExpressionType" required="true" visibility="visible" multi="false">
												<sci:help>Test for reference compounds; other compounds are target molecules.</sci:help>
												<sci:member>TargetNameFrom</sci:member>
												<sci:member>ReferenceNameFrom</sci:member>
												<sci:member>OutputReferences</sci:member>
												<sci:member>References Are First</sci:member>
												<sci:value>IsReference is defined AND IsReference</sci:value>
											</sci:arg>
											<sci:arg name="ReferenceNameFrom" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>The property that holds the reference name.</sci:help>
												<sci:value>Name</sci:value>
											</sci:arg>
											<sci:arg name="TargetNameFrom" type="StringType" required="false" visibility="visible" multi="false">
												<sci:help>The property that holds the name of the target molecules.  This is put into the &lt;b&gt;TargetName&lt;/b&gt; output property for both targets and their associated references.  It makes viewing the output easier using the &lt;i&gt;HTML Molecular Grouped Viewer&lt;/i&gt;.
</sci:help>
												<sci:value>Name</sci:value>
											</sci:arg>
											<sci:arg name="OutputReferences" type="BoolType" required="true" visibility="visible" multi="false">
												<sci:help>If True, outputs the closest reference molecules immediately following each target molecule. In order to use this option, &lt;i&gt;References Are First&lt;/i&gt; must be False.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="References Are First" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:help>If True, then all reference data records must precede all target records in the input data. This gives much faster performance when the number of target records is large, because it means that these records need not be cached.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If this option is set to True, then the component generates an error if any reference data records are input after the first target record.
&lt;li&gt;To use this option, &lt;i&gt;OutputReferences&lt;/i&gt; must be False.
&lt;/ul&gt;</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="OptimizeFor" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Optimize for speed or memory utilization.  When optimizing for speed, the fingerprint is &quot;folded&quot; using the &lt;i&gt;BitsetSize&lt;/i&gt; parameter.

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This parameter applies only to bitwise fingerprint similarity calculations.  For count-based similarity calculations, no folding is performed.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
												<sci:member>BitsetSize</sci:member>
												<sci:legalval>MemoryUse</sci:legalval>
												<sci:legalval selected="true">Speed</sci:legalval>
											</sci:arg>
											<sci:arg name="BitsetSize" type="LongType" required="false" visibility="visible" multi="false">
												<sci:help>All bits from whatever kind of fingerprint are folded to fit into a set of this size.  If optimizing for speed, this is required. If optimizing for memory, this is optional (and can be much larger without degrading performance).</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;Applies only when OptimizeFor parameter is set to Speed&quot;);
(parameter(&apos;OptimizeFor&apos;) eq &apos;Speed&apos;)</sci:enabledscript>
												<sci:value>1024</sci:value>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="SortResults" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Toggles whether to sort the list of ClosestSimilarities output by this component.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/modeling</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Wed Jan 20 08:30:00 2010</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{A1A8FA0A-1975-4d3d-A794-A52D7838E77A}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Molecular Similarity (Tanimoto etc)</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Centroid_Similarity</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ComponentNode</sci:value>
											</sci:arg>
											<sci:arg name="Version" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>666 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Conducts a similarity search for a set of target compounds against a set of reference compounds</sci:value>
												<sci:value>&lt;p&gt;Takes a set of target and reference compounds as input. The target compounds are output, each augmented with a list of reference compound names that are within the similarity range specified, using a similarity measure (Tanimoto, Dice, Cosine or UserDefined) based on the fingerprint property specified by &lt;i&gt;PredefinedSet&lt;/i&gt; or &lt;i&gt;UserSet&lt;/i&gt;.  Optionally, each target compound can be followed by the successful reference compounds by setting &lt;i&gt;OutputReferences&lt;/i&gt; to True.&lt;/p&gt;

&lt;p&gt;The following properties are added to each output data record: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;NumberOfClosest&lt;/b&gt;:  Number of reference compounds within the specified range of minimum and maximum similarity.
&lt;li&gt;&lt;b&gt;ClosestNames&lt;/b&gt;:  Names of the closest reference compounds within the specified range of minimum and maximum similarity.
&lt;li&gt;&lt;b&gt;ClosestSimilarities&lt;/b&gt;:  Similarity to the closest compounds.
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is not a filter; &lt;b&gt;&lt;i&gt;all&lt;/i&gt;&lt;/b&gt; target compounds are sent out the Pass port.  However, some may not be within similarity range of any reference compounds and will have the property &lt;b&gt;NumberOfClosest&lt;/b&gt; set to zero.&lt;/li&gt;
&lt;li&gt;Only a single fingerprint property (e.g., ECFP_4) or counts property (e.g., ECFC_4) can be used in calculating the similarity. If you wish to use multiple fingerprints or non-fingerprint properties, &lt;a href=&quot;javascript:DoLink(&apos;{C58B4761-8743-4efe-9554-30E9716F7145}&apos;)&quot;&gt;Property Distance&lt;/a&gt; is the appropriate component to use.&lt;/li&gt;
&lt;li&gt;Use &lt;i&gt;References Are First&lt;/i&gt; to increase the speed of data record processing when you can ensure that all reference records precede all target records in the input data.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more details on the similarity calculation, see the Molecular Similarity chapter of the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/modeling/docs/modeling.pdf&apos;)&quot;&gt;Data Modeling User Guide&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Molecule</sci:value>
												<sci:value>Reference (tagged) and target compounds</sci:value>
												<sci:value>Molecule</sci:value>
												<sci:value>Target compounds with an added property listing the similar reference compounds. Optionally, the similar reference compounds can be output as well.</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.9</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Analysis and Statistics\Data Modeling\Similarity\Molecular Similarity (Tanimoto etc)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Filter (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>The PilotScript expression used to filter the data.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>ClosestSimilarities is defined</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Ensure ClosestSimilarities is defined</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FILTERNODE</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Filter (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>954 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
												<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>3</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
										<sci:proplist>
											<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
										</sci:proplist>
									</sci:data>
									<sci:data object="SciTegic.KeepNScreen.1">
										<sci:component name="Top N Filter" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false">
												<sci:help>The property name or PilotScript expression to use for ranking the data to select the top/bottom records.</sci:help>
												<sci:member>Keep Calculated</sci:member>
												<sci:value>ClosestSimilarities[1]</sci:value>
											</sci:arg>
											<sci:arg name="Keep Calculated" type="BoolType" required="true" visibility="visible" multi="false">
												<sci:help>Allows any properties that were calculated in &quot;Expression&quot; to be included 
with the exiting record. Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Number to Keep" type="DoubleType" required="true" visibility="visible" multi="false">
												<sci:help>The number of records to keep and output to the Pass (green) port.</sci:help>
												<sci:validscript>parameter() &gt; 0</sci:validscript>
												<sci:value>$(NumberToKeep)</sci:value>
											</sci:arg>
											<sci:arg name="Max or Min" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Indicates whether the highest (max) or lowest (min) ranking records
are retained.</sci:help>
												<sci:legalval selected="true">Max</sci:legalval>
												<sci:legalval>Min</sci:legalval>
											</sci:arg>
											<sci:arg name="Number to Keep is" type="StringType" required="true" visibility="visible" multi="false">
												<sci:help>Your choice of what the number in &lt;I&gt;Number to Keep&lt;/I&gt; means.

&lt;DL&gt;
&lt;DT&gt;&lt;B&gt;Number of Records&lt;/B&gt;&lt;DD&gt;The number is the exact number of incoming records to keep.
&lt;DT&gt;&lt;B&gt;Proportion&lt;/B&gt;&lt;DD&gt;The number is the proportion of the entire incoming data set to keep (e.g., 0.15 would keep exactly 15% of the incoming data). 
&lt;DT&gt;&lt;B&gt;Percentage&lt;/B&gt;&lt;DD&gt;The percent of the incoming data to keep (e.g., &quot;15&quot; would keep exactly 15% of the incoming data). (This is just the proportion times 100, but it&apos;s sometimes easier to think in percentages rather than proportions.)
&lt;/DL&gt;
</sci:help>
												<sci:legalval selected="true">Number of Records</sci:legalval>
												<sci:legalval>Proportion</sci:legalval>
												<sci:legalval>Percentage</sci:legalval>
											</sci:arg>
											<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
												<sci:help>Additional options to control the behavior of the component</sci:help>
												<sci:member>Output Failed Records</sci:member>
												<sci:member>Output At Least One Record</sci:member>
											</sci:arg>
											<sci:arg name="Output Failed Records" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>Specify whether or not to output the failed records through the Fail port. Setting this parameter to &lt;i&gt;False&lt;/i&gt; can save time, especially when selecting a small percentage (or proportion) of a large number of records and you are only interested in the records that pass.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Output At Least One Record" type="BoolType" required="false" visibility="visible" multi="false">
												<sci:help>Specify whether or not to always output at least one data record through the Pass port, even when setting the percentage (or proportion) to a very small value, which would result in no records being sent to the Pass port when this parameter is set to &lt;i&gt;False&lt;/i&gt;.</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Nov 05 11:34:43 2009</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Top N Filter</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Top N Filter</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>FilterNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{75F04448-3A09-4ECD-A462-D427268653D0}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>1242 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Sorts data records according to a specified property or PilotScript expression and passes the N records at the top (or bottom) of the list</sci:value>
												<sci:value>&lt;p&gt;Incoming records are ordered according to the numeric value of &lt;i&gt;Expression&lt;/i&gt; (e.g., a property name or a PilotScript expression that evaluates to a number).  Some number of top (or bottom) records in the sorted list are sent out the Pass port.  The remainder are sent out the Fail port.&lt;/p&gt;

&lt;p&gt;The number of records to pass is specified by &lt;i&gt;Number to Keep&lt;/i&gt;.  

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you wish to pass a proportion or percentage rather than an absolute number of data records, change the value of &lt;i&gt;Number to Keep is&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;To select a random subset of the data records use RandomNumber for &lt;i&gt;Expression&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you are sorting the entire dataset or require more complicated sorting, use &lt;a href=&quot;javascript:DoLink(&apos;{BC934106-6EA5-44e1-93C3-8787DECA9D15}&apos;)&quot;&gt;Sort Data&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Data records that sort in the top N items of the list</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Data records that do not sort in the top N items of the list</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.5.2.300</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>4</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Data Filters\Top N Filter</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>true</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Accept input</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>ExpressionNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -470</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>5</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:connectid from="0" to="1" type="true"/>
									<sci:connectid from="1" to="2" type="true"/>
									<sci:connectid from="2" to="3" type="true"/>
									<sci:connectid from="3" to="4" type="true"/>
									<sci:connectid from="5" to="2" type="true"/>
									<sci:version iVal="1"/>
								</sci:protocol>
							</sci:data>
						</sci:protocol>
					</sci:data>
					<sci:data object="SciTegic.CountRecords.1">
						<sci:component name="Count and Index Data" version="2">
							<sci:arg name="Counter Property" type="PropertyNameType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
								<sci:member>Start Index</sci:member>
								<sci:member>Check if Property Already in Use</sci:member>
								<sci:value>Affinity_Rank</sci:value>
							</sci:arg>
							<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:16:44 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Count and Index Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Count and Index Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>666 -645</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Counts the number of data records and puts the count in a property</sci:value>
								<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>22</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Rename Properties" version="2">
							<sci:arg name="Original Property Names" type="PropertyNameType" required="true" visibility="visible" multi="true">
								<sci:help>An array of property names to rename. The new name will be the corresponding name in &lt;i&gt;New Property Names&lt;i&gt;.</sci:help>
								<sci:value>ClosestNames</sci:value>
							</sci:arg>
							<sci:arg name="New Property Names" type="PropertyNameType" required="true" visibility="visible" multi="true">
								<sci:help>An array of the new property names. The original name will be the corresponding name in &lt;i&gt;Original Property Names&lt;i&gt;.</sci:help>
								<sci:value>index</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>RenameProperties</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Feb 28 12:30:36 2017</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#orig := Parameter(&apos;Original Property Names&apos;);
#new := Parameter(&apos;New Property Names&apos;);
if (numvalues(#orig) == 0 OR #orig[1] eq &quot;&quot; OR numvalues(#new) == 0 OR #new[1] eq &quot;&quot;) then
	&quot;&quot;;
else
  #display := &apos;Rename &apos; . #orig[1] . &apos; to &apos; . #new[1];
  if (numvalues(#orig) &gt; 1) then
    #display .= &apos;, ...&apos;;
  end if;
  #display;
end if;
</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>954 -820</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{04496ABE-C1D2-43D2-83D4-35AC9FC8D501}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Rename the specified properties</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, rename the properties found in the &lt;i&gt;Original Property Names&lt;/i&gt; list to the names provided in &lt;i&gt;New Property Names&lt;/i&gt;.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To remove specified properties from each data record, use 
&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>With only the specified properties remaining</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.0.1376</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>10</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Rename Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Keep Properties" version="2">
							<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
								<sci:help>The list of property names to keep</sci:help>
								<sci:member>RenameList</sci:member>
								<sci:value>index</sci:value>
								<sci:value>Affinity_Rank</sci:value>
								<sci:value>Aff_NET_Pred</sci:value>
							</sci:arg>
							<sci:arg name="RenameList" type="PropertyNameType" required="false" visibility="visible" multi="true">
								<sci:help>If provided, it causes the properties given in PropertyList to be 
renamed to the corresponding name in this list.  If not provided, then no properties are renamed.</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Keep</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:18:38 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	&apos;Keep &apos; . #displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1242 -820</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{456195EF-9708-4367-B3DD-21EBF3796604}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Keeps only the specified properties</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, retains only the properties found in the list of property names specified by &lt;i&gt;PropertyList&lt;/i&gt;.  All other properties are removed.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To remove specified properties from each data record, use 
&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>With only the specified properties remaining</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>13</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Keep Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="R Custom Script" version="2">
							<sci:arg name="Script" type="TextType" required="true" visibility="visible" multi="false">
								<sci:help>Text of the R script you wish to run.  Enter the script just as if you were typing it in R.</sci:help>
								<sci:value>AllData &lt;- AllData</sci:value>
							</sci:arg>
							<sci:arg name="InputFrame" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Name to use in R script for data.frame containing input data.  Data in this frame will be sent out the pass port on completion of the script.</sci:help>
								<sci:value>AllData</sci:value>
							</sci:arg>
							<sci:arg name="ResultsFrame" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Name to use in R script for data.frame containing calculation results, which will be sent out the fail port.</sci:help>
								<sci:value>Results</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>PlotWidth</sci:member>
								<sci:member>PlotHeight</sci:member>
								<sci:member>ShowRInputOutput</sci:member>
								<sci:member>R Functions Source</sci:member>
							</sci:arg>
							<sci:arg name="R Functions Source" type="URLType" required="false" visibility="visible" multi="false">
								<sci:help>Optional name of a file containing an R script or custom R functions you wish to use in the Script.  This file will be sourced in R before the Script is executed.
</sci:help>
								<sci:member>Embed External Scripts</sci:member>
							</sci:arg>
							<sci:arg name="Embed External Scripts" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>If True, indicates that the scripts specified by &lt;i&gt;R Functions Source&lt;/i&gt; are to be embedded in the R script created by this component. This can be useful for debugging purposes. If False, the scripts are concatenated into a separate temporary file that is executed using the R source() function.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="PlotWidth" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>Width in pixels of any plots created by the script</sci:help>
								<sci:value>600</sci:value>
							</sci:arg>
							<sci:arg name="PlotHeight" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>Height in pixels of any plots created by the script</sci:help>
								<sci:value>600</sci:value>
							</sci:arg>
							<sci:arg name="ShowRInputOutput" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>Specify whether or not to show the R script and the R stdout in Notepad viewers</sci:help>
								<sci:legalval>Script</sci:legalval>
								<sci:legalval>StdOutput</sci:legalval>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="TextType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:value>RExitStatus,PlotName,RFunctionsFile,ShowRScript,ShowRStdOutput,RDir,ScriptPrefix,ScriptSuffix,RParScript,RPlotWidth,RPlotHeight,RplotPrefix,stderr,ExternalScript</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:value>$(R_Run_Remote)</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>100000000</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
								<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>$(R_Server)</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Jul 20 12:16:31 2017</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>R Custom Script</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{140C906F-960F-4DCD-84FD-D7DBF7277F0D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1530 -820</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Executes R script</sci:value>
								<sci:value>Use this component to write your own custom R script for operating on incoming data records. All records coming into the component are put into an R data frame whose name is given by &lt;i&gt;InputFrame&lt;/i&gt;.  After your script has executed, the data in this frame are sent out the Pass port, including any changes made to the frame within the R script.
&lt;p&gt;
Any plots created in your script are sent out the Fail port and can be viewed with the &lt;a href=&quot;javascript:DoLink(&apos;{45979297-7C23-4374-BE33-1424E90A09A6}&apos;)&quot;&gt;R Plot Viewer&lt;/a&gt;.
&lt;p&gt;
If your R script creates a data frame with the name given by &lt;i&gt;ResultsFrame&lt;/i&gt;, the data in this frame are also  sent out the Fail port.  (You may wish to use this frame for summary statistics, for example.)
&lt;p&gt;
&lt;b&gt;Hints on manipulating R data frames&lt;/b&gt;
&lt;p&gt;
Assume that the &lt;i&gt;InputFrame&lt;/i&gt; name is &quot;AllData&quot; and that there are three properties -- ALogP, prop1, and Property 2 -- defined on each Pipeline Pilot data record (in that order).  Within the R script, you can refer to the ALogP values in any of the following ways:
&lt;p&gt;
&lt;code&gt;
ALogP&lt;br&gt;
AllData$ALogP&lt;br&gt;
AllData[&quot;ALogP&quot;]
AllData[1]&lt;br&gt;
AllData[,1]&lt;br&gt;
AllData[[1]]&lt;br&gt;
&lt;/code&gt;
&lt;p&gt;
Note that the following assignment in R does not change the value of ALogP within the AllData frame:
&lt;p&gt;
&lt;code&gt;ALogP &amp;lt;- ALogP + 0.5&lt;/code&gt;
&lt;p&gt;
while the following assignment does change the value within the frame:
&lt;p&gt;
&lt;code&gt;AllData$ALogP &amp;lt;- ALogP + 0.5&lt;/code&gt;
&lt;p&gt;
(The reason for this behavior is that after the data are read into R but before your script is executed, the &lt;code&gt;attach&lt;/code&gt; function is called on the data frame.  This allows you to refer to columns in the frame by column name alone, but any changes you make to the column name variables are made outside the frame.)
&lt;p&gt;
Properties with embedded spaces or special R characters such as &quot;#&quot; must always be quoted if referred to by name:
&lt;p&gt;
&lt;code&gt;AllData$&quot;Property 2&quot;&lt;/code&gt;
&lt;p&gt;
To add a new column to the frame, use the cbind function:
&lt;p&gt;
&lt;code&gt;AllData &amp;lt;- cbind(AllData, LogPCalc=ALogP+0.5)&lt;/code&gt;
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;Molecular structures are ignored by this component and will not be passed through. 
&lt;li&gt;An array property with N elements on an input data record will be converted to N scalar properties in order that the records conform to the R data frame structure.
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more information on writing R scripts, see &lt;a href=&quot;javascript:DoLink(&apos;http://cran.r-project.org/doc/manuals/R-intro.html&apos;)&quot;&gt;An Introduction to R&lt;/a&gt;.
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/rstats/docs/r_stats.pdf&apos;)&quot;&gt;R Statistics Components User Guide &lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://www.r-project.org/&apos;)&quot;&gt;R Project for Statistical Computing Web Site&lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://finzi.psych.upenn.edu/search.html&apos;)&quot;&gt;R Help Search Web Site&lt;/a&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.0.1523</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
								<sci:legalval>Cant Replace With Copy</sci:legalval>
								<sci:legalval>Cant Open</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/rstats</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>20</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Analysis and Statistics\R Statistics\Manipulators\R Custom Script</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.JoinProperties.1">
						<sci:component name="Join Data from Cache" version="2">
							<sci:arg name="JoinUsing" type="PropertyNameType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the property that identifies which records to join. When a record in the cache 
has the same value for this property as the incoming streaming data record, its properties and child 
nodes are added to the streaming record. Calculable properties can be used for the streaming data, but 
data in the cache must already contain stored properties to join.

If you provide a comma-separated list 
of property names, then by default all values must match. (You can control this behavior by changing 
JoinUsingListType.) Or, if you provide a property that is an array of values, then all values must match 
(and the source must provide the data in an array-based form.)</sci:help>
								<sci:member>JoinUsingListType</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
								<sci:member>JoinPropertyType</sci:member>
								<sci:value>index</sci:value>
							</sci:arg>
							<sci:arg name="JoinUsingListType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: Join using only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: Joins using the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;</sci:help>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinPropertyType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The data type of the join property</sci:help>
								<sci:legalval>IsNumeric</sci:legalval>
								<sci:legalval selected="true">IsText</sci:legalval>
								<sci:legalval>IsDate</sci:legalval>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set JoinPropertyType to IsText&apos;);
Parameter(&apos;JoinPropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the cache that was written using the Cache Writer</sci:help>
								<sci:member>Scope</sci:member>
								<sci:value>Training</sci:value>
							</sci:arg>
							<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The scope within which the cache we wish to join against exists.
&lt;ul&gt;
&lt;li&gt;&lt;I&gt;Job Only&lt;/I&gt; all caches created within the currently-running protocol.
&lt;li&gt;&lt;I&gt;User Only&lt;/I&gt; all caches created so that all jobs by that user can see them.
&lt;li&gt;&lt;I&gt;All Users&lt;/I&gt; all caches created by any user in the global scope. 
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">Job Only</sci:legalval>
								<sci:legalval>User Only</sci:legalval>
								<sci:legalval>All Users</sci:legalval>
							</sci:arg>
							<sci:arg name="Join Behavior" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:member>JoinOnto</sci:member>
								<sci:member>WhenJoiningOnto</sci:member>
								<sci:member>JoinAllNullString</sci:member>
								<sci:member>MultipleReferenceBehavior</sci:member>
								<sci:member>AppendNodes</sci:member>
							</sci:arg>
							<sci:arg name="JoinOnto" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates which data record will be output:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;ProcessData&lt;/i&gt;: The data streaming through the pipeline remains with properties and child nodes from the cache copied onto the record.
&lt;li&gt;&lt;i&gt;Reference&lt;/i&gt;: The data from the cache remains with properties and child nodes from the streaming data record copied onto the record.  Only data records that successfully join against the incoming data stream will be output.
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">ProcessData</sci:legalval>
								<sci:legalval>Reference</sci:legalval>
							</sci:arg>
							<sci:arg name="WhenJoiningOnto" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;During the joining of two property lists, this parameter indicates how differences 
between the property lists are resolved.  
By default, the streaming input data (process data) serves 
as the base for a join and the cache data (reference data) is treated as the joining data (this distinction 
can be reversed using the &lt;i&gt;JoinOnto&lt;/i&gt; parameter).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;OverwriteOrCreate&lt;/i&gt;: 
Copies all properties from the joining data onto the base data, overwriting the values of any properties 
that already exist.
&lt;li&gt;&lt;i&gt;OverwriteExisting&lt;/i&gt;: Copies only those properties from 
the joining data to the base data that already exist on the base.
&lt;li&gt;&lt;i&gt;CreateIfNew&lt;/i&gt;: 
Copies only those properties from the joining data to the base data that do not already exist on the 
base data.
&lt;li&gt;&lt;i&gt;AppendOrCreate&lt;/i&gt;: The value of a joining property that already 
exists in the base data is appended  (as an array) to the value in the base property.  The other joining 
properties that are not already present in the base data are copied there.
&lt;li&gt;&lt;i&gt;AppendExisting&lt;/i&gt;: 
The value of a joining property that already exists in the base data is appended  (as an array) to the 
value in the base property.  No other properties are copied. 
&lt;li&gt;&lt;i&gt;GroupData&lt;/i&gt;: 
Creates a hierarchical group containing both the joining and base data.
&lt;/ul&gt;</sci:help>
								<sci:legalval>OverwriteOrCreate</sci:legalval>
								<sci:legalval>OverwriteExisting</sci:legalval>
								<sci:legalval>CreateIfNew</sci:legalval>
								<sci:legalval selected="true">AppendOrCreate</sci:legalval>
								<sci:legalval>AppendExisting</sci:legalval>
								<sci:legalval>GroupData</sci:legalval>
							</sci:arg>
							<sci:arg name="AppendNodes" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>When joining data records that contain child nodes, whether to append the child nodes of the joining data onto the base data as determined by the &lt;i&gt;JoinOnto&lt;/i&gt; parameter.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="MultipleReferenceBehavior" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;What to do if there are multiple records in the cache (reference data) with a matching 
value for the &lt;i&gt;JoinUsing&lt;/i&gt; property of an incoming streaming record.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;JoinFirst&lt;/i&gt;: 
Uses the first one found. 
&lt;li&gt;&lt;i&gt;JoinLast&lt;/i&gt;: Uses the last one found. 
&lt;li&gt;&lt;i&gt;JoinAll&lt;/i&gt;: 
Appends all values for each property together in an array. 
&lt;li&gt;&lt;i&gt;JoinTogether&lt;/i&gt;: 
Joins each of the matching records in the cache with the streaming record individually and independently, 
which results in multiple records output for one input record.
&lt;/ul&gt;</sci:help>
								<sci:legalval>JoinFirst</sci:legalval>
								<sci:legalval>JoinLast</sci:legalval>
								<sci:legalval>JoinAll</sci:legalval>
								<sci:legalval selected="true">JoinTogether</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinAllNullString" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;This string is used during append to pad out empty values when MultipleReferenceBehavior is set to  &quot;JoinAll&quot;. This keeps the generated arrays of values in sync for multiple references.&lt;/p&gt;
&lt;p&gt;The value &quot;None&quot; causes no padding to occur.&lt;/p&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MultipleReferenceBehavior to JoinAll&apos;);
Parameter(&apos;MultipleReferenceBehavior&apos;) eq &apos;JoinAll&apos;</sci:enabledscript>
								<sci:value>None</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>Prefix</sci:member>
								<sci:member>GroupName</sci:member>
							</sci:arg>
							<sci:arg name="Prefix" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A prefix to add to each property name as it is joined onto the streaming data (instead of overwriting or appending to the existing value).</sci:help>
							</sci:arg>
							<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If &lt;i&gt;WhenJoiningOnto&lt;/i&gt; is set to &quot;GroupData&quot;, this is the name of the group node into which the results are placed</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set WhenJoiningOnto to GroupData&apos;);
Parameter(&apos;WhenJoiningOnto&apos;) eq &apos;GroupData&apos;</sci:enabledscript>
								<sci:value>Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="PassDownParameters" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Parameters to pass on to the reader</sci:help>
								<sci:value>Scope</sci:value>
							</sci:arg>
							<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the JoinUsing property -- even 
non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  JoinPropertyType 
is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with 
a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a 
numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then 
records containing non-numeric strings for the JoinUsing property will be sent out the Fail port.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Source" type="URLType" required="true" visibility="nevershow" multi="false">
								<sci:help>Names of data files, a learned model, or data cache ID, to join with the streaming data that enters this component. If multiple files are given, each is joined in sequence. (The Windows browser reverses the order of the files during selection, so you should select from last to first.)</sci:help>
								<sci:value>$(CacheID)</sci:value>
							</sci:arg>
							<sci:arg name="SourceFormat" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>The name of the reader to use for the join source. (For readers with particular parameters, you can create them and save them, then add their name to the options list for this protocol.  For example, you could create a Delimited Text with Commas and No Column Names component, save it to your tab, then add it to this list and select.)</sci:help>
								<sci:legalval>Delimited Text With Column Names</sci:legalval>
								<sci:legalval>Delimited Text No Column Names</sci:legalval>
								<sci:legalval>Comma Delimited With Column Names</sci:legalval>
								<sci:legalval>Tab Delimited With Column Names</sci:legalval>
								<sci:legalval>Space Delimited With Column Names</sci:legalval>
								<sci:legalval>Excel XLS With Column Names</sci:legalval>
								<sci:legalval>Excel XLS No Column Names</sci:legalval>
								<sci:legalval>MDL SD Format</sci:legalval>
								<sci:legalval>Learned Model Reader</sci:legalval>
								<sci:legalval selected="true">{704E3781-33EA-42BB-9099-05B44C3D08E6}</sci:legalval>
							</sci:arg>
							<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="nevershow" multi="false">
								<sci:help>A list of properties to join from the source file. If this value is not defined, all properties are joined into the record.</sci:help>
							</sci:arg>
							<sci:arg name="UseIndexFile" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Uses an index file when performing the Join operation when set to &quot;True&quot;. An index file is created if it does not already exist; it is used to accelerate the join process.

 Note: This option is useful for optimizing join operations against a file that may be used many times, at the first time of use an index file can be created to speed accesses in subsequent uses.  This file is created in the same directory as the source file and is automatically used for any subsequent join.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:03:53 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}</sci:value>
							</sci:arg>
							<sci:arg name="CheckSyntax" type="BoolType" required="true" visibility="nevershow" multi="false">
								<sci:help>Whether to perform a quick syntax check at the beginning of the file when we open it, and if a problem is found, throw an error.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="SourceComponent" type="ComponentType" required="false" visibility="nevershow" multi="false">
								<sci:help>Name of the data format of the Source file</sci:help>
								<sci:value>$(SourceFormat)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;JoinUsing&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>if (strlength(trim(parameter(&apos;JoinUsing&apos;, 2))) &gt; 0) then
	&quot;Join on &quot; . trim(parameter(&apos;JoinUsing&apos;, 2));
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Join Data from File</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>JOINNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1818 -820</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Augments data records with properties from data in a cache where specified property values match</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, a property value or set of values specified by 
&lt;i&gt;JoinUsing&lt;/i&gt; is used to identify matching records in the data cache created by the &lt;a 
href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache Writer&lt;/a&gt; 
specified by &lt;i&gt;CacheID&lt;/i&gt;.  Properties from these records are added to the incoming data 
record.  If no match is found, the record is sent out the Fail port.&lt;/p&gt;

&lt;p&gt;Records match 
if the value of the &lt;i&gt;JoinUsing&lt;/i&gt; property is the same for the incoming record as in the 
cache.  If multiple &lt;i&gt;JoinUsing&lt;/i&gt; properties are specified, the behavior depends on &lt;i&gt;JoinUsingListType&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;By 
default, this component expects the cache to have been created by the current job.  If the cache is outside 
the scope of the current job, update &lt;i&gt;Scope&lt;/i&gt; accordingly&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;By 
default only properties are extracted from the matching records.  Use &lt;i&gt;JoinOnto&lt;/i&gt; to 
obtain additional information such as molecular data.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use 
&lt;a href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache 
Writer&lt;/a&gt; to create the data cache specified by &lt;i&gt;CacheID&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;Use 
&lt;a href=&quot;javascript:DoLink(&apos;{D24316C3-9D5C-4B5D-ADF3-28F258F11858}&apos;)&quot;&gt;Join 
Data from File&lt;/a&gt; to join against a source data file.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records which received additional properties from the source file through a successful join.</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which no data was found in the source file.</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
								<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>9</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Join Data from Cache</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.CalculateSmiles.1">
						<sci:component name="Molecule from SMILES" version="2">
							<sci:arg name="FromProperty" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the property in the data
which holds the SMILES information</sci:help>
								<sci:member>KekulizeAromaticBonds</sci:member>
								<sci:member>Send Empty SMILES to Fail Port</sci:member>
								<sci:member>Parse RAtoms from CXSMILES</sci:member>
								<sci:value>canonical_smiles</sci:value>
							</sci:arg>
							<sci:arg name="KekulizeAromaticBonds" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Turn aromatic bonds into single/double bonds (set to True) or into aromatic query bonds (set to False). Molecules created with aromatic query bonds are more suitable as queries than as specific molecules. They should not be used as input for property calculators such as Molecular Weight, pKa and others, which require the structure to be uniquely defined.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Send Empty SMILES to Fail Port" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>When set to True, data records with SMILES represented by empty strings or strings with only blank characters are sent to the Fail port. 
&lt;p&gt;
When set to False, empty SMILES strings generate empty molecules with no atoms or bonds.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parse RAtoms from CXSMILES" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>Set this parameter to True to parse any Rgroup information from ChemAxon SMILES extentions (CXSMILES), if present. The extension is separated from the actual SMILES by a space or tab. When the parameter is set to False (the default state) the extension is ignored.
&lt;p&gt;
Examples
&lt;br&gt;
C1O[*]CO[*]1 |$;;_R2;;;_R1$,RG:_R1={C},{N},_R2={C},{N}|
&lt;br&gt;
Cl[*](Br)I |$;_R1;;$,RG:_R1={*CCCC(C*)CC*|
&lt;br&gt;
[*]N[C@@H](C=O)C([*])=O |$_R1;;;;;;_R2;$|
&lt;br&gt;
NC(=N)NCCC[C@H](N[*])C([*])=O |$;;;;;;;;;_R1;;_R2;$|
&lt;p&gt;
The star atoms (unknown atom type) in the SMILES are replaced by the corresponding numbered R atoms from the extension. Any RG fragment information present in the Rgroup extension is ignored.
&lt;p&gt;
Only the Rgroup information in the CXSMILES extension is parsed, any other extension is ignored.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval>Halt</sci:legalval>
								<sci:legalval selected="true">Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval>Halt</sci:legalval>
								<sci:legalval selected="true">Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/chemistry</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Mar 30 15:06:09 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Molecule from SMILES</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Molecule from SMILES</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{AC8262DA-E648-4D24-9CD1-D731A8F53F9D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2106 -820</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Converts a Daylight SMILES text property to a molecule</sci:value>
								<sci:value>&lt;p&gt;Builds a molecular representation for each data record from the SMILES string found in the property list. If a molecular representation is already present, it is overwritten by the new molecule. The input SMILES string is preserved.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To create a string property containing SMILES data, use &lt;a href=&quot;javascript:DoLink(&apos;{0C60C40A-5189-42DA-A3C0-4EA44BFF7D15}&apos;)&quot;&gt;Molecule to SMILES&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{0C60C40A-5189-42DA-A3C0-4EA44BC27D15}&apos;)&quot;&gt;Canonical Smiles&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To read and write SMILES files, use &lt;a href=&quot;javascript:DoLink(&apos;{60FC1A04-61FD-4D4F-AC3F-A818AB614C78}&apos;)&quot;&gt;SMILES Reader&lt;/a&gt; and &lt;a href=&quot;javascript:DoLink(&apos;{72A5A427-651F-4847-9525-54CB438A7166}&apos;)&quot;&gt;SMILES Writer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Molecule</sci:value>
								<sci:value>Molecular data record created from SMILES string</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.51</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>21</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Chemistry\Data Access and Manipulation\Converters\Molecule From Text\Molecule from SMILES</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Keep Properties" version="2">
							<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
								<sci:help>The list of property names to keep</sci:help>
								<sci:member>RenameList</sci:member>
								<sci:value>canonical_smiles</sci:value>
								<sci:value>index</sci:value>
								<sci:value>Affinity_Rank</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RenameList" type="PropertyNameType" required="false" visibility="visible" multi="true">
								<sci:help>If provided, it causes the properties given in PropertyList to be 
renamed to the corresponding name in this list.  If not provided, then no properties are renamed.</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Keep</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:18:38 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	&apos;Keep &apos; . #displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2394 -820</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{456195EF-9708-4367-B3DD-21EBF3796604}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Keeps only the specified properties</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, retains only the properties found in the list of property names specified by &lt;i&gt;PropertyList&lt;/i&gt;.  All other properties are removed.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To remove specified properties from each data record, use 
&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>With only the specified properties remaining</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>27</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Keep Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.JoinProperties.1">
						<sci:component name="Join Data from File" version="2">
							<sci:arg name="JoinUsing" type="PropertyNameType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>The name of the property that identifies which records to join. When a record in the source 
file has the same value for this property as the incoming streaming data record, its properties and child 
nodes are added to the streaming record. Calculable properties can be used for the streaming data, but 
data in the source file must already contain stored properties to join.

If you provide a comma-separated 
list of property names, then by default all values must match. (You can control this behavior by changing 
JoinUsingListType.) Or, if you provide a property that is an array of values, then all values must match 
(and the source must provide the data in an array-based form.)</sci:help>
								<sci:member>JoinUsingListType</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
								<sci:member>JoinPropertyType</sci:member>
								<sci:value>canonical_smiles</sci:value>
							</sci:arg>
							<sci:arg name="JoinUsingListType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: Join using only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: Joins using the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;</sci:help>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinPropertyType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The data type of the join property</sci:help>
								<sci:legalval>IsNumeric</sci:legalval>
								<sci:legalval selected="true">IsText</sci:legalval>
								<sci:legalval>IsDate</sci:legalval>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &quot;JoinUsing&quot; propety values</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set JoinPropertyType to IsText&apos;);
Parameter(&apos;JoinPropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:metaproplist>
									<sci:propval name="SCI_InitializeUsingOrigType">URLType</sci:propval>
								</sci:metaproplist>
								<sci:help>Names of data files or a learned model, to join with the streaming data that enters this component. If multiple files are given, each is joined in sequence. (The Windows browser reverses the order of the files during selection, so you should select from last to first.)</sci:help>
								<sci:member>SourceFormat</sci:member>
								<sci:member>Keep Properties</sci:member>
								<sci:value>$(UserDir)/PP/IonModel/NETSN100TemporalSplitTraining.sd.gz</sci:value>
							</sci:arg>
							<sci:arg name="SourceFormat" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the reader to use for the join source. (For readers with particular parameters, you can create them and save them, then add their name to the options list for this protocol.  For example, you could create a Delimited Text with Commas and No Column Names component, save it to your tab, then add it to this list and select.)
&lt;p&gt;
Note: When SourceFormat is a format with no column names, you must use property names of the form &quot;Column1&quot;, &quot;Column2&quot;, etc. in the JoinUsing parameter.</sci:help>
								<sci:legalval>Delimited Text With Column Names</sci:legalval>
								<sci:legalval>Delimited Text No Column Names</sci:legalval>
								<sci:legalval>Comma Delimited With Column Names</sci:legalval>
								<sci:legalval>Tab Delimited With Column Names</sci:legalval>
								<sci:legalval>Space Delimited With Column Names</sci:legalval>
								<sci:legalval>Excel XLS With Column Names</sci:legalval>
								<sci:legalval>Excel XLS No Column Names</sci:legalval>
								<sci:legalval selected="true">MDL SD Format</sci:legalval>
								<sci:legalval>SYBYL Mol2 Format</sci:legalval>
								<sci:legalval>Learned Model Reader</sci:legalval>
							</sci:arg>
							<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false">
								<sci:help>A list of properties to join from the source file. If this value is not defined, all properties are joined into the record.</sci:help>
							</sci:arg>
							<sci:arg name="Join Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:member>JoinOnto</sci:member>
								<sci:member>WhenJoiningOnto</sci:member>
								<sci:member>JoinAllNullString</sci:member>
								<sci:member>MultipleReferenceBehavior</sci:member>
								<sci:member>AppendNodes</sci:member>
							</sci:arg>
							<sci:arg name="JoinOnto" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates which data record will be output:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;ProcessData&lt;/i&gt;: The data streaming through the pipeline remains with properties and child nodes from the source file copied onto the record.
&lt;li&gt;&lt;i&gt;Reference&lt;/i&gt;: The data from the source file remains with properties and child nodes from the streaming data record copied onto the record.  Only data records that successfully join against the incoming data stream will be output.
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">ProcessData</sci:legalval>
								<sci:legalval>Reference</sci:legalval>
							</sci:arg>
							<sci:arg name="WhenJoiningOnto" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;During the joining of two property lists, this parameter indicates how differences 
between the property lists are resolved.  
By default, the streaming input data (process data) serves 
as the base for a join and the source file data (reference data) is treated as the joining data (this 
distinction can be reversed using the &lt;i&gt;JoinOnto&lt;/i&gt; parameter).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;OverwriteOrCreate&lt;/i&gt;: 
Copies all properties from the joining data onto the base data, overwriting the values of any properties 
that already exist.
&lt;li&gt;&lt;i&gt;OverwriteExisting&lt;/i&gt;: Copies only those properties from 
the joining data to the base data that already exist on the base.
&lt;li&gt;&lt;i&gt;CreateIfNew&lt;/i&gt;: 
Copies only those properties from the joining data to the base data that do not already exist on the 
base data.
&lt;li&gt;&lt;i&gt;AppendOrCreate&lt;/i&gt;: The value of a joining property that already 
exists in the base data is appended  (as an array) to the value in the base property.  The other joining 
properties that are not already present in the base data are copied there.
&lt;li&gt;&lt;i&gt;AppendExisting&lt;/i&gt;: 
The value of a joining property that already exists in the base data is appended  (as an array) to the 
value in the base property.  No other properties are copied. 
&lt;li&gt;&lt;i&gt;GroupData&lt;/i&gt;: 
Creates a hierarchical group containing both the joining and base data.
&lt;/ul&gt;</sci:help>
								<sci:legalval>OverwriteOrCreate</sci:legalval>
								<sci:legalval>OverwriteExisting</sci:legalval>
								<sci:legalval>CreateIfNew</sci:legalval>
								<sci:legalval selected="true">AppendOrCreate</sci:legalval>
								<sci:legalval>AppendExisting</sci:legalval>
								<sci:legalval>GroupData</sci:legalval>
							</sci:arg>
							<sci:arg name="AppendNodes" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>When joining data records that contain child nodes, whether to append the child nodes of the joining data onto the base data as determined by the &lt;i&gt;JoinOnto&lt;/i&gt; parameter.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="MultipleReferenceBehavior" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;What to do if there are multiple records in the source file (reference data) with 
a matching value for the &lt;i&gt;JoinUsing&lt;/i&gt; property of an incoming streaming record.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;JoinFirst&lt;/i&gt;: 
Uses the first one found. 
&lt;li&gt;&lt;i&gt;JoinLast&lt;/i&gt;: Uses the last one found. 
&lt;li&gt;&lt;i&gt;JoinAll&lt;/i&gt;: 
Appends all values for each property together in an array. 
&lt;li&gt;&lt;i&gt;JoinTogether&lt;/i&gt;: 
Joins each of the matching records in the source file with the streaming record individually and independently, 
which results in multiple records output for one input record.
&lt;/ul&gt;</sci:help>
								<sci:legalval>JoinFirst</sci:legalval>
								<sci:legalval>JoinLast</sci:legalval>
								<sci:legalval selected="true">JoinAll</sci:legalval>
								<sci:legalval>JoinTogether</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinAllNullString" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;This string is used during append to pad out empty values when MultipleReferenceBehavior is set to  &quot;JoinAll&quot;. This keeps the generated arrays of values in sync for multiple references.&lt;/p&gt;
&lt;p&gt;The value &quot;None&quot; causes no padding to occur.&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Note&lt;/b&gt;: Missing values for a property in a delimited text file are represented as empty strings rather than null values.  These empty strings will act as placeholders in arrays but will not be replaced by the JoinAllNullString.&lt;/p&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MultipleReferenceBehavior to JoinAll&apos;);
Parameter(&apos;MultipleReferenceBehavior&apos;) eq &apos;JoinAll&apos;</sci:enabledscript>
								<sci:value>None</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>Prefix</sci:member>
								<sci:member>UseIndexFile</sci:member>
								<sci:member>GroupName</sci:member>
							</sci:arg>
							<sci:arg name="Prefix" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A prefix to add to each property name as it is joined onto the streaming data (instead of overwriting or appending to the existing value).</sci:help>
							</sci:arg>
							<sci:arg name="UseIndexFile" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>An index file speeds up subsequent access to the same join source file. The options are:

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;None:&lt;/B&gt; 
Do not create or use an index file&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Next to Source:&lt;/B&gt; Create or 
use an index file that is next to your source file, with &quot;.idx&quot; appended to the filename&lt;/li&gt;
&lt;li&gt;&lt;b&gt;In 
User Directory:&lt;/B&gt; Create an index file that other processes by the same user can access. (This 
is in directory $(UserDir)/JoinIndices.)&lt;/li&gt;
&lt;li&gt;&lt;b&gt;In System Directory:&lt;/B&gt; 
Create an index file that all users can access. (This is in directory $(SciTegicRoot)/JoinIndices.)&lt;/li&gt;
&lt;/UL&gt;</sci:help>
								<sci:legalval>None</sci:legalval>
								<sci:legalval>Next to Source</sci:legalval>
								<sci:legalval selected="true">In User Directory</sci:legalval>
								<sci:legalval>In System Directory</sci:legalval>
							</sci:arg>
							<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If WhenJoiningOnto is set to &quot;GroupData&quot;, this is the name of the group node into which the results are placed</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set WhenJoiningOnto to GroupData&apos;);
Parameter(&apos;WhenJoiningOnto&apos;) eq &apos;GroupData&apos;</sci:enabledscript>
								<sci:value>Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
								<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the JoinUsing property -- even 
non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  JoinPropertyType 
is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with 
a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a 
numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then 
records containing non-numeric strings for the JoinUsing property will be sent out the Fail port.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="UncompressZIPFiles" type="BoolType" required="true" visibility="nevershow" multi="false">
								<sci:help>Whether to uncompress ZIP files for speed</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:04:37 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{D24316C3-9D5C-4B5D-ADF3-28F258F11858}</sci:value>
							</sci:arg>
							<sci:arg name="CheckSyntax" type="BoolType" required="true" visibility="nevershow" multi="false">
								<sci:help>Whether to perform a quick syntax check at the beginning of the file when we open it, and if a problem is found, throw an error.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="SourceComponent" type="ComponentType" required="false" visibility="nevershow" multi="false">
								<sci:help>Name of the data format of the Source file</sci:help>
								<sci:value>$(SourceFormat)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;JoinUsing&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>if (strlength(trim(parameter(&apos;JoinUsing&apos;, 2))) &gt; 0) then
	&quot;Join on &quot; . trim(parameter(&apos;JoinUsing&apos;, 2));
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Join Data from File</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>JOINNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2682 -820</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Augments data records with properties from data in a file when specified property values match</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, a property value or set of values specified by 
&lt;i&gt;JoinUsing&lt;/i&gt; is used to identify matching records from &lt;i&gt;Source&lt;/i&gt;.  Properties 
from these records are added to the incoming data record.  If no match is found, the record is sent out 
the Fail port.&lt;/p&gt;

&lt;p&gt;Records match if the value of the &lt;i&gt;JoinUsing&lt;/i&gt; property 
is the same for the incoming record as in the file.  If multiple &lt;i&gt;JoinUsing&lt;/i&gt; properties 
are specified, the behavior depends on &lt;i&gt;JoinUsingListType&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;By default 
this component expects the source file to be delimited text with column names.  If the file is of a different 
format, you should change &lt;i&gt;SourceFormat&lt;/i&gt; accordingly.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;By 
default only properties are extracted from the matching records.  Use &lt;i&gt;JoinOnto&lt;/i&gt; to 
obtain additional information such as molecular data.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use 
&lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join 
Data from Cache&lt;/a&gt; to join against a data cache created using the &lt;a href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache 
Writer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records which match at least one record in the source file.</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which no match was found in the source file.</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>26</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Join Data from File</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="No-op" version="2">
							<sci:arg name="DataActionOnError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When a General or DataType error occurs during processing:  
  LeaveData: The data is passed unalterd
  ClearData: The data is cleared before being passed (an empty data item)
  DeleteData: The data is deleted and not passed</sci:help>
								<sci:legalval selected="true">LeaveData</sci:legalval>
								<sci:legalval>ClearData</sci:legalval>
								<sci:legalval>DeleteData</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>CustomErrorText</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>PassDataToPort</sci:value>
							</sci:arg>
							<sci:arg name="Port" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>the port to pass data to</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 28 16:34:08 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>No-op</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Evaluate Expression</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{6E468A38-A6F7-4371-B65B-501A3ED4C0D9}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2970 -820</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Sends all incoming records out the Pass port unchanged</sci:value>
								<sci:value>&lt;p&gt;Useful in subprotocols to capture the point of input. For example, if you wish to perform two different sequences of operations on the same input data, use No-op as the first component of the subprotocol and connect both pipes to the No-op output port.&lt;/p&gt;

&lt;p&gt;You can also use this component to simplify the layout for complex protocols. For example, if you have three Reader components that need to be connected to three Viewer components, placing a No-op in the middle reduces the number of required connections and clarifies the logic.&lt;/p&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.1.1</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>19</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\No-op</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:connectid from="4" to="14" type="true"/>
					<sci:connectid from="14" to="7" type="true"/>
					<sci:connectid from="7" to="8" type="true"/>
					<sci:connectid from="17" to="0" type="true"/>
					<sci:connectid from="0" to="22" type="true"/>
					<sci:connectid from="22" to="3" type="true"/>
					<sci:connectid from="22" to="10" type="true"/>
					<sci:connectid from="10" to="13" type="true"/>
					<sci:connectid from="13" to="20" type="true"/>
					<sci:connectid from="20" to="9" type="true"/>
					<sci:connectid from="9" to="21" type="true"/>
					<sci:connectid from="21" to="27" type="true"/>
					<sci:connectid from="27" to="26" type="true"/>
					<sci:connectid from="26" to="19" type="true"/>
				</sci:protocol>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="Remove Properties" version="2">
					<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
						<sci:help>The names of properties to remove from each data record entering the component</sci:help>
						<sci:value>sequence</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>Remove</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Sep 13 07:18:43 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;PropertyList&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	&apos;Remove &apos; . #displayName;
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>true</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>954 -2295</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Removes the specified properties</sci:value>
						<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records with the specified properties removed</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>17.1.0.119</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>24</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Manipulator (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>property(&quot;Error&quot;):=abs(property(&quot;pchembl_value&quot;)-property(&quot;Aff_NET_Pred&quot;));</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1242 -2295</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Applies a PilotScript expression to each data record
</sci:value>
						<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.0.0.35</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>27</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Test Set Statistics" version="2">
					<sci:arg name="Component Name" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Component Name</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Name of the component which will process the data. You can give either a short name such as &quot;alogpmodel&quot;, or a fully-specified name such as &quot;myname/LearnedProperties/alogpmodel&quot;, or
evan a universal identifier (GUID) such as &quot;{ABCDDCBA-CC5A-4517-8D55-6BB4D53DE12E}&quot;.

If a name is given, the search is conducted starting on the user&apos;s tab, then the Protocols tab, then the Components tab.</sci:help>
						<sci:member>Use Parameters</sci:member>
						<sci:value>Aff_NET_Pred</sci:value>
					</sci:arg>
					<sci:arg name="Use Parameters" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Use Parameters</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Define whether to pass on the parameters from this component to the target component or to extract the parameter names and values from the Parameter Settings value.</sci:help>
						<sci:member>Parameter Settings</sci:member>
						<sci:legalval selected="true">From This Component</sci:legalval>
						<sci:legalval>From Parameter Settings</sci:legalval>
					</sci:arg>
					<sci:arg name="Parameter Settings" type="StringType" required="false" visibility="visible" multi="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Parameter Settings</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;A list of parameter settings to be applied to the target component, specified as an array. Each item in the array is one parameter setting, formatted as:&lt;/p&gt;
&lt;pre style=&quot;color:brown&quot;&gt;
&amp;lt;name&amp;gt;=&amp;lt;value&amp;gt;
&lt;/pre&gt;
Example:
&lt;pre style=&quot;color:brown&quot;&gt;
Property1=Total
Property2=NumSamples
Statistic=Mean
&lt;/pre&gt;
&lt;h5&gt;Parameter Arrays&lt;/h5&gt;
&lt;p&gt;To define an array parameter value, simply repeat the parameter name for each array item.
&lt;/p&gt;
&lt;pre style=&quot;color:brown&quot;&gt;
Catalog Number=6753
City List=Rome
City List=Athens
City List=Lisbon
&lt;/pre&gt;
&lt;h5&gt;Parameter Metadata&lt;/h5&gt;
&lt;p&gt;
You can also define metadata values for a parameter on the component. To do this, use a ^^ indicator to identify the parameter/metadata name pair. In the following example, the Measurement parameter has two metadata items, named Unit and Precision:
&lt;pre style=&quot;color:brown&quot;&gt;
Measurement=1000
Measurement^^Unit=Float
Measurement^^Precision=6
&lt;/pre&gt;
&lt;h5&gt;Parameter Group Series&lt;/h5&gt;
&lt;p&gt;
In general, a parameter value defined in the &lt;i&gt;Parameter Settings&lt;/i&gt; list should match a named parameter that exists on the target component for the shortcut. If there is no match, the parameter value is ignored. The only exception is for ordered series of parameter groups. In this case, a new parameter can be created using a parameter in the base parameter group (number 1) as a template. In this example, the target component includes the following parameter group:
&lt;/p&gt;
&lt;pre style=&quot;color:brown&quot;&gt;
List 1
List 1 Language
List 1 Format
&lt;/pre&gt;
The parameter list for the shortcut component might be:
&lt;pre style=&quot;color:brown&quot;&gt;
List 1 Language=English
List 1 Format=Left
List 2=
List 2 Language=Spanish
List 2 Format=Flow
List 3=
List 3 Language=French
List 3 Format=Center
&lt;/pre&gt;
&lt;p&gt;The first 2 items above simply define values for existing parameters in the base parameter group. The remaining items define two new parameter groups (group2 and group 3) with their values. 
&lt;/p&gt;&lt;p&gt;
You could also define metadata on the new parameters:
&lt;/p&gt;
&lt;pre style=&quot;color:brown&quot;&gt;
List 2=
List 2^^Filename=esp.txt
List 2 Language=Spanish
List 2 Format=Flow
List 2 Format^^Style=Bold
&lt;/pre&gt;</sci:help>
						<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Use Parameters to &quot;From Parameter Settings&quot;&apos;);
	Parameter(&apos;Use Parameters&apos;) eq &apos;From Parameter Settings&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Name" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Name</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:value>pchembl_value</sci:value>
					</sci:arg>
					<sci:arg name="Script" type="TextType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Script</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Text of the R script you wish to run.  Enter the script just as if you were typing it in R.</sci:help>
						<sci:value>library(&quot;caret&quot;)

pred &lt;- AllData[c($(LearnedPropertyName))]
obs &lt;- AllData[c(&quot;$(Name)&quot;)]


obs &lt;- as.matrix(obs)
pred &lt;- as.matrix(pred)

par(pty=&quot;s&quot;)

plot(obs, pred, xlab=&quot;observed pChEMBL&quot;, ylab=&quot;predicted pChEMBL&quot;, bty=&quot;l&quot;, pch = 20, col = &quot;#FF5F5B&quot;,
	 xlim=c(min(obs, pred), max(obs, pred)), ylim=c(min(obs, pred), max(obs, pred)), main=&quot;Fitted vs. Actual Values (test data)&quot;,
	 abline(coef = c(0,1), col = &quot;black&quot;, lty = 4))


stats &lt;- postResample(pred, obs)
AllData &lt;- stats[c(&quot;RMSE&quot;)]
AllData &lt;- cbind(AllData, stats[c(&quot;Rsquared&quot;)])
colnames(AllData) &lt;- c(&quot;RMSE&quot;, &quot;Rsquared&quot;)
</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;DD:MM:SS&amp;gt; - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Test set statistics</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ComponentNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{92061ED9-74B7-FB43-B87D-7C2BC8CD7CDE}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1818 -2295</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>creates Rsquared and RMSE with a plot of a learner</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>18.1.100.11</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>peter</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Sun Feb 02 21:19:02 2020</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>25</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Unknown</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.CountRecords.1">
						<sci:component name="Count and Index Data" version="2">
							<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
								<sci:member>Start Index</sci:member>
								<sci:member>Check if Property Already in Use</sci:member>
								<sci:value>RMergeIndex</sci:value>
							</sci:arg>
							<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Count and Index Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Count and Index Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>666 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Counts the number of data records and puts the count in a property</sci:value>
								<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.44</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>123</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.MergeProperties.1">
						<sci:component name="Merge Data" version="2">
							<sci:arg name="MergeUsing" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
								<sci:member>MergeUsingListType</sci:member>
								<sci:member>MergePropertyType</sci:member>
								<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:value>RMergeIndex</sci:value>
							</sci:arg>
							<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:
&lt;ul&gt;
&lt;li&gt;&quot;UseFirstDefinedValue&quot;: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:legalval>IsNumeric</sci:legalval>
								<sci:legalval selected="true">IsText</sci:legalval>
								<sci:legalval>IsDate</sci:legalval>
								<sci:legalval>IsFingerprint</sci:legalval>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &quot;MergeUsing&quot; property values.&lt;/p&gt;
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
								<sci:member>WhenMerging</sci:member>
								<sci:member>KeepAllNullString</sci:member>
								<sci:member>KeepAllPreferredNodeName</sci:member>
								<sci:member>PrefixUsingProperty</sci:member>
								<sci:legalval selected="true">KeepAll</sci:legalval>
								<sci:legalval>KeepFirst</sci:legalval>
							</sci:arg>
							<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;When merging using KeepAll behavior, provides fine control over how multiple values are treated.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
								<sci:legalval>OverwriteOrCreate</sci:legalval>
								<sci:legalval>OverwriteExisting</sci:legalval>
								<sci:legalval>CreateIfNew</sci:legalval>
								<sci:legalval selected="true">AppendOrCreate</sci:legalval>
								<sci:legalval>AppendExisting</sci:legalval>
							</sci:arg>
							<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;This string is used during append using KeepAll &lt;i&gt;MergeBehavior&lt;/i&gt; to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
								<sci:value>None</sci:value>
							</sci:arg>
							<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;If defined, and &lt;i&gt;MergeBehavior&lt;/i&gt; is KeepAll, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first record with a given merge value is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
								<sci:value>Molecule</sci:value>
							</sci:arg>
							<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
							</sci:arg>
							<sci:arg name="OutputFrequency" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual records included in the resulting merged record.&lt;/p&gt;
</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Nov 10 15:27:48 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Merge Data</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Merge Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>JOINNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>954 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Merges properties of all data records that share the same key property value into a single data record
</sci:value>
								<sci:value>&lt;p&gt;Incoming data records are merged into a single data record if they have the same value for the &lt;i&gt;MergeUsing&lt;/i&gt; property.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Multiple &lt;i&gt;MergeUsing&lt;/i&gt; properties can be specified.  In this case, data records are merged if the value for each &lt;i&gt;MergeUsing&lt;/i&gt; property matches across the data records.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge records based on molecular structures, use &lt;a href=&quot;javascript:DoLink(&apos;{2E21E16B-6901-46F3-8780-F14D3D7057CE}&apos;)&quot;&gt;
Merge Molecules&lt;/a&gt; (which requires the Chemistry Collection).&lt;/p&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records that contain the properties being used for merging</sci:value>
								<sci:value>None</sci:value>
								<sci:value>Data records that do not contain the properties being used for merging</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.1.8</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>124</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Remove Properties" version="2">
							<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The names of properties to remove from each data record entering the component</sci:help>
								<sci:value>RMergeIndex</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Remove</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 15 10:06:31 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Remove properties</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ExpressionNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1242 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Removes the specified properties</sci:value>
								<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. To specify more than one property to be removed, use a comma separated list.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records with the specified properties removed</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.46</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>125</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="HTML Table Viewer" version="2">
							<sci:arg name="Maximum Rows" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies the maximum number of table rows in the HTML page</sci:help>
								<sci:value>250</sci:value>
							</sci:arg>
							<sci:arg name="Rows Per Page" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The number of rows displayed on each page</sci:help>
								<sci:value>50</sci:value>
							</sci:arg>
							<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The optional title of the HTML document</sci:help>
								<sci:value>$(Component Name) - Test Results</sci:value>
							</sci:arg>
							<sci:arg name="Freeze Table Header" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;When set to True, this table&apos;s header and title will remain visible when the table is scrolled vertically.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This feature only applies to HTML reports.&lt;/li&gt;
	&lt;li&gt;The fixed header behavior depends on what container (e.g., plain browser window, Tile component, Dynamic Content Container) that the Table is piped into.&lt;/li&gt; 
	&lt;li&gt;To create a table of fixed pixel height, set this parameter to True and pipe this table into a Dynamic Content Container of fixed (i.e., non-percentage) height.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Use Default Browser" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
								<sci:metaproplist>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Browser</sci:value>
									</sci:mpropval>
								</sci:metaproplist>
								<sci:help>&lt;p&gt;
This parameter is only relevant when running the protocol in the Pipeline Pilot Professional Client.
&lt;/p&gt;
&lt;p&gt;
The value specifies whether to use your default desktop web browser to view the HTML table. When set to False, Internet Explorer is used as a standard fallback option. If IE is your default browser, it is used in either case.
&lt;/p&gt;
</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
								<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
								<sci:value>temphtml</sci:value>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
								<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
								<sci:value>HTML Filename</sci:value>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
								<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Internet Explorer" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>The location for Internet Explorer</sci:help>
								<sci:value>internetexplorer.application</sci:value>
							</sci:arg>
							<sci:arg name="Chrome" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>The location for Chrome</sci:help>
								<sci:value>&quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot;</sci:value>
							</sci:arg>
							<sci:arg name="Firefox" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
								<sci:help>The location for Firefox</sci:help>
								<sci:value>&quot;C:\Program Files (x86)\Mozilla Firefox\firefox.exe&quot;</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
								<sci:legalval>Cant Replace With Copy</sci:legalval>
								<sci:legalval>Cant Open</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Oct 23 17:05:34 2015</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>HTML Table Viewer</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1530 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ViewerNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolCommentSize" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>ProtocolCommentSize</sci:help>
								<sci:value>1100 500</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{F6A20C96-BC1C-48f3-82E9-4D8F023F82EE}</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Displays data records as HTML in a web browser</sci:value>
								<sci:value>&lt;p&gt;Generates and displays an HTML table page of data records, with one record per row. Each property becomes a column in the table and each value a cell.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Molecules will be displayed if present.&lt;/li&gt;
&lt;li&gt;For hierarchical data records, only top level properties are displayed.&lt;/li&gt;
&lt;li&gt;Any grouped data is displayed in nested tables.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you prefer not to view the grouped data, use &lt;a href=&quot;javascript:DoLink(&apos;{ACCDEEEF-FEED-4B27-B263-BA531EABFC9C}&apos;)&quot;&gt;Delete Children&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For more control over the display of molecules, use &lt;a href=&quot;javascript:DoLink(&apos;{485D30CD-737C-4AD3-89C9-F81CB20E47AE}&apos;)&quot;&gt;HTML Molecular Table Viewer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>16.1.0.1089</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>127</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Viewers\HTML Table Viewer</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Keep Properties" version="2">
							<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
								<sci:help>The list of property names to keep</sci:help>
								<sci:member>RenameList</sci:member>
								<sci:value>&quot;pchembl_value&quot;,&quot;Aff_NET_Pred&quot;</sci:value>
							</sci:arg>
							<sci:arg name="RenameList" type="PropertyNameType" required="false" visibility="visible" multi="true">
								<sci:help>If provided, it causes the properties given in PropertyList to be 
renamed to the corresponding name in this list.  If not provided, then no properties are renamed.</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Keep</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:18:38 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	&apos;Keep &apos; . #displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -295</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{456195EF-9708-4367-B3DD-21EBF3796604}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Keeps only the specified properties</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, retains only the properties found in the list of property names specified by &lt;i&gt;PropertyList&lt;/i&gt;.  All other properties are removed.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To remove specified properties from each data record, use 
&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>With only the specified properties remaining</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>122</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Keep Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="R Custom Script" version="2">
							<sci:arg name="Script" type="LinkSingleParentParameterType" required="true" visibility="visible" multi="false">
								<sci:metaproplist>
									<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">TextType</sci:propval>
								</sci:metaproplist>
								<sci:help>Text of the R script you wish to run.  Enter the script just as if you were typing it in R.</sci:help>
								<sci:value>Script</sci:value>
							</sci:arg>
							<sci:arg name="InputFrame" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Name to use in R script for data.frame containing input data.  Data in this frame will be sent out the pass port on completion of the script.</sci:help>
								<sci:value>AllData</sci:value>
							</sci:arg>
							<sci:arg name="ResultsFrame" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Name to use in R script for data.frame containing calculation results, which will be sent out the fail port.</sci:help>
								<sci:value>Results</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>PlotWidth</sci:member>
								<sci:member>PlotHeight</sci:member>
								<sci:member>ShowRInputOutput</sci:member>
								<sci:member>R Functions Source</sci:member>
							</sci:arg>
							<sci:arg name="R Functions Source" type="URLType" required="false" visibility="visible" multi="false">
								<sci:help>Optional name of a file containing an R script or custom R functions you wish to use in the Script.  This file will be sourced in R before the Script is executed.
</sci:help>
								<sci:member>Embed External Scripts</sci:member>
							</sci:arg>
							<sci:arg name="Embed External Scripts" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>If True, indicates that the scripts specified by &lt;i&gt;R Functions Source&lt;/i&gt; are to be embedded in the R script created by this component. This can be useful for debugging purposes. If False, the scripts are concatenated into a separate temporary file that is executed using the R source() function.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="PlotWidth" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>Width in pixels of any plots created by the script</sci:help>
								<sci:value>600</sci:value>
							</sci:arg>
							<sci:arg name="PlotHeight" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>Height in pixels of any plots created by the script</sci:help>
								<sci:value>600</sci:value>
							</sci:arg>
							<sci:arg name="ShowRInputOutput" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>Specify whether or not to show the R script and the R stdout in Notepad viewers</sci:help>
								<sci:legalval>Script</sci:legalval>
								<sci:legalval>StdOutput</sci:legalval>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="TextType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:value>RExitStatus,PlotName,RFunctionsFile,ShowRScript,ShowRStdOutput,RDir,ScriptPrefix,ScriptSuffix,RParScript,RPlotWidth,RPlotHeight,RplotPrefix,stderr,ExternalScript</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:value>$(R_Run_Remote)</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>100000000</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
								<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>$(R_Server)</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="LearnedPropertyName" type="StringType" required="false" visibility="visible" multi="false">
								<sci:value>&quot;$(Component Name)&quot;</sci:value>
							</sci:arg>
							<sci:arg name="Name" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false">
								<sci:metaproplist>
									<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">StringType</sci:propval>
								</sci:metaproplist>
								<sci:value>Name</sci:value>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Jul 20 12:16:31 2017</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>R Custom Script</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{140C906F-960F-4DCD-84FD-D7DBF7277F0D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -295</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Executes R script</sci:value>
								<sci:value>Use this component to write your own custom R script for operating on incoming data records. All records coming into the component are put into an R data frame whose name is given by &lt;i&gt;InputFrame&lt;/i&gt;.  After your script has executed, the data in this frame are sent out the Pass port, including any changes made to the frame within the R script.
&lt;p&gt;
Any plots created in your script are sent out the Fail port and can be viewed with the &lt;a href=&quot;javascript:DoLink(&apos;{45979297-7C23-4374-BE33-1424E90A09A6}&apos;)&quot;&gt;R Plot Viewer&lt;/a&gt;.
&lt;p&gt;
If your R script creates a data frame with the name given by &lt;i&gt;ResultsFrame&lt;/i&gt;, the data in this frame are also  sent out the Fail port.  (You may wish to use this frame for summary statistics, for example.)
&lt;p&gt;
&lt;b&gt;Hints on manipulating R data frames&lt;/b&gt;
&lt;p&gt;
Assume that the &lt;i&gt;InputFrame&lt;/i&gt; name is &quot;AllData&quot; and that there are three properties -- ALogP, prop1, and Property 2 -- defined on each Pipeline Pilot data record (in that order).  Within the R script, you can refer to the ALogP values in any of the following ways:
&lt;p&gt;
&lt;code&gt;
ALogP&lt;br&gt;
AllData$ALogP&lt;br&gt;
AllData[&quot;ALogP&quot;]
AllData[1]&lt;br&gt;
AllData[,1]&lt;br&gt;
AllData[[1]]&lt;br&gt;
&lt;/code&gt;
&lt;p&gt;
Note that the following assignment in R does not change the value of ALogP within the AllData frame:
&lt;p&gt;
&lt;code&gt;ALogP &amp;lt;- ALogP + 0.5&lt;/code&gt;
&lt;p&gt;
while the following assignment does change the value within the frame:
&lt;p&gt;
&lt;code&gt;AllData$ALogP &amp;lt;- ALogP + 0.5&lt;/code&gt;
&lt;p&gt;
(The reason for this behavior is that after the data are read into R but before your script is executed, the &lt;code&gt;attach&lt;/code&gt; function is called on the data frame.  This allows you to refer to columns in the frame by column name alone, but any changes you make to the column name variables are made outside the frame.)
&lt;p&gt;
Properties with embedded spaces or special R characters such as &quot;#&quot; must always be quoted if referred to by name:
&lt;p&gt;
&lt;code&gt;AllData$&quot;Property 2&quot;&lt;/code&gt;
&lt;p&gt;
To add a new column to the frame, use the cbind function:
&lt;p&gt;
&lt;code&gt;AllData &amp;lt;- cbind(AllData, LogPCalc=ALogP+0.5)&lt;/code&gt;
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;Molecular structures are ignored by this component and will not be passed through. 
&lt;li&gt;An array property with N elements on an input data record will be converted to N scalar properties in order that the records conform to the R data frame structure.
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more information on writing R scripts, see &lt;a href=&quot;javascript:DoLink(&apos;http://cran.r-project.org/doc/manuals/R-intro.html&apos;)&quot;&gt;An Introduction to R&lt;/a&gt;.
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/rstats/docs/r_stats.pdf&apos;)&quot;&gt;R Statistics Components User Guide &lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://www.r-project.org/&apos;)&quot;&gt;R Project for Statistical Computing Web Site&lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://finzi.psych.upenn.edu/search.html&apos;)&quot;&gt;R Help Search Web Site&lt;/a&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.0.1523</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
								<sci:legalval>Cant Replace With Copy</sci:legalval>
								<sci:legalval>Cant Open</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/rstats</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>120</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Analysis and Statistics\R Statistics\Manipulators\R Custom Script</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.CountRecords.1">
						<sci:component name="Count and Index Data" version="2">
							<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
								<sci:member>Start Index</sci:member>
								<sci:member>Check if Property Already in Use</sci:member>
								<sci:value>RMergeIndex</sci:value>
							</sci:arg>
							<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Count and Index Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Count and Index Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>666 -470</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Counts the number of data records and puts the count in a property</sci:value>
								<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.44</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>126</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:connectid from="123" to="124" type="true"/>
					<sci:connectid from="124" to="125" type="true"/>
					<sci:connectid from="125" to="127" type="true"/>
					<sci:connectid from="122" to="120" type="true"/>
					<sci:connectid from="120" to="123" type="true"/>
					<sci:connectid from="120" to="126" type="false"/>
					<sci:connectid from="126" to="124" type="true"/>
					<sci:version iVal="1"/>
				</sci:protocol>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="R 2D Plot" version="2">
					<sci:arg name="X Property" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>X axis property for the plot</sci:help>
						<sci:value>ClosestSimilarities</sci:value>
					</sci:arg>
					<sci:arg name="Y Property" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Y axis property for the plot.  Multiple comma-separated values may be specified.</sci:help>
						<sci:value>Error</sci:value>
					</sci:arg>
					<sci:arg name="Plot Type" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>Type of plot to produce</sci:help>
						<sci:legalval selected="true">Symbols</sci:legalval>
						<sci:legalval>Lines</sci:legalval>
						<sci:legalval>Symbols and Lines</sci:legalval>
						<sci:legalval>Symbols and Lines with Gaps</sci:legalval>
						<sci:legalval>Bars</sci:legalval>
						<sci:legalval>Stair Steps (H,V)</sci:legalval>
						<sci:legalval>Stair Steps (V,H)</sci:legalval>
					</sci:arg>
					<sci:arg name="Symbols and Lines" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Symbol and line attributes</sci:help>
						<sci:member>Symbols and Lines Color</sci:member>
						<sci:member>Symbols and Lines Color Property</sci:member>
						<sci:member>Symbols and Lines Symbol Type</sci:member>
						<sci:member>Symbols and Lines Symbol Property</sci:member>
						<sci:member>Symbols and Lines Symbol Size</sci:member>
						<sci:member>Symbols and Lines Line Type</sci:member>
						<sci:member>Symbols and Lines Line Thickness</sci:member>
						<sci:member>Label Property</sci:member>
					</sci:arg>
					<sci:arg name="Label Property" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>The name of a property on the data stream that will be displayed as a label next to each point in the chart.</sci:help>
					</sci:arg>
					<sci:arg name="Symbols and Lines Color" type="ColorType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>Color to use for lines and symbols.  (If you specify a value for Color Property, this parameter is ignored.)</sci:help>
						<sci:value>Red</sci:value>
					</sci:arg>
					<sci:arg name="Symbols and Lines Color Property" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Optional name of property to be used for coloring plot symbols and lines.  Overrides &lt;i&gt;Color&lt;/i&gt;.  If the property contains names of colors, then those colors will be used in the plot.  Otherwise, a color will be arbitrarily assigned for each distinct value of the property.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If multiple &lt;i&gt;Y Properties&lt;/i&gt; are specified, then both &lt;i&gt;Color&lt;/i&gt; and &lt;i&gt;Color Property&lt;/i&gt; are ignored, and a different color is used for each plotted Y property.
&lt;/ul&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Symbols and Lines Symbol Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Symbol to be used for marking points on each parallel axis. (If you specify a value for Symbol Property, this parameter is ignored.)</sci:help>
						<sci:legalval>None</sci:legalval>
						<sci:legalval selected="true">Open Circle</sci:legalval>
						<sci:legalval>Open Square</sci:legalval>
						<sci:legalval>Open Triangle</sci:legalval>
						<sci:legalval>Open Diamond</sci:legalval>
						<sci:legalval>+</sci:legalval>
						<sci:legalval>X</sci:legalval>
						<sci:legalval>*</sci:legalval>
						<sci:legalval>Solid Circle</sci:legalval>
						<sci:legalval>Solid Square</sci:legalval>
						<sci:legalval>Solid Triangle</sci:legalval>
						<sci:legalval>Solid Diamond</sci:legalval>
					</sci:arg>
					<sci:arg name="Symbols and Lines Symbol Property" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Optional name of property specifying symbol to show for each point on each parallel axis. Overrides &lt;i&gt;Symbol Type&lt;/i&gt;. If the property contains numeric values in the range from 0 to 25 or 33 to 255, then the corresponding R symbol will be used.  Alternatively, if the property contains single character text values, then these characters will be used to mark the points.  If neither of these conditions holds, then a symbol will be arbitrarily assigned for each distinct value of the property.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If multiple &lt;i&gt;Y Properties&lt;/i&gt; are specified, then both &lt;i&gt;Symbol Type&lt;/i&gt; and &lt;i&gt;Symbol Property&lt;/i&gt; are ignored, and a different symbol is used for each plotted Y property.
&lt;/ul&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Symbols and Lines Symbol Size" type="LongType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Size of symbols to use for displaying points</sci:help>
						<sci:legalval>Small</sci:legalval>
						<sci:legalval selected="true">Medium</sci:legalval>
						<sci:legalval>Large</sci:legalval>
						<sci:legalval>Extra Large</sci:legalval>
					</sci:arg>
					<sci:arg name="Symbols and Lines Line Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Type of line to use</sci:help>
						<sci:legalval>None</sci:legalval>
						<sci:legalval selected="true">Solid</sci:legalval>
						<sci:legalval>Dashed</sci:legalval>
						<sci:legalval>Dotted</sci:legalval>
						<sci:legalval>DotDash</sci:legalval>
						<sci:legalval>LongDash</sci:legalval>
						<sci:legalval>TwoDash</sci:legalval>
					</sci:arg>
					<sci:arg name="Symbols and Lines Line Thickness" type="LongType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Thickness in pixels of lines</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Chart Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Set the attributes for the chart</sci:help>
						<sci:member>Chart Options Width</sci:member>
						<sci:member>Chart Options Plot Region Color</sci:member>
						<sci:member>Chart Options Font Size</sci:member>
						<sci:member>Chart Options Title</sci:member>
						<sci:member>Chart Options Font Style</sci:member>
						<sci:member>Chart Options Height</sci:member>
					</sci:arg>
					<sci:arg name="Chart Options Width" type="LongType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>Width in pixels of plot</sci:help>
						<sci:value>600</sci:value>
					</sci:arg>
					<sci:arg name="Chart Options Height" type="LongType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>Height in pixels of plot</sci:help>
						<sci:value>600</sci:value>
					</sci:arg>
					<sci:arg name="Chart Options Title" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Title to display at the top of the plot</sci:help>
					</sci:arg>
					<sci:arg name="Chart Options Font Size" type="LongType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>Default point size for text on plot</sci:help>
						<sci:value>12</sci:value>
					</sci:arg>
					<sci:arg name="Chart Options Font Style" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>Font style for labels and annotations</sci:help>
						<sci:legalval selected="true">Plain</sci:legalval>
						<sci:legalval>Bold</sci:legalval>
						<sci:legalval>Italic</sci:legalval>
						<sci:legalval>Bold Italic</sci:legalval>
					</sci:arg>
					<sci:arg name="Chart Options Plot Region Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Background color to use for the plot</sci:help>
						<sci:value>White</sci:value>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>PlotName</sci:member>
						<sci:member>ShowRInputOutput</sci:member>
						<sci:member>Regression Line</sci:member>
					</sci:arg>
					<sci:arg name="Regression Line" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies whether to show a least-squares regression line on the plot. If you specify multiple Y properties, a separate regression line is drawn for each Y.
&lt;p&gt;
Both the &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; must be numeric for a regression line to be drawn.  (I.e., this option does not apply to bar plots or box plots.)
</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ShowRInputOutput" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>Specify whether or not to show the R script and the R stdout in Notepad viewers.</sci:help>
						<sci:legalval>Script</sci:legalval>
						<sci:legalval>StdOutput</sci:legalval>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:value>xindex,RExitStatus,RFunctionsFile,pass,ShowRScript,ShowRStdOutput,ShowPlot,RParScript,RPlotWidth,RPlotHeight,ExtraProps,R2dPlotPrefix,PointInfoText</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:value>$(R_Run_Remote)</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:value>100000000</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:value>$(R_Server)</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1818 -2645</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Creates a two-dimensional plot using R</sci:value>
						<sci:value>The property specified by &lt;i&gt;Y Property&lt;/i&gt; is plotted against the property specified by &lt;i&gt;X Property&lt;/i&gt;. The component output is a single data record with a property named &lt;b&gt;Plot2D&lt;/b&gt; containing the  plot.  You can view the plot with the &lt;a href=&quot;javascript:DoLink(&apos;{45979297-7C23-4374-BE33-1424E90A09A6}&apos;)&quot;&gt;R Plot Viewer&lt;/a&gt;  or include it in a report using &lt;a href=&quot;javascript:DoLink(&apos;{18EC3917-FF6E-4031-A70C-5C9E94335D50}&apos;)&quot;&gt;Image from Data&lt;/a&gt;.
&lt;p&gt;
Different types of plot are produced depending on the nature of the X and Y properties:
&lt;ul&gt;
&lt;li&gt;Scatter Plot: produced when both properties are numerical.
&lt;li&gt;Bar Plot: produced when the &lt;i&gt;Y Property&lt;/i&gt; property is categorical.  A color-coded bar representing the count of Y values appears at each X value.  (The &lt;i&gt;X Property&lt;/i&gt; property may be numeric or categorical in this case.)
&lt;li&gt;Box Plot: produced when the &lt;i&gt;X Property&lt;/i&gt; property is categorical and the &lt;i&gt;Y Property&lt;/i&gt; property is numeric.  For each value of X a box-and-whisker plot element is shown, depicting the distribution of Y values corresponding to that value of X.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;You can specify multiple properties for &lt;i&gt;Y Property&lt;/i&gt; as a comma-separated list.  In this case, a scatter plot is produced with each Y property plotted on the same graph with its own automatically assigned color, symbol and line type.  In this case, any categorical property with N possible values will be converted to an integer between 1 and N for the purpose of plotting.
&lt;li&gt;If you wish multiple Y properties to be plotted as a grid of separate plots rather than on the same plot, use the &lt;i&gt;Matrix&lt;/i&gt; parameters of &lt;a href=&quot;javascript:DoLink(&apos;{A5297B4C-6A09-4AFD-9783-7F975FE6DF70}&apos;)&quot;&gt;Set R Default Plot Options&lt;/a&gt; to specify the dimensions of the grid.  In this case, categorical variables are not converted to numbers, and the type for each plot on the grid is the one appropriate for the X and Y properties shown on that plot.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Two create more complex two-dimensional plots, use &lt;a href=&quot;javascript:DoLink(&apos;{CF24F040-E461-4C9E-A8DE-06F2CC8829CB}&apos;)&quot;&gt;R XY Plot&lt;/a&gt;.
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/rstats/docs/r_stats.pdf&apos;)&quot;&gt;R Statistics Components User Guide &lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://www.r-project.org/&apos;)&quot;&gt;R Project for Statistical Computing Web Site&lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://finzi.psych.upenn.edu/search.html&apos;)&quot;&gt;R Help Search Web Site&lt;/a&gt;
&lt;/ul&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data to be plotted</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Plot in binary PNG format contained in a property named Plot2D</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records with missing or invalid values that could not be plotted</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>18.1.0.1523</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/rstats</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Jul 20 09:17:35 2017</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Cant Replace With Copy</sci:legalval>
						<sci:legalval>Cant Open</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>COMPONENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="PlotName" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>Name of the property that will contain the plot image in jpg format.</sci:help>
						<sci:value>Plot2D</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>R 2D Plot</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>4</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{4DBF84AC-099B-47f2-87EF-C80754033974}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>28</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Analysis and Statistics\R Statistics\Charts\R 2D Plot</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="HTML Table Viewer" version="2">
					<sci:arg name="Maximum Rows" type="LongType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies the maximum number of table rows in the HTML page</sci:help>
						<sci:value>2000</sci:value>
					</sci:arg>
					<sci:arg name="Rows Per Page" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The number of rows displayed on each page</sci:help>
						<sci:value>25</sci:value>
					</sci:arg>
					<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The optional title of the HTML document</sci:help>
					</sci:arg>
					<sci:arg name="Freeze Table Header" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;When set to True, this table&apos;s header and title will remain visible when the table is scrolled vertically.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This feature only applies to HTML reports.&lt;/li&gt;
	&lt;li&gt;The fixed header behavior depends on what container (e.g., plain browser window, Tile component, Dynamic Content Container) that the Table is piped into.&lt;/li&gt; 
	&lt;li&gt;To create a table of fixed pixel height, set this parameter to True and pipe this table into a Dynamic Content Container of fixed (i.e., non-percentage) height.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Use Default Browser" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Browser</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;
This parameter is only relevant when running the protocol in the Pipeline Pilot Professional Client.
&lt;/p&gt;
&lt;p&gt;
The value specifies whether to use your default desktop web browser to view the HTML table. When set to False, Internet Explorer is used as a standard fallback option. If IE is your default browser, it is used in either case.
&lt;/p&gt;
</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
						<sci:value>temphtml</sci:value>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
						<sci:value>HTML Filename</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
						<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Internet Explorer" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>The location for Internet Explorer</sci:help>
						<sci:value>internetexplorer.application</sci:value>
					</sci:arg>
					<sci:arg name="Chrome" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>The location for Chrome</sci:help>
						<sci:value>&quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot;</sci:value>
					</sci:arg>
					<sci:arg name="Firefox" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:help>The location for Firefox</sci:help>
						<sci:value>&quot;C:\Program Files (x86)\Mozilla Firefox\firefox.exe&quot;</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Cant Replace With Copy</sci:legalval>
						<sci:legalval>Cant Open</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Oct 23 17:05:34 2015</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>HTML Table Viewer</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>true</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2106 -2645</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ViewerNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolCommentSize" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>ProtocolCommentSize</sci:help>
						<sci:value>1100 500</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{F6A20C96-BC1C-48f3-82E9-4D8F023F82EE}</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Displays data records as HTML in a web browser</sci:value>
						<sci:value>&lt;p&gt;Generates and displays an HTML table page of data records, with one record per row. Each property becomes a column in the table and each value a cell.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Molecules will be displayed if present.&lt;/li&gt;
&lt;li&gt;For hierarchical data records, only top level properties are displayed.&lt;/li&gt;
&lt;li&gt;Any grouped data is displayed in nested tables.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you prefer not to view the grouped data, use &lt;a href=&quot;javascript:DoLink(&apos;{ACCDEEEF-FEED-4B27-B263-BA531EABFC9C}&apos;)&quot;&gt;Delete Children&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For more control over the display of molecules, use &lt;a href=&quot;javascript:DoLink(&apos;{485D30CD-737C-4AD3-89C9-F81CB20E47AE}&apos;)&quot;&gt;HTML Molecular Table Viewer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1089</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>29</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Viewers\HTML Table Viewer</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Compare Property to Value Filter" version="2">
					<sci:arg name="Property Name" type="PropertyNameType" required="true" visibility="visible" multi="false">
						<sci:help>The name of the property whose value we wish to compare</sci:help>
						<sci:value>accession</sci:value>
					</sci:arg>
					<sci:arg name="Compare Operation" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The comparator operation. For example: &gt; means the property value must be greater than the value as obtained from either the property or the value in the parameter &lt;i&gt;Property Name 2 or Value&lt;/i&gt;.

For boolean values, you can use the double operators &quot;==&quot; and &quot;!=&quot;; the values will be coerced to the numbers &quot;0&quot; or &quot;1&quot; (if necessary) then compared.

The operators are:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;==&lt;/b&gt;: numeric equals&lt;li&gt;
&lt;li&gt;&lt;b&gt;&amp;lt;&lt;/b&gt;: numeric less than&lt;li&gt;
&lt;li&gt;&lt;b&gt;&amp;lt;=&lt;/b&gt;: numeric less than or equals&lt;li&gt;
&lt;li&gt;&lt;b&gt;&amp;gt;&lt;/b&gt;: numeric greater than&lt;li&gt;
&lt;li&gt;&lt;b&gt;&amp;gt;=&lt;/b&gt;: numeric greater than or equals&lt;li&gt;
&lt;li&gt;&lt;b&gt;!=&lt;/b&gt;: numeric not equals&lt;li&gt;
&lt;li&gt;&lt;b&gt;EQ&lt;/b&gt;: string equals, case insensitive&lt;li&gt;
&lt;li&gt;&lt;b&gt;NE&lt;/b&gt;: string not equals, case insensitive&lt;li&gt;
&lt;li&gt;&lt;b&gt;CASE EQ&lt;/b&gt;: string equals, case sensitive&lt;li&gt;
&lt;li&gt;&lt;b&gt;CASE NE&lt;/b&gt;: string not equals, case sensitive&lt;li&gt;
&lt;li&gt;&lt;b&gt;LIKE&lt;/b&gt;: Oracle-style LIKE operation&lt;li&gt;
&lt;li&gt;&lt;b&gt;RLIKE&lt;/b&gt;: Oracle-style RLIKE operation&lt;li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval>==</sci:legalval>
						<sci:legalval>&lt;</sci:legalval>
						<sci:legalval>&lt;=</sci:legalval>
						<sci:legalval>&gt;=</sci:legalval>
						<sci:legalval>&gt;</sci:legalval>
						<sci:legalval>!=</sci:legalval>
						<sci:legalval selected="true">EQ</sci:legalval>
						<sci:legalval>NE</sci:legalval>
						<sci:legalval>CASE EQ</sci:legalval>
						<sci:legalval>CASE NE</sci:legalval>
						<sci:legalval>LIKE</sci:legalval>
						<sci:legalval>RLIKE</sci:legalval>
					</sci:arg>
					<sci:arg name="Value" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The value we wish to compare against the value of the property. 

If you wish to compare against the value of another property, or a global property, or a parameter value, use the &lt;i&gt;Initialize Using...&lt;/i&gt; option.</sci:help>
						<sci:value>P23975</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to scope the global property to the subprotocol where it is used.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="Refresh rather than Reinitialize" type="BoolType" required="false" visibility="nevershow" multi="false" legalvalsenforced="false">
						<sci:help>Refresh rather than Reinitialize</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>
#propertyName := trim(Parameter(&apos;Property Name&apos;, 2));
#filter := trim(Parameter(&apos;Compare Operation&apos;, 2));
#value := trim(Parameter(&apos;Value&apos;, 2));
if(strlength(#propertyName) &gt; 0 AND strlength(#value) &gt; 0) then		
	&apos;Compare &apos; . #propertyName . &apos; &apos; . #filter . &apos; &apos; . #value;
else
	&apos;&apos;;
end if;
				</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>FilterNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{C69423B9-CBFD-4CE5-B979-1F54A793FC3A}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1530 -2820</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Pass or Fail a data record depending on the results of a property comparison operation</sci:value>
						<sci:value>This component uses a binary comparison operation to decide whether to return the record out the Pass port (true) or the Fail port (false).</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>A generic data record</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records which contain the Property Name property that passes the comparison operation</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records which do not contain the Property Name property, or do not pass the comparison operation</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>18.1.0.1398</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed Mar 29 10:12:15 2017</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>17</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Property Filters\Compare Property to Value Filter</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="R 2D Plot" version="2">
					<sci:arg name="X Property" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>X axis property for the plot</sci:help>
						<sci:value>ClosestSimilarities</sci:value>
					</sci:arg>
					<sci:arg name="Y Property" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Y axis property for the plot.  Multiple comma-separated values may be specified.</sci:help>
						<sci:value>Error</sci:value>
					</sci:arg>
					<sci:arg name="Plot Type" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>Type of plot to produce</sci:help>
						<sci:legalval selected="true">Symbols</sci:legalval>
						<sci:legalval>Lines</sci:legalval>
						<sci:legalval>Symbols and Lines</sci:legalval>
						<sci:legalval>Symbols and Lines with Gaps</sci:legalval>
						<sci:legalval>Bars</sci:legalval>
						<sci:legalval>Stair Steps (H,V)</sci:legalval>
						<sci:legalval>Stair Steps (V,H)</sci:legalval>
					</sci:arg>
					<sci:arg name="Symbols and Lines" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Symbol and line attributes</sci:help>
						<sci:member>Symbols and Lines Color</sci:member>
						<sci:member>Symbols and Lines Color Property</sci:member>
						<sci:member>Symbols and Lines Symbol Type</sci:member>
						<sci:member>Symbols and Lines Symbol Property</sci:member>
						<sci:member>Symbols and Lines Symbol Size</sci:member>
						<sci:member>Symbols and Lines Line Type</sci:member>
						<sci:member>Symbols and Lines Line Thickness</sci:member>
						<sci:member>Label Property</sci:member>
					</sci:arg>
					<sci:arg name="Label Property" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>The name of a property on the data stream that will be displayed as a label next to each point in the chart.</sci:help>
					</sci:arg>
					<sci:arg name="Symbols and Lines Color" type="ColorType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>Color to use for lines and symbols.  (If you specify a value for Color Property, this parameter is ignored.)</sci:help>
						<sci:value>Red</sci:value>
					</sci:arg>
					<sci:arg name="Symbols and Lines Color Property" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Optional name of property to be used for coloring plot symbols and lines.  Overrides &lt;i&gt;Color&lt;/i&gt;.  If the property contains names of colors, then those colors will be used in the plot.  Otherwise, a color will be arbitrarily assigned for each distinct value of the property.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If multiple &lt;i&gt;Y Properties&lt;/i&gt; are specified, then both &lt;i&gt;Color&lt;/i&gt; and &lt;i&gt;Color Property&lt;/i&gt; are ignored, and a different color is used for each plotted Y property.
&lt;/ul&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Symbols and Lines Symbol Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Symbol to be used for marking points on each parallel axis. (If you specify a value for Symbol Property, this parameter is ignored.)</sci:help>
						<sci:legalval>None</sci:legalval>
						<sci:legalval selected="true">Open Circle</sci:legalval>
						<sci:legalval>Open Square</sci:legalval>
						<sci:legalval>Open Triangle</sci:legalval>
						<sci:legalval>Open Diamond</sci:legalval>
						<sci:legalval>+</sci:legalval>
						<sci:legalval>X</sci:legalval>
						<sci:legalval>*</sci:legalval>
						<sci:legalval>Solid Circle</sci:legalval>
						<sci:legalval>Solid Square</sci:legalval>
						<sci:legalval>Solid Triangle</sci:legalval>
						<sci:legalval>Solid Diamond</sci:legalval>
					</sci:arg>
					<sci:arg name="Symbols and Lines Symbol Property" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Optional name of property specifying symbol to show for each point on each parallel axis. Overrides &lt;i&gt;Symbol Type&lt;/i&gt;. If the property contains numeric values in the range from 0 to 25 or 33 to 255, then the corresponding R symbol will be used.  Alternatively, if the property contains single character text values, then these characters will be used to mark the points.  If neither of these conditions holds, then a symbol will be arbitrarily assigned for each distinct value of the property.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If multiple &lt;i&gt;Y Properties&lt;/i&gt; are specified, then both &lt;i&gt;Symbol Type&lt;/i&gt; and &lt;i&gt;Symbol Property&lt;/i&gt; are ignored, and a different symbol is used for each plotted Y property.
&lt;/ul&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Symbols and Lines Symbol Size" type="LongType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Size of symbols to use for displaying points</sci:help>
						<sci:legalval>Small</sci:legalval>
						<sci:legalval selected="true">Medium</sci:legalval>
						<sci:legalval>Large</sci:legalval>
						<sci:legalval>Extra Large</sci:legalval>
					</sci:arg>
					<sci:arg name="Symbols and Lines Line Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Type of line to use</sci:help>
						<sci:legalval>None</sci:legalval>
						<sci:legalval selected="true">Solid</sci:legalval>
						<sci:legalval>Dashed</sci:legalval>
						<sci:legalval>Dotted</sci:legalval>
						<sci:legalval>DotDash</sci:legalval>
						<sci:legalval>LongDash</sci:legalval>
						<sci:legalval>TwoDash</sci:legalval>
					</sci:arg>
					<sci:arg name="Symbols and Lines Line Thickness" type="LongType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Thickness in pixels of lines</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Chart Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Set the attributes for the chart</sci:help>
						<sci:member>Chart Options Width</sci:member>
						<sci:member>Chart Options Plot Region Color</sci:member>
						<sci:member>Chart Options Font Size</sci:member>
						<sci:member>Chart Options Title</sci:member>
						<sci:member>Chart Options Font Style</sci:member>
						<sci:member>Chart Options Height</sci:member>
					</sci:arg>
					<sci:arg name="Chart Options Width" type="LongType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>Width in pixels of plot</sci:help>
						<sci:value>600</sci:value>
					</sci:arg>
					<sci:arg name="Chart Options Height" type="LongType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>Height in pixels of plot</sci:help>
						<sci:value>600</sci:value>
					</sci:arg>
					<sci:arg name="Chart Options Title" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Title to display at the top of the plot</sci:help>
					</sci:arg>
					<sci:arg name="Chart Options Font Size" type="LongType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>Default point size for text on plot</sci:help>
						<sci:value>12</sci:value>
					</sci:arg>
					<sci:arg name="Chart Options Font Style" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>Font style for labels and annotations</sci:help>
						<sci:legalval selected="true">Plain</sci:legalval>
						<sci:legalval>Bold</sci:legalval>
						<sci:legalval>Italic</sci:legalval>
						<sci:legalval>Bold Italic</sci:legalval>
					</sci:arg>
					<sci:arg name="Chart Options Plot Region Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Background color to use for the plot</sci:help>
						<sci:value>White</sci:value>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>PlotName</sci:member>
						<sci:member>ShowRInputOutput</sci:member>
						<sci:member>Regression Line</sci:member>
					</sci:arg>
					<sci:arg name="Regression Line" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies whether to show a least-squares regression line on the plot. If you specify multiple Y properties, a separate regression line is drawn for each Y.
&lt;p&gt;
Both the &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; must be numeric for a regression line to be drawn.  (I.e., this option does not apply to bar plots or box plots.)
</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ShowRInputOutput" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>Specify whether or not to show the R script and the R stdout in Notepad viewers.</sci:help>
						<sci:legalval>Script</sci:legalval>
						<sci:legalval>StdOutput</sci:legalval>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:value>xindex,RExitStatus,RFunctionsFile,pass,ShowRScript,ShowRStdOutput,ShowPlot,RParScript,RPlotWidth,RPlotHeight,ExtraProps,R2dPlotPrefix,PointInfoText</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:value>$(R_Run_Remote)</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:value>100000000</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:value>$(R_Server)</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1818 -3020</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Creates a two-dimensional plot using R</sci:value>
						<sci:value>The property specified by &lt;i&gt;Y Property&lt;/i&gt; is plotted against the property specified by &lt;i&gt;X Property&lt;/i&gt;. The component output is a single data record with a property named &lt;b&gt;Plot2D&lt;/b&gt; containing the  plot.  You can view the plot with the &lt;a href=&quot;javascript:DoLink(&apos;{45979297-7C23-4374-BE33-1424E90A09A6}&apos;)&quot;&gt;R Plot Viewer&lt;/a&gt;  or include it in a report using &lt;a href=&quot;javascript:DoLink(&apos;{18EC3917-FF6E-4031-A70C-5C9E94335D50}&apos;)&quot;&gt;Image from Data&lt;/a&gt;.
&lt;p&gt;
Different types of plot are produced depending on the nature of the X and Y properties:
&lt;ul&gt;
&lt;li&gt;Scatter Plot: produced when both properties are numerical.
&lt;li&gt;Bar Plot: produced when the &lt;i&gt;Y Property&lt;/i&gt; property is categorical.  A color-coded bar representing the count of Y values appears at each X value.  (The &lt;i&gt;X Property&lt;/i&gt; property may be numeric or categorical in this case.)
&lt;li&gt;Box Plot: produced when the &lt;i&gt;X Property&lt;/i&gt; property is categorical and the &lt;i&gt;Y Property&lt;/i&gt; property is numeric.  For each value of X a box-and-whisker plot element is shown, depicting the distribution of Y values corresponding to that value of X.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;You can specify multiple properties for &lt;i&gt;Y Property&lt;/i&gt; as a comma-separated list.  In this case, a scatter plot is produced with each Y property plotted on the same graph with its own automatically assigned color, symbol and line type.  In this case, any categorical property with N possible values will be converted to an integer between 1 and N for the purpose of plotting.
&lt;li&gt;If you wish multiple Y properties to be plotted as a grid of separate plots rather than on the same plot, use the &lt;i&gt;Matrix&lt;/i&gt; parameters of &lt;a href=&quot;javascript:DoLink(&apos;{A5297B4C-6A09-4AFD-9783-7F975FE6DF70}&apos;)&quot;&gt;Set R Default Plot Options&lt;/a&gt; to specify the dimensions of the grid.  In this case, categorical variables are not converted to numbers, and the type for each plot on the grid is the one appropriate for the X and Y properties shown on that plot.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Two create more complex two-dimensional plots, use &lt;a href=&quot;javascript:DoLink(&apos;{CF24F040-E461-4C9E-A8DE-06F2CC8829CB}&apos;)&quot;&gt;R XY Plot&lt;/a&gt;.
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/rstats/docs/r_stats.pdf&apos;)&quot;&gt;R Statistics Components User Guide &lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://www.r-project.org/&apos;)&quot;&gt;R Project for Statistical Computing Web Site&lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://finzi.psych.upenn.edu/search.html&apos;)&quot;&gt;R Help Search Web Site&lt;/a&gt;
&lt;/ul&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data to be plotted</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Plot in binary PNG format contained in a property named Plot2D</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records with missing or invalid values that could not be plotted</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>18.1.0.1523</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/rstats</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Jul 20 09:17:35 2017</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Cant Replace With Copy</sci:legalval>
						<sci:legalval>Cant Open</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>COMPONENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="PlotName" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>Name of the property that will contain the plot image in jpg format.</sci:help>
						<sci:value>Plot2D</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>R 2D Plot</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>4</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{4DBF84AC-099B-47f2-87EF-C80754033974}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>30</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Analysis and Statistics\R Statistics\Charts\R 2D Plot</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="HTML Table Viewer" version="2">
					<sci:arg name="Maximum Rows" type="LongType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies the maximum number of table rows in the HTML page</sci:help>
						<sci:value>2000</sci:value>
					</sci:arg>
					<sci:arg name="Rows Per Page" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The number of rows displayed on each page</sci:help>
						<sci:value>25</sci:value>
					</sci:arg>
					<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The optional title of the HTML document</sci:help>
					</sci:arg>
					<sci:arg name="Freeze Table Header" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;When set to True, this table&apos;s header and title will remain visible when the table is scrolled vertically.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This feature only applies to HTML reports.&lt;/li&gt;
	&lt;li&gt;The fixed header behavior depends on what container (e.g., plain browser window, Tile component, Dynamic Content Container) that the Table is piped into.&lt;/li&gt; 
	&lt;li&gt;To create a table of fixed pixel height, set this parameter to True and pipe this table into a Dynamic Content Container of fixed (i.e., non-percentage) height.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Use Default Browser" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Browser</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;
This parameter is only relevant when running the protocol in the Pipeline Pilot Professional Client.
&lt;/p&gt;
&lt;p&gt;
The value specifies whether to use your default desktop web browser to view the HTML table. When set to False, Internet Explorer is used as a standard fallback option. If IE is your default browser, it is used in either case.
&lt;/p&gt;
</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
						<sci:value>temphtml</sci:value>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
						<sci:value>HTML Filename</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
						<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Internet Explorer" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>The location for Internet Explorer</sci:help>
						<sci:value>internetexplorer.application</sci:value>
					</sci:arg>
					<sci:arg name="Chrome" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>The location for Chrome</sci:help>
						<sci:value>&quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot;</sci:value>
					</sci:arg>
					<sci:arg name="Firefox" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:help>The location for Firefox</sci:help>
						<sci:value>&quot;C:\Program Files (x86)\Mozilla Firefox\firefox.exe&quot;</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Cant Replace With Copy</sci:legalval>
						<sci:legalval>Cant Open</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Oct 23 17:05:34 2015</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>HTML Table Viewer</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>true</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2106 -3020</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ViewerNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolCommentSize" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>ProtocolCommentSize</sci:help>
						<sci:value>1100 500</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{F6A20C96-BC1C-48f3-82E9-4D8F023F82EE}</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Displays data records as HTML in a web browser</sci:value>
						<sci:value>&lt;p&gt;Generates and displays an HTML table page of data records, with one record per row. Each property becomes a column in the table and each value a cell.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Molecules will be displayed if present.&lt;/li&gt;
&lt;li&gt;For hierarchical data records, only top level properties are displayed.&lt;/li&gt;
&lt;li&gt;Any grouped data is displayed in nested tables.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you prefer not to view the grouped data, use &lt;a href=&quot;javascript:DoLink(&apos;{ACCDEEEF-FEED-4B27-B263-BA531EABFC9C}&apos;)&quot;&gt;Delete Children&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For more control over the display of molecules, use &lt;a href=&quot;javascript:DoLink(&apos;{485D30CD-737C-4AD3-89C9-F81CB20E47AE}&apos;)&quot;&gt;HTML Molecular Table Viewer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1089</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>31</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Viewers\HTML Table Viewer</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Test Set Statistics" version="2">
					<sci:arg name="Component Name" type="StringType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Component Name</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Name of the component which will process the data. You can give either a short name such as &quot;alogpmodel&quot;, or a fully-specified name such as &quot;myname/LearnedProperties/alogpmodel&quot;, or
evan a universal identifier (GUID) such as &quot;{ABCDDCBA-CC5A-4517-8D55-6BB4D53DE12E}&quot;.

If a name is given, the search is conducted starting on the user&apos;s tab, then the Protocols tab, then the Components tab.</sci:help>
						<sci:member>Use Parameters</sci:member>
						<sci:value>Aff_NET_Pred</sci:value>
					</sci:arg>
					<sci:arg name="Use Parameters" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Use Parameters</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>Define whether to pass on the parameters from this component to the target component or to extract the parameter names and values from the Parameter Settings value.</sci:help>
						<sci:member>Parameter Settings</sci:member>
						<sci:legalval selected="true">From This Component</sci:legalval>
						<sci:legalval>From Parameter Settings</sci:legalval>
					</sci:arg>
					<sci:arg name="Parameter Settings" type="StringType" required="false" visibility="visible" multi="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Parameter Settings</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;A list of parameter settings to be applied to the target component, specified as an array. Each item in the array is one parameter setting, formatted as:&lt;/p&gt;
&lt;pre style=&quot;color:brown&quot;&gt;
&amp;lt;name&amp;gt;=&amp;lt;value&amp;gt;
&lt;/pre&gt;
Example:
&lt;pre style=&quot;color:brown&quot;&gt;
Property1=Total
Property2=NumSamples
Statistic=Mean
&lt;/pre&gt;
&lt;h5&gt;Parameter Arrays&lt;/h5&gt;
&lt;p&gt;To define an array parameter value, simply repeat the parameter name for each array item.
&lt;/p&gt;
&lt;pre style=&quot;color:brown&quot;&gt;
Catalog Number=6753
City List=Rome
City List=Athens
City List=Lisbon
&lt;/pre&gt;
&lt;h5&gt;Parameter Metadata&lt;/h5&gt;
&lt;p&gt;
You can also define metadata values for a parameter on the component. To do this, use a ^^ indicator to identify the parameter/metadata name pair. In the following example, the Measurement parameter has two metadata items, named Unit and Precision:
&lt;pre style=&quot;color:brown&quot;&gt;
Measurement=1000
Measurement^^Unit=Float
Measurement^^Precision=6
&lt;/pre&gt;
&lt;h5&gt;Parameter Group Series&lt;/h5&gt;
&lt;p&gt;
In general, a parameter value defined in the &lt;i&gt;Parameter Settings&lt;/i&gt; list should match a named parameter that exists on the target component for the shortcut. If there is no match, the parameter value is ignored. The only exception is for ordered series of parameter groups. In this case, a new parameter can be created using a parameter in the base parameter group (number 1) as a template. In this example, the target component includes the following parameter group:
&lt;/p&gt;
&lt;pre style=&quot;color:brown&quot;&gt;
List 1
List 1 Language
List 1 Format
&lt;/pre&gt;
The parameter list for the shortcut component might be:
&lt;pre style=&quot;color:brown&quot;&gt;
List 1 Language=English
List 1 Format=Left
List 2=
List 2 Language=Spanish
List 2 Format=Flow
List 3=
List 3 Language=French
List 3 Format=Center
&lt;/pre&gt;
&lt;p&gt;The first 2 items above simply define values for existing parameters in the base parameter group. The remaining items define two new parameter groups (group2 and group 3) with their values. 
&lt;/p&gt;&lt;p&gt;
You could also define metadata on the new parameters:
&lt;/p&gt;
&lt;pre style=&quot;color:brown&quot;&gt;
List 2=
List 2^^Filename=esp.txt
List 2 Language=Spanish
List 2 Format=Flow
List 2 Format^^Style=Bold
&lt;/pre&gt;</sci:help>
						<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Use Parameters to &quot;From Parameter Settings&quot;&apos;);
	Parameter(&apos;Use Parameters&apos;) eq &apos;From Parameter Settings&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Name" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Name</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:value>pchembl_value</sci:value>
					</sci:arg>
					<sci:arg name="Script" type="TextType" required="true" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Script</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Text of the R script you wish to run.  Enter the script just as if you were typing it in R.</sci:help>
						<sci:value>library(&quot;caret&quot;)

pred &lt;- AllData[c($(LearnedPropertyName))]
obs &lt;- AllData[c(&quot;$(Name)&quot;)]


obs &lt;- as.matrix(obs)
pred &lt;- as.matrix(pred)

par(pty=&quot;s&quot;)

plot(obs, pred, xlab=&quot;observed pChEMBL&quot;, ylab=&quot;predicted pChEMBL&quot;, bty=&quot;l&quot;, pch = 20, col = &quot;#FF5F5B&quot;,
	 xlim=c(min(obs, pred), max(obs, pred)), ylim=c(min(obs, pred), max(obs, pred)), main=&quot;Fitted vs. Actual Values (test data)&quot;,
	 abline(coef = c(0,1), col = &quot;black&quot;, lty = 4))


stats &lt;- postResample(pred, obs)
AllData &lt;- stats[c(&quot;RMSE&quot;)]
AllData &lt;- cbind(AllData, stats[c(&quot;Rsquared&quot;)])
colnames(AllData) &lt;- c(&quot;RMSE&quot;, &quot;Rsquared&quot;)
</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;DD:MM:SS&amp;gt; - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Test set statistics</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>4</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ComponentNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{92061ED9-74B7-FB43-B87D-7C2BC8CD7CDE}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1818 -3370</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>creates Rsquared and RMSE with a plot of a learner</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>18.1.100.11</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>peter</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Sun Feb 02 21:19:02 2020</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>26</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Unknown</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.CountRecords.1">
						<sci:component name="Count and Index Data" version="2">
							<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
								<sci:member>Start Index</sci:member>
								<sci:member>Check if Property Already in Use</sci:member>
								<sci:value>RMergeIndex</sci:value>
							</sci:arg>
							<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Count and Index Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Count and Index Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>666 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Counts the number of data records and puts the count in a property</sci:value>
								<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.44</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>123</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.MergeProperties.1">
						<sci:component name="Merge Data" version="2">
							<sci:arg name="MergeUsing" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
								<sci:member>MergeUsingListType</sci:member>
								<sci:member>MergePropertyType</sci:member>
								<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:value>RMergeIndex</sci:value>
							</sci:arg>
							<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:
&lt;ul&gt;
&lt;li&gt;&quot;UseFirstDefinedValue&quot;: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:legalval>IsNumeric</sci:legalval>
								<sci:legalval selected="true">IsText</sci:legalval>
								<sci:legalval>IsDate</sci:legalval>
								<sci:legalval>IsFingerprint</sci:legalval>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &quot;MergeUsing&quot; property values.&lt;/p&gt;
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
								<sci:member>WhenMerging</sci:member>
								<sci:member>KeepAllNullString</sci:member>
								<sci:member>KeepAllPreferredNodeName</sci:member>
								<sci:member>PrefixUsingProperty</sci:member>
								<sci:legalval selected="true">KeepAll</sci:legalval>
								<sci:legalval>KeepFirst</sci:legalval>
							</sci:arg>
							<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;When merging using KeepAll behavior, provides fine control over how multiple values are treated.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
								<sci:legalval>OverwriteOrCreate</sci:legalval>
								<sci:legalval>OverwriteExisting</sci:legalval>
								<sci:legalval>CreateIfNew</sci:legalval>
								<sci:legalval selected="true">AppendOrCreate</sci:legalval>
								<sci:legalval>AppendExisting</sci:legalval>
							</sci:arg>
							<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;This string is used during append using KeepAll &lt;i&gt;MergeBehavior&lt;/i&gt; to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
								<sci:value>None</sci:value>
							</sci:arg>
							<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;If defined, and &lt;i&gt;MergeBehavior&lt;/i&gt; is KeepAll, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first record with a given merge value is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
								<sci:value>Molecule</sci:value>
							</sci:arg>
							<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
							</sci:arg>
							<sci:arg name="OutputFrequency" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual records included in the resulting merged record.&lt;/p&gt;
</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Nov 10 15:27:48 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Merge Data</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Merge Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>JOINNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>954 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Merges properties of all data records that share the same key property value into a single data record
</sci:value>
								<sci:value>&lt;p&gt;Incoming data records are merged into a single data record if they have the same value for the &lt;i&gt;MergeUsing&lt;/i&gt; property.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Multiple &lt;i&gt;MergeUsing&lt;/i&gt; properties can be specified.  In this case, data records are merged if the value for each &lt;i&gt;MergeUsing&lt;/i&gt; property matches across the data records.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge records based on molecular structures, use &lt;a href=&quot;javascript:DoLink(&apos;{2E21E16B-6901-46F3-8780-F14D3D7057CE}&apos;)&quot;&gt;
Merge Molecules&lt;/a&gt; (which requires the Chemistry Collection).&lt;/p&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records that contain the properties being used for merging</sci:value>
								<sci:value>None</sci:value>
								<sci:value>Data records that do not contain the properties being used for merging</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.1.8</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>124</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Remove Properties" version="2">
							<sci:arg name="PropertyList" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The names of properties to remove from each data record entering the component</sci:help>
								<sci:value>RMergeIndex</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Remove</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 15 10:06:31 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Remove properties</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ExpressionNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1242 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Removes the specified properties</sci:value>
								<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. To specify more than one property to be removed, use a comma separated list.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records with the specified properties removed</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.46</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>125</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="HTML Table Viewer" version="2">
							<sci:arg name="Maximum Rows" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies the maximum number of table rows in the HTML page</sci:help>
								<sci:value>250</sci:value>
							</sci:arg>
							<sci:arg name="Rows Per Page" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The number of rows displayed on each page</sci:help>
								<sci:value>50</sci:value>
							</sci:arg>
							<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The optional title of the HTML document</sci:help>
								<sci:value>$(Component Name) - Test Results</sci:value>
							</sci:arg>
							<sci:arg name="Freeze Table Header" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;When set to True, this table&apos;s header and title will remain visible when the table is scrolled vertically.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This feature only applies to HTML reports.&lt;/li&gt;
	&lt;li&gt;The fixed header behavior depends on what container (e.g., plain browser window, Tile component, Dynamic Content Container) that the Table is piped into.&lt;/li&gt; 
	&lt;li&gt;To create a table of fixed pixel height, set this parameter to True and pipe this table into a Dynamic Content Container of fixed (i.e., non-percentage) height.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Use Default Browser" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
								<sci:metaproplist>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Browser</sci:value>
									</sci:mpropval>
								</sci:metaproplist>
								<sci:help>&lt;p&gt;
This parameter is only relevant when running the protocol in the Pipeline Pilot Professional Client.
&lt;/p&gt;
&lt;p&gt;
The value specifies whether to use your default desktop web browser to view the HTML table. When set to False, Internet Explorer is used as a standard fallback option. If IE is your default browser, it is used in either case.
&lt;/p&gt;
</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
								<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
								<sci:value>temphtml</sci:value>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
								<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
								<sci:value>HTML Filename</sci:value>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
								<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Internet Explorer" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>The location for Internet Explorer</sci:help>
								<sci:value>internetexplorer.application</sci:value>
							</sci:arg>
							<sci:arg name="Chrome" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>The location for Chrome</sci:help>
								<sci:value>&quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot;</sci:value>
							</sci:arg>
							<sci:arg name="Firefox" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
								<sci:help>The location for Firefox</sci:help>
								<sci:value>&quot;C:\Program Files (x86)\Mozilla Firefox\firefox.exe&quot;</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
								<sci:legalval>Cant Replace With Copy</sci:legalval>
								<sci:legalval>Cant Open</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Oct 23 17:05:34 2015</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>HTML Table Viewer</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1530 -95</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ViewerNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolCommentSize" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>ProtocolCommentSize</sci:help>
								<sci:value>1100 500</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{F6A20C96-BC1C-48f3-82E9-4D8F023F82EE}</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Displays data records as HTML in a web browser</sci:value>
								<sci:value>&lt;p&gt;Generates and displays an HTML table page of data records, with one record per row. Each property becomes a column in the table and each value a cell.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Molecules will be displayed if present.&lt;/li&gt;
&lt;li&gt;For hierarchical data records, only top level properties are displayed.&lt;/li&gt;
&lt;li&gt;Any grouped data is displayed in nested tables.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you prefer not to view the grouped data, use &lt;a href=&quot;javascript:DoLink(&apos;{ACCDEEEF-FEED-4B27-B263-BA531EABFC9C}&apos;)&quot;&gt;Delete Children&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For more control over the display of molecules, use &lt;a href=&quot;javascript:DoLink(&apos;{485D30CD-737C-4AD3-89C9-F81CB20E47AE}&apos;)&quot;&gt;HTML Molecular Table Viewer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>16.1.0.1089</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>127</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Viewers\HTML Table Viewer</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Keep Properties" version="2">
							<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
								<sci:help>The list of property names to keep</sci:help>
								<sci:member>RenameList</sci:member>
								<sci:value>&quot;pchembl_value&quot;,&quot;Aff_NET_Pred&quot;</sci:value>
							</sci:arg>
							<sci:arg name="RenameList" type="PropertyNameType" required="false" visibility="visible" multi="true">
								<sci:help>If provided, it causes the properties given in PropertyList to be 
renamed to the corresponding name in this list.  If not provided, then no properties are renamed.</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Keep</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:18:38 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	&apos;Keep &apos; . #displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -295</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{456195EF-9708-4367-B3DD-21EBF3796604}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Keeps only the specified properties</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, retains only the properties found in the list of property names specified by &lt;i&gt;PropertyList&lt;/i&gt;.  All other properties are removed.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To remove specified properties from each data record, use 
&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>With only the specified properties remaining</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>122</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Keep Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="R Custom Script" version="2">
							<sci:arg name="Script" type="LinkSingleParentParameterType" required="true" visibility="visible" multi="false">
								<sci:metaproplist>
									<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">TextType</sci:propval>
								</sci:metaproplist>
								<sci:help>Text of the R script you wish to run.  Enter the script just as if you were typing it in R.</sci:help>
								<sci:value>Script</sci:value>
							</sci:arg>
							<sci:arg name="InputFrame" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Name to use in R script for data.frame containing input data.  Data in this frame will be sent out the pass port on completion of the script.</sci:help>
								<sci:value>AllData</sci:value>
							</sci:arg>
							<sci:arg name="ResultsFrame" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Name to use in R script for data.frame containing calculation results, which will be sent out the fail port.</sci:help>
								<sci:value>Results</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>PlotWidth</sci:member>
								<sci:member>PlotHeight</sci:member>
								<sci:member>ShowRInputOutput</sci:member>
								<sci:member>R Functions Source</sci:member>
							</sci:arg>
							<sci:arg name="R Functions Source" type="URLType" required="false" visibility="visible" multi="false">
								<sci:help>Optional name of a file containing an R script or custom R functions you wish to use in the Script.  This file will be sourced in R before the Script is executed.
</sci:help>
								<sci:member>Embed External Scripts</sci:member>
							</sci:arg>
							<sci:arg name="Embed External Scripts" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>If True, indicates that the scripts specified by &lt;i&gt;R Functions Source&lt;/i&gt; are to be embedded in the R script created by this component. This can be useful for debugging purposes. If False, the scripts are concatenated into a separate temporary file that is executed using the R source() function.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="PlotWidth" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>Width in pixels of any plots created by the script</sci:help>
								<sci:value>600</sci:value>
							</sci:arg>
							<sci:arg name="PlotHeight" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>Height in pixels of any plots created by the script</sci:help>
								<sci:value>600</sci:value>
							</sci:arg>
							<sci:arg name="ShowRInputOutput" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>Specify whether or not to show the R script and the R stdout in Notepad viewers</sci:help>
								<sci:legalval>Script</sci:legalval>
								<sci:legalval>StdOutput</sci:legalval>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="TextType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:value>RExitStatus,PlotName,RFunctionsFile,ShowRScript,ShowRStdOutput,RDir,ScriptPrefix,ScriptSuffix,RParScript,RPlotWidth,RPlotHeight,RplotPrefix,stderr,ExternalScript</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This is a prototype feature, which we are making available
because we feel it is a useful technique to improve data throughput speeds in many situations. In particular, it can help to optimize resource use on multi-CPU and multi-core machines and on server clusters.
We welcome your feedback on scenarios where it works well, scenarios where it does not, and any other opinions you have about this utility.
&lt;/p&gt;&lt;hr/&gt;&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:value>$(R_Run_Remote)</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware)</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>100000000</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
								<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>$(R_Server)</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="LearnedPropertyName" type="StringType" required="false" visibility="visible" multi="false">
								<sci:value>&quot;$(Component Name)&quot;</sci:value>
							</sci:arg>
							<sci:arg name="Name" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false">
								<sci:metaproplist>
									<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">StringType</sci:propval>
								</sci:metaproplist>
								<sci:value>Name</sci:value>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Jul 20 12:16:31 2017</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>R Custom Script</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{140C906F-960F-4DCD-84FD-D7DBF7277F0D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>378 -295</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Executes R script</sci:value>
								<sci:value>Use this component to write your own custom R script for operating on incoming data records. All records coming into the component are put into an R data frame whose name is given by &lt;i&gt;InputFrame&lt;/i&gt;.  After your script has executed, the data in this frame are sent out the Pass port, including any changes made to the frame within the R script.
&lt;p&gt;
Any plots created in your script are sent out the Fail port and can be viewed with the &lt;a href=&quot;javascript:DoLink(&apos;{45979297-7C23-4374-BE33-1424E90A09A6}&apos;)&quot;&gt;R Plot Viewer&lt;/a&gt;.
&lt;p&gt;
If your R script creates a data frame with the name given by &lt;i&gt;ResultsFrame&lt;/i&gt;, the data in this frame are also  sent out the Fail port.  (You may wish to use this frame for summary statistics, for example.)
&lt;p&gt;
&lt;b&gt;Hints on manipulating R data frames&lt;/b&gt;
&lt;p&gt;
Assume that the &lt;i&gt;InputFrame&lt;/i&gt; name is &quot;AllData&quot; and that there are three properties -- ALogP, prop1, and Property 2 -- defined on each Pipeline Pilot data record (in that order).  Within the R script, you can refer to the ALogP values in any of the following ways:
&lt;p&gt;
&lt;code&gt;
ALogP&lt;br&gt;
AllData$ALogP&lt;br&gt;
AllData[&quot;ALogP&quot;]
AllData[1]&lt;br&gt;
AllData[,1]&lt;br&gt;
AllData[[1]]&lt;br&gt;
&lt;/code&gt;
&lt;p&gt;
Note that the following assignment in R does not change the value of ALogP within the AllData frame:
&lt;p&gt;
&lt;code&gt;ALogP &amp;lt;- ALogP + 0.5&lt;/code&gt;
&lt;p&gt;
while the following assignment does change the value within the frame:
&lt;p&gt;
&lt;code&gt;AllData$ALogP &amp;lt;- ALogP + 0.5&lt;/code&gt;
&lt;p&gt;
(The reason for this behavior is that after the data are read into R but before your script is executed, the &lt;code&gt;attach&lt;/code&gt; function is called on the data frame.  This allows you to refer to columns in the frame by column name alone, but any changes you make to the column name variables are made outside the frame.)
&lt;p&gt;
Properties with embedded spaces or special R characters such as &quot;#&quot; must always be quoted if referred to by name:
&lt;p&gt;
&lt;code&gt;AllData$&quot;Property 2&quot;&lt;/code&gt;
&lt;p&gt;
To add a new column to the frame, use the cbind function:
&lt;p&gt;
&lt;code&gt;AllData &amp;lt;- cbind(AllData, LogPCalc=ALogP+0.5)&lt;/code&gt;
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;Molecular structures are ignored by this component and will not be passed through. 
&lt;li&gt;An array property with N elements on an input data record will be converted to N scalar properties in order that the records conform to the R data frame structure.
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more information on writing R scripts, see &lt;a href=&quot;javascript:DoLink(&apos;http://cran.r-project.org/doc/manuals/R-intro.html&apos;)&quot;&gt;An Introduction to R&lt;/a&gt;.
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/rstats/docs/r_stats.pdf&apos;)&quot;&gt;R Statistics Components User Guide &lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://www.r-project.org/&apos;)&quot;&gt;R Project for Statistical Computing Web Site&lt;/a&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;http://finzi.psych.upenn.edu/search.html&apos;)&quot;&gt;R Help Search Web Site&lt;/a&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.0.1523</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
								<sci:legalval>Cant Replace With Copy</sci:legalval>
								<sci:legalval>Cant Open</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/rstats</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>120</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Analysis and Statistics\R Statistics\Manipulators\R Custom Script</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.CountRecords.1">
						<sci:component name="Count and Index Data" version="2">
							<sci:arg name="Counter Property" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The name of the property to hold the data record count. If the name begins with &quot;@&quot;, this is a global property name and is updated each time a data record is received. Otherwise, it is a local property name and a new property by that name will be created on each data record and given the current value (i.e., the count).&lt;/p&gt;

</sci:help>
								<sci:member>Start Index</sci:member>
								<sci:member>Check if Property Already in Use</sci:member>
								<sci:value>RMergeIndex</sci:value>
							</sci:arg>
							<sci:arg name="Start Index" type="LongType" required="true" visibility="visible" multi="false">
								<sci:help>The index (i.e., number) used to start the sequence.</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Check if Property Already in Use" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Generates an error if the property already exists. This helps prevent overwriting data created by another component. Default is &quot;True&quot;.
</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/core</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Sep 08 07:31:45 2006</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{7BF3D951-BF75-70A2-8B2C-AD8909791909}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Count and Index Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Count and Index Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>666 -470</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Counts the number of data records and puts the count in a property</sci:value>
								<sci:value>&lt;p&gt;Use this component to create a numerical index of data records and to keep track of the total number of records.  The value of &lt;i&gt;Counter Property&lt;/i&gt; is incremented each time a data record enters the component.&lt;/p&gt;

&lt;p&gt;This component can be used in two modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a local property (does not start with &quot;@&quot;), a new property by that name is created on each data record and given the value of the current count.&lt;/li&gt;
&lt;li&gt;If &lt;i&gt;Counter Property&lt;/i&gt; is the name of a global property (starts with &quot;@&quot;), then each data record that passes through causes this global record count to be incremented, but values are not added to the passing records.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>6.0.0.44</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>126</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Count and Index Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:connectid from="123" to="124" type="true"/>
					<sci:connectid from="124" to="125" type="true"/>
					<sci:connectid from="125" to="127" type="true"/>
					<sci:connectid from="122" to="120" type="true"/>
					<sci:connectid from="120" to="123" type="true"/>
					<sci:connectid from="120" to="126" type="false"/>
					<sci:connectid from="126" to="124" type="true"/>
					<sci:version iVal="1"/>
				</sci:protocol>
			</sci:data>
			<sci:connectid from="3" to="4" type="true"/>
			<sci:connectid from="5" to="9" type="true"/>
			<sci:connectid from="9" to="12" type="true"/>
			<sci:connectid from="9" to="13" type="false"/>
			<sci:connectid from="14" to="6" type="true"/>
			<sci:connectid from="6" to="7" type="true"/>
			<sci:connectid from="7" to="8" type="true"/>
			<sci:connectid from="15" to="16" type="true"/>
			<sci:connectid from="16" to="11" type="true"/>
			<sci:connectid from="11" to="24" type="true"/>
			<sci:connectid from="24" to="27" type="true"/>
			<sci:connectid from="27" to="20" type="true"/>
			<sci:connectid from="27" to="17" type="true"/>
			<sci:connectid from="28" to="29" type="true"/>
			<sci:connectid from="17" to="25" type="true"/>
			<sci:connectid from="17" to="28" type="true"/>
			<sci:connectid from="17" to="30" type="true"/>
			<sci:connectid from="17" to="26" type="true"/>
			<sci:connectid from="17" to="30" type="false"/>
			<sci:connectid from="17" to="26" type="false"/>
			<sci:connectid from="30" to="31" type="true"/>
		</sci:protocol>
	</sci:dbitem>
<!-- Exported protocol -->
<sci:component name="8.0 Protocol Warning" version="2">
<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
<sci:help>Component Icon</sci:help>
<sci:value>PROTOCOLNODE</sci:value>
</sci:arg>
<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
<sci:help>Protocol Sticky Notes</sci:help>
<sci:value>%VERSION 3%</sci:value>
<sci:value>400 -219 1222 221</sci:value>
<sci:value>250 120 20</sci:value>
<sci:value>WARNING! This is a Pipeline Pilot protocol written in version 8.0 or later. It contains features that are not supported in earlier versions of Pipeline Pilot.</sci:value>
</sci:arg>
</sci:component>
</sci:data>
